-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity SobelFilter is
port (
    INPUT_STREAM_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    INPUT_STREAM_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    INPUT_STREAM_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    INPUT_STREAM_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    OUTPUT_STREAM_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    OUTPUT_STREAM_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    OUTPUT_STREAM_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    OUTPUT_STREAM_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUTPUT_STREAM_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUTPUT_STREAM_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUTPUT_STREAM_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    Enabled_V : IN STD_LOGIC_VECTOR (0 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    INPUT_STREAM_TVALID : IN STD_LOGIC;
    INPUT_STREAM_TREADY : OUT STD_LOGIC;
    OUTPUT_STREAM_TVALID : OUT STD_LOGIC;
    OUTPUT_STREAM_TREADY : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of SobelFilter is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "SobelFilter,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7a200tsbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=11.000000,HLS_SYN_LAT=8337997,HLS_SYN_TPT=8336076,HLS_SYN_MEM=27,HLS_SYN_DSP=111,HLS_SYN_FF=13412,HLS_SYN_LUT=22734,HLS_VERSION=2018_2}";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal SobelFilter_entry3_U0_ap_start : STD_LOGIC;
    signal SobelFilter_entry3_U0_ap_done : STD_LOGIC;
    signal SobelFilter_entry3_U0_ap_continue : STD_LOGIC;
    signal SobelFilter_entry3_U0_ap_idle : STD_LOGIC;
    signal SobelFilter_entry3_U0_ap_ready : STD_LOGIC;
    signal SobelFilter_entry3_U0_start_out : STD_LOGIC;
    signal SobelFilter_entry3_U0_start_write : STD_LOGIC;
    signal SobelFilter_entry3_U0_Enabled_V_out_din : STD_LOGIC_VECTOR (0 downto 0);
    signal SobelFilter_entry3_U0_Enabled_V_out_write : STD_LOGIC;
    signal Block_proc308667_U0_ap_start : STD_LOGIC;
    signal Block_proc308667_U0_ap_done : STD_LOGIC;
    signal Block_proc308667_U0_ap_continue : STD_LOGIC;
    signal Block_proc308667_U0_ap_idle : STD_LOGIC;
    signal Block_proc308667_U0_ap_ready : STD_LOGIC;
    signal Block_proc308667_U0_Enabled_V_read : STD_LOGIC;
    signal Block_proc308667_U0_Enabled_V_out_din : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc308667_U0_Enabled_V_out_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_start : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_done : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_continue : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_idle : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2Mat_U0_start_out : STD_LOGIC;
    signal AXIvideo2Mat_U0_start_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_INPUT_STREAM_TREADY : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AXIvideo2Mat_U0_img_data_stream_0_V_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AXIvideo2Mat_U0_img_data_stream_1_V_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AXIvideo2Mat_U0_img_data_stream_2_V_write : STD_LOGIC;
    signal Block_proc307309_U0_ap_start : STD_LOGIC;
    signal Block_proc307309_U0_ap_done : STD_LOGIC;
    signal Block_proc307309_U0_ap_continue : STD_LOGIC;
    signal Block_proc307309_U0_ap_idle : STD_LOGIC;
    signal Block_proc307309_U0_ap_ready : STD_LOGIC;
    signal Block_proc307309_U0_Enabled_V_read : STD_LOGIC;
    signal Block_proc307309_U0_img_0_data_stream_0_V_read : STD_LOGIC;
    signal Block_proc307309_U0_img_0_data_stream_1_V_read : STD_LOGIC;
    signal Block_proc307309_U0_img_0_data_stream_2_V_read : STD_LOGIC;
    signal Block_proc307309_U0_OUTPUT_STREAM_TDATA : STD_LOGIC_VECTOR (23 downto 0);
    signal Block_proc307309_U0_OUTPUT_STREAM_TVALID : STD_LOGIC;
    signal Block_proc307309_U0_OUTPUT_STREAM_TKEEP : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_proc307309_U0_OUTPUT_STREAM_TSTRB : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_proc307309_U0_OUTPUT_STREAM_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc307309_U0_OUTPUT_STREAM_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc307309_U0_OUTPUT_STREAM_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc307309_U0_OUTPUT_STREAM_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sync_continue : STD_LOGIC;
    signal Enabled_V_c1_full_n : STD_LOGIC;
    signal Enabled_V_c1_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal Enabled_V_c1_empty_n : STD_LOGIC;
    signal Enabled_V_c_full_n : STD_LOGIC;
    signal Enabled_V_c_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal Enabled_V_c_empty_n : STD_LOGIC;
    signal img_0_data_stream_0_full_n : STD_LOGIC;
    signal img_0_data_stream_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_0_data_stream_0_empty_n : STD_LOGIC;
    signal img_0_data_stream_1_full_n : STD_LOGIC;
    signal img_0_data_stream_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_0_data_stream_1_empty_n : STD_LOGIC;
    signal img_0_data_stream_2_full_n : STD_LOGIC;
    signal img_0_data_stream_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_0_data_stream_2_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_AXIvideo2Mat_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_AXIvideo2Mat_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_SobelFilter_entry3_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_SobelFilter_entry3_U0_ap_ready : STD_LOGIC;
    signal SobelFilter_entry3_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal start_for_Block_proc308667_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_proc308667_U0_full_n : STD_LOGIC;
    signal start_for_Block_proc308667_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_proc308667_U0_empty_n : STD_LOGIC;
    signal Block_proc308667_U0_start_full_n : STD_LOGIC;
    signal Block_proc308667_U0_start_write : STD_LOGIC;
    signal start_for_Block_proc307309_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_proc307309_U0_full_n : STD_LOGIC;
    signal start_for_Block_proc307309_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_proc307309_U0_empty_n : STD_LOGIC;
    signal Block_proc307309_U0_start_full_n : STD_LOGIC;
    signal Block_proc307309_U0_start_write : STD_LOGIC;

    component SobelFilter_entry3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        Enabled_V : IN STD_LOGIC_VECTOR (0 downto 0);
        Enabled_V_out_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        Enabled_V_out_full_n : IN STD_LOGIC;
        Enabled_V_out_write : OUT STD_LOGIC );
    end component;


    component Block_proc308667 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Enabled_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        Enabled_V_empty_n : IN STD_LOGIC;
        Enabled_V_read : OUT STD_LOGIC;
        Enabled_V_out_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        Enabled_V_out_full_n : IN STD_LOGIC;
        Enabled_V_out_write : OUT STD_LOGIC );
    end component;


    component AXIvideo2Mat IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        INPUT_STREAM_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
        INPUT_STREAM_TVALID : IN STD_LOGIC;
        INPUT_STREAM_TREADY : OUT STD_LOGIC;
        INPUT_STREAM_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
        INPUT_STREAM_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
        INPUT_STREAM_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        INPUT_STREAM_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        INPUT_STREAM_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        INPUT_STREAM_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        img_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_0_V_full_n : IN STD_LOGIC;
        img_data_stream_0_V_write : OUT STD_LOGIC;
        img_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_1_V_full_n : IN STD_LOGIC;
        img_data_stream_1_V_write : OUT STD_LOGIC;
        img_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_2_V_full_n : IN STD_LOGIC;
        img_data_stream_2_V_write : OUT STD_LOGIC );
    end component;


    component Block_proc307309 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Enabled_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        Enabled_V_empty_n : IN STD_LOGIC;
        Enabled_V_read : OUT STD_LOGIC;
        img_0_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_0_data_stream_0_V_empty_n : IN STD_LOGIC;
        img_0_data_stream_0_V_read : OUT STD_LOGIC;
        img_0_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_0_data_stream_1_V_empty_n : IN STD_LOGIC;
        img_0_data_stream_1_V_read : OUT STD_LOGIC;
        img_0_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_0_data_stream_2_V_empty_n : IN STD_LOGIC;
        img_0_data_stream_2_V_read : OUT STD_LOGIC;
        OUTPUT_STREAM_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
        OUTPUT_STREAM_TVALID : OUT STD_LOGIC;
        OUTPUT_STREAM_TREADY : IN STD_LOGIC;
        OUTPUT_STREAM_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
        OUTPUT_STREAM_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
        OUTPUT_STREAM_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        OUTPUT_STREAM_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        OUTPUT_STREAM_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        OUTPUT_STREAM_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component fifo_w1_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w1_d3_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w8_d1_A_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Block_pGfk IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Block_pHfu IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    SobelFilter_entry3_U0 : component SobelFilter_entry3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => SobelFilter_entry3_U0_ap_start,
        start_full_n => start_for_Block_proc308667_U0_full_n,
        ap_done => SobelFilter_entry3_U0_ap_done,
        ap_continue => SobelFilter_entry3_U0_ap_continue,
        ap_idle => SobelFilter_entry3_U0_ap_idle,
        ap_ready => SobelFilter_entry3_U0_ap_ready,
        start_out => SobelFilter_entry3_U0_start_out,
        start_write => SobelFilter_entry3_U0_start_write,
        Enabled_V => Enabled_V,
        Enabled_V_out_din => SobelFilter_entry3_U0_Enabled_V_out_din,
        Enabled_V_out_full_n => Enabled_V_c1_full_n,
        Enabled_V_out_write => SobelFilter_entry3_U0_Enabled_V_out_write);

    Block_proc308667_U0 : component Block_proc308667
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_proc308667_U0_ap_start,
        ap_done => Block_proc308667_U0_ap_done,
        ap_continue => Block_proc308667_U0_ap_continue,
        ap_idle => Block_proc308667_U0_ap_idle,
        ap_ready => Block_proc308667_U0_ap_ready,
        Enabled_V_dout => Enabled_V_c1_dout,
        Enabled_V_empty_n => Enabled_V_c1_empty_n,
        Enabled_V_read => Block_proc308667_U0_Enabled_V_read,
        Enabled_V_out_din => Block_proc308667_U0_Enabled_V_out_din,
        Enabled_V_out_full_n => Enabled_V_c_full_n,
        Enabled_V_out_write => Block_proc308667_U0_Enabled_V_out_write);

    AXIvideo2Mat_U0 : component AXIvideo2Mat
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => AXIvideo2Mat_U0_ap_start,
        start_full_n => start_for_Block_proc307309_U0_full_n,
        ap_done => AXIvideo2Mat_U0_ap_done,
        ap_continue => AXIvideo2Mat_U0_ap_continue,
        ap_idle => AXIvideo2Mat_U0_ap_idle,
        ap_ready => AXIvideo2Mat_U0_ap_ready,
        start_out => AXIvideo2Mat_U0_start_out,
        start_write => AXIvideo2Mat_U0_start_write,
        INPUT_STREAM_TDATA => INPUT_STREAM_TDATA,
        INPUT_STREAM_TVALID => INPUT_STREAM_TVALID,
        INPUT_STREAM_TREADY => AXIvideo2Mat_U0_INPUT_STREAM_TREADY,
        INPUT_STREAM_TKEEP => INPUT_STREAM_TKEEP,
        INPUT_STREAM_TSTRB => INPUT_STREAM_TSTRB,
        INPUT_STREAM_TUSER => INPUT_STREAM_TUSER,
        INPUT_STREAM_TLAST => INPUT_STREAM_TLAST,
        INPUT_STREAM_TID => INPUT_STREAM_TID,
        INPUT_STREAM_TDEST => INPUT_STREAM_TDEST,
        img_data_stream_0_V_din => AXIvideo2Mat_U0_img_data_stream_0_V_din,
        img_data_stream_0_V_full_n => img_0_data_stream_0_full_n,
        img_data_stream_0_V_write => AXIvideo2Mat_U0_img_data_stream_0_V_write,
        img_data_stream_1_V_din => AXIvideo2Mat_U0_img_data_stream_1_V_din,
        img_data_stream_1_V_full_n => img_0_data_stream_1_full_n,
        img_data_stream_1_V_write => AXIvideo2Mat_U0_img_data_stream_1_V_write,
        img_data_stream_2_V_din => AXIvideo2Mat_U0_img_data_stream_2_V_din,
        img_data_stream_2_V_full_n => img_0_data_stream_2_full_n,
        img_data_stream_2_V_write => AXIvideo2Mat_U0_img_data_stream_2_V_write);

    Block_proc307309_U0 : component Block_proc307309
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_proc307309_U0_ap_start,
        ap_done => Block_proc307309_U0_ap_done,
        ap_continue => Block_proc307309_U0_ap_continue,
        ap_idle => Block_proc307309_U0_ap_idle,
        ap_ready => Block_proc307309_U0_ap_ready,
        Enabled_V_dout => Enabled_V_c_dout,
        Enabled_V_empty_n => Enabled_V_c_empty_n,
        Enabled_V_read => Block_proc307309_U0_Enabled_V_read,
        img_0_data_stream_0_V_dout => img_0_data_stream_0_dout,
        img_0_data_stream_0_V_empty_n => img_0_data_stream_0_empty_n,
        img_0_data_stream_0_V_read => Block_proc307309_U0_img_0_data_stream_0_V_read,
        img_0_data_stream_1_V_dout => img_0_data_stream_1_dout,
        img_0_data_stream_1_V_empty_n => img_0_data_stream_1_empty_n,
        img_0_data_stream_1_V_read => Block_proc307309_U0_img_0_data_stream_1_V_read,
        img_0_data_stream_2_V_dout => img_0_data_stream_2_dout,
        img_0_data_stream_2_V_empty_n => img_0_data_stream_2_empty_n,
        img_0_data_stream_2_V_read => Block_proc307309_U0_img_0_data_stream_2_V_read,
        OUTPUT_STREAM_TDATA => Block_proc307309_U0_OUTPUT_STREAM_TDATA,
        OUTPUT_STREAM_TVALID => Block_proc307309_U0_OUTPUT_STREAM_TVALID,
        OUTPUT_STREAM_TREADY => OUTPUT_STREAM_TREADY,
        OUTPUT_STREAM_TKEEP => Block_proc307309_U0_OUTPUT_STREAM_TKEEP,
        OUTPUT_STREAM_TSTRB => Block_proc307309_U0_OUTPUT_STREAM_TSTRB,
        OUTPUT_STREAM_TUSER => Block_proc307309_U0_OUTPUT_STREAM_TUSER,
        OUTPUT_STREAM_TLAST => Block_proc307309_U0_OUTPUT_STREAM_TLAST,
        OUTPUT_STREAM_TID => Block_proc307309_U0_OUTPUT_STREAM_TID,
        OUTPUT_STREAM_TDEST => Block_proc307309_U0_OUTPUT_STREAM_TDEST);

    Enabled_V_c1_U : component fifo_w1_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => SobelFilter_entry3_U0_Enabled_V_out_din,
        if_full_n => Enabled_V_c1_full_n,
        if_write => SobelFilter_entry3_U0_Enabled_V_out_write,
        if_dout => Enabled_V_c1_dout,
        if_empty_n => Enabled_V_c1_empty_n,
        if_read => Block_proc308667_U0_Enabled_V_read);

    Enabled_V_c_U : component fifo_w1_d3_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_proc308667_U0_Enabled_V_out_din,
        if_full_n => Enabled_V_c_full_n,
        if_write => Block_proc308667_U0_Enabled_V_out_write,
        if_dout => Enabled_V_c_dout,
        if_empty_n => Enabled_V_c_empty_n,
        if_read => Block_proc307309_U0_Enabled_V_read);

    img_0_data_stream_0_U : component fifo_w8_d1_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_data_stream_0_V_din,
        if_full_n => img_0_data_stream_0_full_n,
        if_write => AXIvideo2Mat_U0_img_data_stream_0_V_write,
        if_dout => img_0_data_stream_0_dout,
        if_empty_n => img_0_data_stream_0_empty_n,
        if_read => Block_proc307309_U0_img_0_data_stream_0_V_read);

    img_0_data_stream_1_U : component fifo_w8_d1_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_data_stream_1_V_din,
        if_full_n => img_0_data_stream_1_full_n,
        if_write => AXIvideo2Mat_U0_img_data_stream_1_V_write,
        if_dout => img_0_data_stream_1_dout,
        if_empty_n => img_0_data_stream_1_empty_n,
        if_read => Block_proc307309_U0_img_0_data_stream_1_V_read);

    img_0_data_stream_2_U : component fifo_w8_d1_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_data_stream_2_V_din,
        if_full_n => img_0_data_stream_2_full_n,
        if_write => AXIvideo2Mat_U0_img_data_stream_2_V_write,
        if_dout => img_0_data_stream_2_dout,
        if_empty_n => img_0_data_stream_2_empty_n,
        if_read => Block_proc307309_U0_img_0_data_stream_2_V_read);

    start_for_Block_pGfk_U : component start_for_Block_pGfk
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Block_proc308667_U0_din,
        if_full_n => start_for_Block_proc308667_U0_full_n,
        if_write => SobelFilter_entry3_U0_start_write,
        if_dout => start_for_Block_proc308667_U0_dout,
        if_empty_n => start_for_Block_proc308667_U0_empty_n,
        if_read => Block_proc308667_U0_ap_ready);

    start_for_Block_pHfu_U : component start_for_Block_pHfu
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Block_proc307309_U0_din,
        if_full_n => start_for_Block_proc307309_U0_full_n,
        if_write => AXIvideo2Mat_U0_start_write,
        if_dout => start_for_Block_proc307309_U0_dout,
        if_empty_n => start_for_Block_proc307309_U0_empty_n,
        if_read => Block_proc307309_U0_ap_ready);





    ap_sync_reg_AXIvideo2Mat_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= ap_sync_AXIvideo2Mat_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_SobelFilter_entry3_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_SobelFilter_entry3_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_SobelFilter_entry3_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_SobelFilter_entry3_U0_ap_ready <= ap_sync_SobelFilter_entry3_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    AXIvideo2Mat_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_0 = AXIvideo2Mat_U0_ap_ready) and (ap_sync_ready = ap_const_logic_1))) then 
                AXIvideo2Mat_U0_ap_ready_count <= std_logic_vector(unsigned(AXIvideo2Mat_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_const_logic_1 = AXIvideo2Mat_U0_ap_ready) and (ap_sync_ready = ap_const_logic_0))) then 
                AXIvideo2Mat_U0_ap_ready_count <= std_logic_vector(unsigned(AXIvideo2Mat_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    SobelFilter_entry3_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (ap_const_logic_0 = SobelFilter_entry3_U0_ap_ready))) then 
                SobelFilter_entry3_U0_ap_ready_count <= std_logic_vector(unsigned(SobelFilter_entry3_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_const_logic_1 = SobelFilter_entry3_U0_ap_ready) and (ap_sync_ready = ap_const_logic_0))) then 
                SobelFilter_entry3_U0_ap_ready_count <= std_logic_vector(unsigned(SobelFilter_entry3_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;
    AXIvideo2Mat_U0_ap_continue <= ap_const_logic_1;
    AXIvideo2Mat_U0_ap_start <= ((ap_sync_reg_AXIvideo2Mat_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Block_proc307309_U0_ap_continue <= ap_const_logic_1;
    Block_proc307309_U0_ap_start <= start_for_Block_proc307309_U0_empty_n;
    Block_proc307309_U0_start_full_n <= ap_const_logic_1;
    Block_proc307309_U0_start_write <= ap_const_logic_0;
    Block_proc308667_U0_ap_continue <= ap_const_logic_1;
    Block_proc308667_U0_ap_start <= start_for_Block_proc308667_U0_empty_n;
    Block_proc308667_U0_start_full_n <= ap_const_logic_1;
    Block_proc308667_U0_start_write <= ap_const_logic_0;
    INPUT_STREAM_TREADY <= AXIvideo2Mat_U0_INPUT_STREAM_TREADY;
    OUTPUT_STREAM_TDATA <= Block_proc307309_U0_OUTPUT_STREAM_TDATA;
    OUTPUT_STREAM_TDEST <= Block_proc307309_U0_OUTPUT_STREAM_TDEST;
    OUTPUT_STREAM_TID <= Block_proc307309_U0_OUTPUT_STREAM_TID;
    OUTPUT_STREAM_TKEEP <= Block_proc307309_U0_OUTPUT_STREAM_TKEEP;
    OUTPUT_STREAM_TLAST <= Block_proc307309_U0_OUTPUT_STREAM_TLAST;
    OUTPUT_STREAM_TSTRB <= Block_proc307309_U0_OUTPUT_STREAM_TSTRB;
    OUTPUT_STREAM_TUSER <= Block_proc307309_U0_OUTPUT_STREAM_TUSER;
    OUTPUT_STREAM_TVALID <= Block_proc307309_U0_OUTPUT_STREAM_TVALID;
    SobelFilter_entry3_U0_ap_continue <= ap_const_logic_1;
    SobelFilter_entry3_U0_ap_start <= ((ap_sync_reg_SobelFilter_entry3_U0_ap_ready xor ap_const_logic_1) and ap_start);
    ap_done <= Block_proc307309_U0_ap_done;
    ap_idle <= (SobelFilter_entry3_U0_ap_idle and Block_proc308667_U0_ap_idle and Block_proc307309_U0_ap_idle and AXIvideo2Mat_U0_ap_idle);
    ap_ready <= ap_sync_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_AXIvideo2Mat_U0_ap_ready <= (ap_sync_reg_AXIvideo2Mat_U0_ap_ready or AXIvideo2Mat_U0_ap_ready);
    ap_sync_SobelFilter_entry3_U0_ap_ready <= (ap_sync_reg_SobelFilter_entry3_U0_ap_ready or SobelFilter_entry3_U0_ap_ready);
    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= Block_proc307309_U0_ap_done;
    ap_sync_ready <= (ap_sync_SobelFilter_entry3_U0_ap_ready and ap_sync_AXIvideo2Mat_U0_ap_ready);
    start_for_Block_proc307309_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Block_proc308667_U0_din <= (0=>ap_const_logic_1, others=>'-');
end behav;
