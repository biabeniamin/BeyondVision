-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Adder2 is
generic (
    C_S_AXI_CONTROL_BUS_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_CONTROL_BUS_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    INPUT_STREAM_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    INPUT_STREAM_TVALID : IN STD_LOGIC;
    INPUT_STREAM_TREADY : OUT STD_LOGIC;
    INPUT_STREAM_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    INPUT_STREAM_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    INPUT_STREAM_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
    INPUT_STREAM_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    INPUT_STREAM_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
    OUTPUT_STREAM_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUTPUT_STREAM_TVALID : OUT STD_LOGIC;
    OUTPUT_STREAM_TREADY : IN STD_LOGIC;
    OUTPUT_STREAM_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    OUTPUT_STREAM_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    OUTPUT_STREAM_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
    OUTPUT_STREAM_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUTPUT_STREAM_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    OUTPUT_STREAM_TDEST : OUT STD_LOGIC_VECTOR (5 downto 0);
    s_axi_CONTROL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CONTROL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CONTROL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CONTROL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CONTROL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of Adder2 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "Adder2,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.217250,HLS_SYN_LAT=4185604,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=705,HLS_SYN_LUT=1133,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_790 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000011110010000";
    constant ap_const_lv23_7FBC00 : STD_LOGIC_VECTOR (22 downto 0) := "11111111011110000000000";
    constant ap_const_lv23_1 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal agg_result_a_ap_vld : STD_LOGIC;
    signal agg_result_b_ap_vld : STD_LOGIC;
    signal agg_result_c_ap_vld : STD_LOGIC;
    signal agg_result_d_ap_vld : STD_LOGIC;
    signal agg_result_e_ap_vld : STD_LOGIC;
    signal agg_result_f_ap_vld : STD_LOGIC;
    signal INPUT_STREAM_V_data_V_0_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal INPUT_STREAM_V_data_V_0_vld_in : STD_LOGIC;
    signal INPUT_STREAM_V_data_V_0_vld_out : STD_LOGIC;
    signal INPUT_STREAM_V_data_V_0_ack_in : STD_LOGIC;
    signal INPUT_STREAM_V_data_V_0_ack_out : STD_LOGIC;
    signal INPUT_STREAM_V_data_V_0_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal INPUT_STREAM_V_data_V_0_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal INPUT_STREAM_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal INPUT_STREAM_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal INPUT_STREAM_V_data_V_0_sel : STD_LOGIC;
    signal INPUT_STREAM_V_data_V_0_load_A : STD_LOGIC;
    signal INPUT_STREAM_V_data_V_0_load_B : STD_LOGIC;
    signal INPUT_STREAM_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal INPUT_STREAM_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal INPUT_STREAM_V_keep_V_0_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal INPUT_STREAM_V_keep_V_0_vld_in : STD_LOGIC;
    signal INPUT_STREAM_V_keep_V_0_vld_out : STD_LOGIC;
    signal INPUT_STREAM_V_keep_V_0_ack_in : STD_LOGIC;
    signal INPUT_STREAM_V_keep_V_0_ack_out : STD_LOGIC;
    signal INPUT_STREAM_V_keep_V_0_payload_A : STD_LOGIC_VECTOR (3 downto 0);
    signal INPUT_STREAM_V_keep_V_0_payload_B : STD_LOGIC_VECTOR (3 downto 0);
    signal INPUT_STREAM_V_keep_V_0_sel_rd : STD_LOGIC := '0';
    signal INPUT_STREAM_V_keep_V_0_sel_wr : STD_LOGIC := '0';
    signal INPUT_STREAM_V_keep_V_0_sel : STD_LOGIC;
    signal INPUT_STREAM_V_keep_V_0_load_A : STD_LOGIC;
    signal INPUT_STREAM_V_keep_V_0_load_B : STD_LOGIC;
    signal INPUT_STREAM_V_keep_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal INPUT_STREAM_V_keep_V_0_state_cmp_full : STD_LOGIC;
    signal INPUT_STREAM_V_strb_V_0_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal INPUT_STREAM_V_strb_V_0_vld_in : STD_LOGIC;
    signal INPUT_STREAM_V_strb_V_0_vld_out : STD_LOGIC;
    signal INPUT_STREAM_V_strb_V_0_ack_in : STD_LOGIC;
    signal INPUT_STREAM_V_strb_V_0_ack_out : STD_LOGIC;
    signal INPUT_STREAM_V_strb_V_0_payload_A : STD_LOGIC_VECTOR (3 downto 0);
    signal INPUT_STREAM_V_strb_V_0_payload_B : STD_LOGIC_VECTOR (3 downto 0);
    signal INPUT_STREAM_V_strb_V_0_sel_rd : STD_LOGIC := '0';
    signal INPUT_STREAM_V_strb_V_0_sel_wr : STD_LOGIC := '0';
    signal INPUT_STREAM_V_strb_V_0_sel : STD_LOGIC;
    signal INPUT_STREAM_V_strb_V_0_load_A : STD_LOGIC;
    signal INPUT_STREAM_V_strb_V_0_load_B : STD_LOGIC;
    signal INPUT_STREAM_V_strb_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal INPUT_STREAM_V_strb_V_0_state_cmp_full : STD_LOGIC;
    signal INPUT_STREAM_V_user_V_0_data_out : STD_LOGIC_VECTOR (1 downto 0);
    signal INPUT_STREAM_V_user_V_0_vld_in : STD_LOGIC;
    signal INPUT_STREAM_V_user_V_0_vld_out : STD_LOGIC;
    signal INPUT_STREAM_V_user_V_0_ack_in : STD_LOGIC;
    signal INPUT_STREAM_V_user_V_0_ack_out : STD_LOGIC;
    signal INPUT_STREAM_V_user_V_0_payload_A : STD_LOGIC_VECTOR (1 downto 0);
    signal INPUT_STREAM_V_user_V_0_payload_B : STD_LOGIC_VECTOR (1 downto 0);
    signal INPUT_STREAM_V_user_V_0_sel_rd : STD_LOGIC := '0';
    signal INPUT_STREAM_V_user_V_0_sel_wr : STD_LOGIC := '0';
    signal INPUT_STREAM_V_user_V_0_sel : STD_LOGIC;
    signal INPUT_STREAM_V_user_V_0_load_A : STD_LOGIC;
    signal INPUT_STREAM_V_user_V_0_load_B : STD_LOGIC;
    signal INPUT_STREAM_V_user_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal INPUT_STREAM_V_user_V_0_state_cmp_full : STD_LOGIC;
    signal INPUT_STREAM_V_last_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_last_V_0_vld_in : STD_LOGIC;
    signal INPUT_STREAM_V_last_V_0_vld_out : STD_LOGIC;
    signal INPUT_STREAM_V_last_V_0_ack_in : STD_LOGIC;
    signal INPUT_STREAM_V_last_V_0_ack_out : STD_LOGIC;
    signal INPUT_STREAM_V_last_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_last_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_STREAM_V_last_V_0_sel_rd : STD_LOGIC := '0';
    signal INPUT_STREAM_V_last_V_0_sel_wr : STD_LOGIC := '0';
    signal INPUT_STREAM_V_last_V_0_sel : STD_LOGIC;
    signal INPUT_STREAM_V_last_V_0_load_A : STD_LOGIC;
    signal INPUT_STREAM_V_last_V_0_load_B : STD_LOGIC;
    signal INPUT_STREAM_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal INPUT_STREAM_V_last_V_0_state_cmp_full : STD_LOGIC;
    signal INPUT_STREAM_V_id_V_0_data_out : STD_LOGIC_VECTOR (4 downto 0);
    signal INPUT_STREAM_V_id_V_0_vld_in : STD_LOGIC;
    signal INPUT_STREAM_V_id_V_0_vld_out : STD_LOGIC;
    signal INPUT_STREAM_V_id_V_0_ack_in : STD_LOGIC;
    signal INPUT_STREAM_V_id_V_0_ack_out : STD_LOGIC;
    signal INPUT_STREAM_V_id_V_0_payload_A : STD_LOGIC_VECTOR (4 downto 0);
    signal INPUT_STREAM_V_id_V_0_payload_B : STD_LOGIC_VECTOR (4 downto 0);
    signal INPUT_STREAM_V_id_V_0_sel_rd : STD_LOGIC := '0';
    signal INPUT_STREAM_V_id_V_0_sel_wr : STD_LOGIC := '0';
    signal INPUT_STREAM_V_id_V_0_sel : STD_LOGIC;
    signal INPUT_STREAM_V_id_V_0_load_A : STD_LOGIC;
    signal INPUT_STREAM_V_id_V_0_load_B : STD_LOGIC;
    signal INPUT_STREAM_V_id_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal INPUT_STREAM_V_id_V_0_state_cmp_full : STD_LOGIC;
    signal INPUT_STREAM_V_dest_V_0_data_out : STD_LOGIC_VECTOR (5 downto 0);
    signal INPUT_STREAM_V_dest_V_0_vld_in : STD_LOGIC;
    signal INPUT_STREAM_V_dest_V_0_vld_out : STD_LOGIC;
    signal INPUT_STREAM_V_dest_V_0_ack_in : STD_LOGIC;
    signal INPUT_STREAM_V_dest_V_0_ack_out : STD_LOGIC;
    signal INPUT_STREAM_V_dest_V_0_payload_A : STD_LOGIC_VECTOR (5 downto 0);
    signal INPUT_STREAM_V_dest_V_0_payload_B : STD_LOGIC_VECTOR (5 downto 0);
    signal INPUT_STREAM_V_dest_V_0_sel_rd : STD_LOGIC := '0';
    signal INPUT_STREAM_V_dest_V_0_sel_wr : STD_LOGIC := '0';
    signal INPUT_STREAM_V_dest_V_0_sel : STD_LOGIC;
    signal INPUT_STREAM_V_dest_V_0_load_A : STD_LOGIC;
    signal INPUT_STREAM_V_dest_V_0_load_B : STD_LOGIC;
    signal INPUT_STREAM_V_dest_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal INPUT_STREAM_V_dest_V_0_state_cmp_full : STD_LOGIC;
    signal searched : STD_LOGIC_VECTOR (31 downto 0);
    signal OUTPUT_STREAM_V_data_V_1_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal OUTPUT_STREAM_V_data_V_1_vld_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_data_V_1_vld_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_data_V_1_ack_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_data_V_1_ack_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_data_V_1_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal OUTPUT_STREAM_V_data_V_1_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal OUTPUT_STREAM_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_data_V_1_sel : STD_LOGIC;
    signal OUTPUT_STREAM_V_data_V_1_load_A : STD_LOGIC;
    signal OUTPUT_STREAM_V_data_V_1_load_B : STD_LOGIC;
    signal OUTPUT_STREAM_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal OUTPUT_STREAM_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal OUTPUT_STREAM_V_keep_V_1_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal OUTPUT_STREAM_V_keep_V_1_vld_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_keep_V_1_vld_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_keep_V_1_ack_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_keep_V_1_ack_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_keep_V_1_payload_A : STD_LOGIC_VECTOR (3 downto 0);
    signal OUTPUT_STREAM_V_keep_V_1_payload_B : STD_LOGIC_VECTOR (3 downto 0);
    signal OUTPUT_STREAM_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_keep_V_1_sel_wr : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_keep_V_1_sel : STD_LOGIC;
    signal OUTPUT_STREAM_V_keep_V_1_load_A : STD_LOGIC;
    signal OUTPUT_STREAM_V_keep_V_1_load_B : STD_LOGIC;
    signal OUTPUT_STREAM_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal OUTPUT_STREAM_V_keep_V_1_state_cmp_full : STD_LOGIC;
    signal OUTPUT_STREAM_V_strb_V_1_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal OUTPUT_STREAM_V_strb_V_1_vld_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_strb_V_1_vld_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_strb_V_1_ack_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_strb_V_1_ack_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_strb_V_1_payload_A : STD_LOGIC_VECTOR (3 downto 0);
    signal OUTPUT_STREAM_V_strb_V_1_payload_B : STD_LOGIC_VECTOR (3 downto 0);
    signal OUTPUT_STREAM_V_strb_V_1_sel_rd : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_strb_V_1_sel_wr : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_strb_V_1_sel : STD_LOGIC;
    signal OUTPUT_STREAM_V_strb_V_1_load_A : STD_LOGIC;
    signal OUTPUT_STREAM_V_strb_V_1_load_B : STD_LOGIC;
    signal OUTPUT_STREAM_V_strb_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal OUTPUT_STREAM_V_strb_V_1_state_cmp_full : STD_LOGIC;
    signal OUTPUT_STREAM_V_user_V_1_data_out : STD_LOGIC_VECTOR (1 downto 0);
    signal OUTPUT_STREAM_V_user_V_1_vld_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_user_V_1_vld_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_user_V_1_ack_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_user_V_1_ack_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_user_V_1_payload_A : STD_LOGIC_VECTOR (1 downto 0);
    signal OUTPUT_STREAM_V_user_V_1_payload_B : STD_LOGIC_VECTOR (1 downto 0);
    signal OUTPUT_STREAM_V_user_V_1_sel_rd : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_user_V_1_sel_wr : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_user_V_1_sel : STD_LOGIC;
    signal OUTPUT_STREAM_V_user_V_1_load_A : STD_LOGIC;
    signal OUTPUT_STREAM_V_user_V_1_load_B : STD_LOGIC;
    signal OUTPUT_STREAM_V_user_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal OUTPUT_STREAM_V_user_V_1_state_cmp_full : STD_LOGIC;
    signal OUTPUT_STREAM_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal OUTPUT_STREAM_V_last_V_1_vld_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_last_V_1_vld_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_last_V_1_ack_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_last_V_1_ack_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal OUTPUT_STREAM_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal OUTPUT_STREAM_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_last_V_1_sel : STD_LOGIC;
    signal OUTPUT_STREAM_V_last_V_1_load_A : STD_LOGIC;
    signal OUTPUT_STREAM_V_last_V_1_load_B : STD_LOGIC;
    signal OUTPUT_STREAM_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal OUTPUT_STREAM_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal OUTPUT_STREAM_V_id_V_1_data_out : STD_LOGIC_VECTOR (4 downto 0);
    signal OUTPUT_STREAM_V_id_V_1_vld_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_id_V_1_vld_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_id_V_1_ack_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_id_V_1_ack_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_id_V_1_payload_A : STD_LOGIC_VECTOR (4 downto 0);
    signal OUTPUT_STREAM_V_id_V_1_payload_B : STD_LOGIC_VECTOR (4 downto 0);
    signal OUTPUT_STREAM_V_id_V_1_sel_rd : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_id_V_1_sel_wr : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_id_V_1_sel : STD_LOGIC;
    signal OUTPUT_STREAM_V_id_V_1_load_A : STD_LOGIC;
    signal OUTPUT_STREAM_V_id_V_1_load_B : STD_LOGIC;
    signal OUTPUT_STREAM_V_id_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal OUTPUT_STREAM_V_id_V_1_state_cmp_full : STD_LOGIC;
    signal OUTPUT_STREAM_V_dest_V_1_data_out : STD_LOGIC_VECTOR (5 downto 0);
    signal OUTPUT_STREAM_V_dest_V_1_vld_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_dest_V_1_vld_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_dest_V_1_ack_in : STD_LOGIC;
    signal OUTPUT_STREAM_V_dest_V_1_ack_out : STD_LOGIC;
    signal OUTPUT_STREAM_V_dest_V_1_payload_A : STD_LOGIC_VECTOR (5 downto 0);
    signal OUTPUT_STREAM_V_dest_V_1_payload_B : STD_LOGIC_VECTOR (5 downto 0);
    signal OUTPUT_STREAM_V_dest_V_1_sel_rd : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_dest_V_1_sel_wr : STD_LOGIC := '0';
    signal OUTPUT_STREAM_V_dest_V_1_sel : STD_LOGIC;
    signal OUTPUT_STREAM_V_dest_V_1_load_A : STD_LOGIC;
    signal OUTPUT_STREAM_V_dest_V_1_load_B : STD_LOGIC;
    signal OUTPUT_STREAM_V_dest_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal OUTPUT_STREAM_V_dest_V_1_state_cmp_full : STD_LOGIC;
    signal INPUT_STREAM_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_fu_213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal OUTPUT_STREAM_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal tmp_reg_259 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal tmp_reg_259_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in1Count_reg_191 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal in1Count_3_fu_219_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal in1Count_3_reg_263 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_data_V_reg_269 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_keep_V_reg_274 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_strb_V_reg_279 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_user_V_reg_284 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_last_V_reg_289 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_id_V_reg_294 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_dest_V_reg_299 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_predicate_tran4to5_state2 : BOOLEAN;
    signal ap_phi_mux_in1Count_phi_fu_195_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal in1Count_1_reg_203 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_block_state5 : BOOLEAN;
    signal in1Count_1_cast_fu_253_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_1138 : BOOLEAN;

    component Adder2_CONTROL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        agg_result_a : IN STD_LOGIC_VECTOR (31 downto 0);
        agg_result_a_ap_vld : IN STD_LOGIC;
        agg_result_b : IN STD_LOGIC_VECTOR (31 downto 0);
        agg_result_b_ap_vld : IN STD_LOGIC;
        agg_result_c : IN STD_LOGIC_VECTOR (31 downto 0);
        agg_result_c_ap_vld : IN STD_LOGIC;
        agg_result_d : IN STD_LOGIC_VECTOR (31 downto 0);
        agg_result_d_ap_vld : IN STD_LOGIC;
        agg_result_e : IN STD_LOGIC_VECTOR (31 downto 0);
        agg_result_e_ap_vld : IN STD_LOGIC;
        agg_result_f : IN STD_LOGIC_VECTOR (31 downto 0);
        agg_result_f_ap_vld : IN STD_LOGIC;
        searched : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    Adder2_CONTROL_BUS_s_axi_U : component Adder2_CONTROL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CONTROL_BUS_AWVALID,
        AWREADY => s_axi_CONTROL_BUS_AWREADY,
        AWADDR => s_axi_CONTROL_BUS_AWADDR,
        WVALID => s_axi_CONTROL_BUS_WVALID,
        WREADY => s_axi_CONTROL_BUS_WREADY,
        WDATA => s_axi_CONTROL_BUS_WDATA,
        WSTRB => s_axi_CONTROL_BUS_WSTRB,
        ARVALID => s_axi_CONTROL_BUS_ARVALID,
        ARREADY => s_axi_CONTROL_BUS_ARREADY,
        ARADDR => s_axi_CONTROL_BUS_ARADDR,
        RVALID => s_axi_CONTROL_BUS_RVALID,
        RREADY => s_axi_CONTROL_BUS_RREADY,
        RDATA => s_axi_CONTROL_BUS_RDATA,
        RRESP => s_axi_CONTROL_BUS_RRESP,
        BVALID => s_axi_CONTROL_BUS_BVALID,
        BREADY => s_axi_CONTROL_BUS_BREADY,
        BRESP => s_axi_CONTROL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        agg_result_a => ap_const_lv32_0,
        agg_result_a_ap_vld => agg_result_a_ap_vld,
        agg_result_b => in1Count_1_cast_fu_253_p1,
        agg_result_b_ap_vld => agg_result_b_ap_vld,
        agg_result_c => in1Count_1_cast_fu_253_p1,
        agg_result_c_ap_vld => agg_result_c_ap_vld,
        agg_result_d => ap_const_lv32_0,
        agg_result_d_ap_vld => agg_result_d_ap_vld,
        agg_result_e => ap_const_lv32_0,
        agg_result_e_ap_vld => agg_result_e_ap_vld,
        agg_result_f => ap_const_lv32_790,
        agg_result_f_ap_vld => agg_result_f_ap_vld,
        searched => searched);





    INPUT_STREAM_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_data_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_data_V_0_vld_out))) then 
                                        INPUT_STREAM_V_data_V_0_sel_rd <= not(INPUT_STREAM_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_data_V_0_ack_in) and (ap_const_logic_1 = INPUT_STREAM_V_data_V_0_vld_in))) then 
                                        INPUT_STREAM_V_data_V_0_sel_wr <= not(INPUT_STREAM_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = INPUT_STREAM_V_data_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_in)) or ((ap_const_lv2_3 = INPUT_STREAM_V_data_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_data_V_0_ack_out)))) then 
                    INPUT_STREAM_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = INPUT_STREAM_V_data_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_ack_out)) or ((ap_const_lv2_3 = INPUT_STREAM_V_data_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_data_V_0_vld_in)))) then 
                    INPUT_STREAM_V_data_V_0_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_data_V_0_ack_out))) and not(((ap_const_logic_0 = INPUT_STREAM_V_data_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_data_V_0_vld_in))) and (ap_const_lv2_3 = INPUT_STREAM_V_data_V_0_state)) or ((ap_const_lv2_1 = INPUT_STREAM_V_data_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_data_V_0_ack_out)) or ((ap_const_lv2_2 = INPUT_STREAM_V_data_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_data_V_0_vld_in)))) then 
                    INPUT_STREAM_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    INPUT_STREAM_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_dest_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_dest_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_vld_out))) then 
                                        INPUT_STREAM_V_dest_V_0_sel_rd <= not(INPUT_STREAM_V_dest_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_dest_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_dest_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_ack_in) and (ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_vld_in))) then 
                                        INPUT_STREAM_V_dest_V_0_sel_wr <= not(INPUT_STREAM_V_dest_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_dest_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_dest_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = INPUT_STREAM_V_dest_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_dest_V_0_vld_in)) or ((ap_const_lv2_3 = INPUT_STREAM_V_dest_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_dest_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_ack_out)))) then 
                    INPUT_STREAM_V_dest_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = INPUT_STREAM_V_dest_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_dest_V_0_ack_out)) or ((ap_const_lv2_3 = INPUT_STREAM_V_dest_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_dest_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_vld_in)))) then 
                    INPUT_STREAM_V_dest_V_0_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = INPUT_STREAM_V_dest_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_ack_out))) and not(((ap_const_logic_0 = INPUT_STREAM_V_dest_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_vld_in))) and (ap_const_lv2_3 = INPUT_STREAM_V_dest_V_0_state)) or ((ap_const_lv2_1 = INPUT_STREAM_V_dest_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_ack_out)) or ((ap_const_lv2_2 = INPUT_STREAM_V_dest_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_vld_in)))) then 
                    INPUT_STREAM_V_dest_V_0_state <= ap_const_lv2_3;
                else 
                    INPUT_STREAM_V_dest_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_id_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_id_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_id_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_id_V_0_vld_out))) then 
                                        INPUT_STREAM_V_id_V_0_sel_rd <= not(INPUT_STREAM_V_id_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_id_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_id_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_id_V_0_ack_in) and (ap_const_logic_1 = INPUT_STREAM_V_id_V_0_vld_in))) then 
                                        INPUT_STREAM_V_id_V_0_sel_wr <= not(INPUT_STREAM_V_id_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_id_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_id_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = INPUT_STREAM_V_id_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_id_V_0_vld_in)) or ((ap_const_lv2_3 = INPUT_STREAM_V_id_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_id_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_id_V_0_ack_out)))) then 
                    INPUT_STREAM_V_id_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = INPUT_STREAM_V_id_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_id_V_0_ack_out)) or ((ap_const_lv2_3 = INPUT_STREAM_V_id_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_id_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_id_V_0_vld_in)))) then 
                    INPUT_STREAM_V_id_V_0_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = INPUT_STREAM_V_id_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_id_V_0_ack_out))) and not(((ap_const_logic_0 = INPUT_STREAM_V_id_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_id_V_0_vld_in))) and (ap_const_lv2_3 = INPUT_STREAM_V_id_V_0_state)) or ((ap_const_lv2_1 = INPUT_STREAM_V_id_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_id_V_0_ack_out)) or ((ap_const_lv2_2 = INPUT_STREAM_V_id_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_id_V_0_vld_in)))) then 
                    INPUT_STREAM_V_id_V_0_state <= ap_const_lv2_3;
                else 
                    INPUT_STREAM_V_id_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_keep_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_keep_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_keep_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_keep_V_0_vld_out))) then 
                                        INPUT_STREAM_V_keep_V_0_sel_rd <= not(INPUT_STREAM_V_keep_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_keep_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_keep_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_keep_V_0_ack_in) and (ap_const_logic_1 = INPUT_STREAM_V_keep_V_0_vld_in))) then 
                                        INPUT_STREAM_V_keep_V_0_sel_wr <= not(INPUT_STREAM_V_keep_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_keep_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_keep_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = INPUT_STREAM_V_keep_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_keep_V_0_vld_in)) or ((ap_const_lv2_3 = INPUT_STREAM_V_keep_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_keep_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_keep_V_0_ack_out)))) then 
                    INPUT_STREAM_V_keep_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = INPUT_STREAM_V_keep_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_keep_V_0_ack_out)) or ((ap_const_lv2_3 = INPUT_STREAM_V_keep_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_keep_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_keep_V_0_vld_in)))) then 
                    INPUT_STREAM_V_keep_V_0_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = INPUT_STREAM_V_keep_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_keep_V_0_ack_out))) and not(((ap_const_logic_0 = INPUT_STREAM_V_keep_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_keep_V_0_vld_in))) and (ap_const_lv2_3 = INPUT_STREAM_V_keep_V_0_state)) or ((ap_const_lv2_1 = INPUT_STREAM_V_keep_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_keep_V_0_ack_out)) or ((ap_const_lv2_2 = INPUT_STREAM_V_keep_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_keep_V_0_vld_in)))) then 
                    INPUT_STREAM_V_keep_V_0_state <= ap_const_lv2_3;
                else 
                    INPUT_STREAM_V_keep_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_last_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_last_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_last_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_last_V_0_vld_out))) then 
                                        INPUT_STREAM_V_last_V_0_sel_rd <= not(INPUT_STREAM_V_last_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_last_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_last_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_last_V_0_ack_in) and (ap_const_logic_1 = INPUT_STREAM_V_last_V_0_vld_in))) then 
                                        INPUT_STREAM_V_last_V_0_sel_wr <= not(INPUT_STREAM_V_last_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = INPUT_STREAM_V_last_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_last_V_0_vld_in)) or ((ap_const_lv2_3 = INPUT_STREAM_V_last_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_last_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_last_V_0_ack_out)))) then 
                    INPUT_STREAM_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = INPUT_STREAM_V_last_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_last_V_0_ack_out)) or ((ap_const_lv2_3 = INPUT_STREAM_V_last_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_last_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_last_V_0_vld_in)))) then 
                    INPUT_STREAM_V_last_V_0_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = INPUT_STREAM_V_last_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_last_V_0_ack_out))) and not(((ap_const_logic_0 = INPUT_STREAM_V_last_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_last_V_0_vld_in))) and (ap_const_lv2_3 = INPUT_STREAM_V_last_V_0_state)) or ((ap_const_lv2_1 = INPUT_STREAM_V_last_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_last_V_0_ack_out)) or ((ap_const_lv2_2 = INPUT_STREAM_V_last_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_last_V_0_vld_in)))) then 
                    INPUT_STREAM_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    INPUT_STREAM_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_strb_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_strb_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_strb_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_strb_V_0_vld_out))) then 
                                        INPUT_STREAM_V_strb_V_0_sel_rd <= not(INPUT_STREAM_V_strb_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_strb_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_strb_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_strb_V_0_ack_in) and (ap_const_logic_1 = INPUT_STREAM_V_strb_V_0_vld_in))) then 
                                        INPUT_STREAM_V_strb_V_0_sel_wr <= not(INPUT_STREAM_V_strb_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_strb_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_strb_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = INPUT_STREAM_V_strb_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_strb_V_0_vld_in)) or ((ap_const_lv2_3 = INPUT_STREAM_V_strb_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_strb_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_strb_V_0_ack_out)))) then 
                    INPUT_STREAM_V_strb_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = INPUT_STREAM_V_strb_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_strb_V_0_ack_out)) or ((ap_const_lv2_3 = INPUT_STREAM_V_strb_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_strb_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_strb_V_0_vld_in)))) then 
                    INPUT_STREAM_V_strb_V_0_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = INPUT_STREAM_V_strb_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_strb_V_0_ack_out))) and not(((ap_const_logic_0 = INPUT_STREAM_V_strb_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_strb_V_0_vld_in))) and (ap_const_lv2_3 = INPUT_STREAM_V_strb_V_0_state)) or ((ap_const_lv2_1 = INPUT_STREAM_V_strb_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_strb_V_0_ack_out)) or ((ap_const_lv2_2 = INPUT_STREAM_V_strb_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_strb_V_0_vld_in)))) then 
                    INPUT_STREAM_V_strb_V_0_state <= ap_const_lv2_3;
                else 
                    INPUT_STREAM_V_strb_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_user_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_user_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_user_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_user_V_0_vld_out))) then 
                                        INPUT_STREAM_V_user_V_0_sel_rd <= not(INPUT_STREAM_V_user_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_user_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_user_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_V_user_V_0_ack_in) and (ap_const_logic_1 = INPUT_STREAM_V_user_V_0_vld_in))) then 
                                        INPUT_STREAM_V_user_V_0_sel_wr <= not(INPUT_STREAM_V_user_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_V_user_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_V_user_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = INPUT_STREAM_V_user_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_user_V_0_vld_in)) or ((ap_const_lv2_3 = INPUT_STREAM_V_user_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_user_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_user_V_0_ack_out)))) then 
                    INPUT_STREAM_V_user_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = INPUT_STREAM_V_user_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_user_V_0_ack_out)) or ((ap_const_lv2_3 = INPUT_STREAM_V_user_V_0_state) and (ap_const_logic_0 = INPUT_STREAM_V_user_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_user_V_0_vld_in)))) then 
                    INPUT_STREAM_V_user_V_0_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = INPUT_STREAM_V_user_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_V_user_V_0_ack_out))) and not(((ap_const_logic_0 = INPUT_STREAM_V_user_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_V_user_V_0_vld_in))) and (ap_const_lv2_3 = INPUT_STREAM_V_user_V_0_state)) or ((ap_const_lv2_1 = INPUT_STREAM_V_user_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_user_V_0_ack_out)) or ((ap_const_lv2_2 = INPUT_STREAM_V_user_V_0_state) and (ap_const_logic_1 = INPUT_STREAM_V_user_V_0_vld_in)))) then 
                    INPUT_STREAM_V_user_V_0_state <= ap_const_lv2_3;
                else 
                    INPUT_STREAM_V_user_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_data_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_data_V_1_vld_out))) then 
                                        OUTPUT_STREAM_V_data_V_1_sel_rd <= not(OUTPUT_STREAM_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_data_V_1_ack_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_data_V_1_vld_in))) then 
                                        OUTPUT_STREAM_V_data_V_1_sel_wr <= not(OUTPUT_STREAM_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = OUTPUT_STREAM_V_data_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_vld_in)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_data_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_data_V_1_ack_out)))) then 
                    OUTPUT_STREAM_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = OUTPUT_STREAM_V_data_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_out)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_data_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_data_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_data_V_1_ack_out))) and not(((ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_data_V_1_vld_in))) and (ap_const_lv2_3 = OUTPUT_STREAM_V_data_V_1_state)) or ((ap_const_lv2_1 = OUTPUT_STREAM_V_data_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_data_V_1_ack_out)) or ((ap_const_lv2_2 = OUTPUT_STREAM_V_data_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_data_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    OUTPUT_STREAM_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_dest_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_dest_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_dest_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_dest_V_1_vld_out))) then 
                                        OUTPUT_STREAM_V_dest_V_1_sel_rd <= not(OUTPUT_STREAM_V_dest_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_dest_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_dest_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_dest_V_1_ack_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_dest_V_1_vld_in))) then 
                                        OUTPUT_STREAM_V_dest_V_1_sel_wr <= not(OUTPUT_STREAM_V_dest_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_dest_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_dest_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = OUTPUT_STREAM_V_dest_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_dest_V_1_vld_in)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_dest_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_dest_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_dest_V_1_ack_out)))) then 
                    OUTPUT_STREAM_V_dest_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = OUTPUT_STREAM_V_dest_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_dest_V_1_ack_out)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_dest_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_dest_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_dest_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_dest_V_1_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = OUTPUT_STREAM_V_dest_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_dest_V_1_ack_out))) and not(((ap_const_logic_0 = OUTPUT_STREAM_V_dest_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_dest_V_1_vld_in))) and (ap_const_lv2_3 = OUTPUT_STREAM_V_dest_V_1_state)) or ((ap_const_lv2_1 = OUTPUT_STREAM_V_dest_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_dest_V_1_ack_out)) or ((ap_const_lv2_2 = OUTPUT_STREAM_V_dest_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_dest_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_dest_V_1_state <= ap_const_lv2_3;
                else 
                    OUTPUT_STREAM_V_dest_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_id_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_id_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_id_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_id_V_1_vld_out))) then 
                                        OUTPUT_STREAM_V_id_V_1_sel_rd <= not(OUTPUT_STREAM_V_id_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_id_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_id_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_id_V_1_ack_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_id_V_1_vld_in))) then 
                                        OUTPUT_STREAM_V_id_V_1_sel_wr <= not(OUTPUT_STREAM_V_id_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_id_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_id_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = OUTPUT_STREAM_V_id_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_id_V_1_vld_in)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_id_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_id_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_id_V_1_ack_out)))) then 
                    OUTPUT_STREAM_V_id_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = OUTPUT_STREAM_V_id_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_id_V_1_ack_out)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_id_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_id_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_id_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_id_V_1_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = OUTPUT_STREAM_V_id_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_id_V_1_ack_out))) and not(((ap_const_logic_0 = OUTPUT_STREAM_V_id_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_id_V_1_vld_in))) and (ap_const_lv2_3 = OUTPUT_STREAM_V_id_V_1_state)) or ((ap_const_lv2_1 = OUTPUT_STREAM_V_id_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_id_V_1_ack_out)) or ((ap_const_lv2_2 = OUTPUT_STREAM_V_id_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_id_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_id_V_1_state <= ap_const_lv2_3;
                else 
                    OUTPUT_STREAM_V_id_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_keep_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_keep_V_1_vld_out))) then 
                                        OUTPUT_STREAM_V_keep_V_1_sel_rd <= not(OUTPUT_STREAM_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_keep_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_keep_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_keep_V_1_ack_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_keep_V_1_vld_in))) then 
                                        OUTPUT_STREAM_V_keep_V_1_sel_wr <= not(OUTPUT_STREAM_V_keep_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = OUTPUT_STREAM_V_keep_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_keep_V_1_vld_in)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_keep_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_keep_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_keep_V_1_ack_out)))) then 
                    OUTPUT_STREAM_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = OUTPUT_STREAM_V_keep_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_keep_V_1_ack_out)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_keep_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_keep_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_keep_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_keep_V_1_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = OUTPUT_STREAM_V_keep_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_keep_V_1_ack_out))) and not(((ap_const_logic_0 = OUTPUT_STREAM_V_keep_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_keep_V_1_vld_in))) and (ap_const_lv2_3 = OUTPUT_STREAM_V_keep_V_1_state)) or ((ap_const_lv2_1 = OUTPUT_STREAM_V_keep_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_keep_V_1_ack_out)) or ((ap_const_lv2_2 = OUTPUT_STREAM_V_keep_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_keep_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    OUTPUT_STREAM_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_last_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_last_V_1_vld_out))) then 
                                        OUTPUT_STREAM_V_last_V_1_sel_rd <= not(OUTPUT_STREAM_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_last_V_1_ack_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_last_V_1_vld_in))) then 
                                        OUTPUT_STREAM_V_last_V_1_sel_wr <= not(OUTPUT_STREAM_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = OUTPUT_STREAM_V_last_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_last_V_1_vld_in)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_last_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_last_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_last_V_1_ack_out)))) then 
                    OUTPUT_STREAM_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = OUTPUT_STREAM_V_last_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_last_V_1_ack_out)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_last_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_last_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_last_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_last_V_1_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = OUTPUT_STREAM_V_last_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_last_V_1_ack_out))) and not(((ap_const_logic_0 = OUTPUT_STREAM_V_last_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_last_V_1_vld_in))) and (ap_const_lv2_3 = OUTPUT_STREAM_V_last_V_1_state)) or ((ap_const_lv2_1 = OUTPUT_STREAM_V_last_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_last_V_1_ack_out)) or ((ap_const_lv2_2 = OUTPUT_STREAM_V_last_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_last_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    OUTPUT_STREAM_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_strb_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_strb_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_strb_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_strb_V_1_vld_out))) then 
                                        OUTPUT_STREAM_V_strb_V_1_sel_rd <= not(OUTPUT_STREAM_V_strb_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_strb_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_strb_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_strb_V_1_ack_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_strb_V_1_vld_in))) then 
                                        OUTPUT_STREAM_V_strb_V_1_sel_wr <= not(OUTPUT_STREAM_V_strb_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_strb_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_strb_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = OUTPUT_STREAM_V_strb_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_strb_V_1_vld_in)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_strb_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_strb_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_strb_V_1_ack_out)))) then 
                    OUTPUT_STREAM_V_strb_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = OUTPUT_STREAM_V_strb_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_strb_V_1_ack_out)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_strb_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_strb_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_strb_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_strb_V_1_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = OUTPUT_STREAM_V_strb_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_strb_V_1_ack_out))) and not(((ap_const_logic_0 = OUTPUT_STREAM_V_strb_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_strb_V_1_vld_in))) and (ap_const_lv2_3 = OUTPUT_STREAM_V_strb_V_1_state)) or ((ap_const_lv2_1 = OUTPUT_STREAM_V_strb_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_strb_V_1_ack_out)) or ((ap_const_lv2_2 = OUTPUT_STREAM_V_strb_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_strb_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_strb_V_1_state <= ap_const_lv2_3;
                else 
                    OUTPUT_STREAM_V_strb_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_user_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_user_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_user_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_user_V_1_vld_out))) then 
                                        OUTPUT_STREAM_V_user_V_1_sel_rd <= not(OUTPUT_STREAM_V_user_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_user_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_user_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_V_user_V_1_ack_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_user_V_1_vld_in))) then 
                                        OUTPUT_STREAM_V_user_V_1_sel_wr <= not(OUTPUT_STREAM_V_user_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_V_user_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_V_user_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_lv2_2 = OUTPUT_STREAM_V_user_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_user_V_1_vld_in)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_user_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_user_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_user_V_1_ack_out)))) then 
                    OUTPUT_STREAM_V_user_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_lv2_1 = OUTPUT_STREAM_V_user_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_user_V_1_ack_out)) or ((ap_const_lv2_3 = OUTPUT_STREAM_V_user_V_1_state) and (ap_const_logic_0 = OUTPUT_STREAM_V_user_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_user_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_user_V_1_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = OUTPUT_STREAM_V_user_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_V_user_V_1_ack_out))) and not(((ap_const_logic_0 = OUTPUT_STREAM_V_user_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_V_user_V_1_vld_in))) and (ap_const_lv2_3 = OUTPUT_STREAM_V_user_V_1_state)) or ((ap_const_lv2_1 = OUTPUT_STREAM_V_user_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_user_V_1_ack_out)) or ((ap_const_lv2_2 = OUTPUT_STREAM_V_user_V_1_state) and (ap_const_logic_1 = OUTPUT_STREAM_V_user_V_1_vld_in)))) then 
                    OUTPUT_STREAM_V_user_V_1_state <= ap_const_lv2_3;
                else 
                    OUTPUT_STREAM_V_user_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_predicate_tran4to5_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    in1Count_1_reg_203_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_const_boolean_1 = ap_condition_1138)) then 
                    in1Count_1_reg_203 <= in1Count_3_reg_263;
                elsif (((tmp_fu_213_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    in1Count_1_reg_203 <= ap_phi_mux_in1Count_phi_fu_195_p4;
                end if;
            end if; 
        end if;
    end process;

    in1Count_reg_191_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_259 = ap_const_lv1_1) and (tmp_last_V_reg_289 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                in1Count_reg_191 <= in1Count_3_reg_263;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                in1Count_reg_191 <= ap_const_lv23_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_data_V_0_load_A)) then
                INPUT_STREAM_V_data_V_0_payload_A <= INPUT_STREAM_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_data_V_0_load_B)) then
                INPUT_STREAM_V_data_V_0_payload_B <= INPUT_STREAM_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_load_A)) then
                INPUT_STREAM_V_dest_V_0_payload_A <= INPUT_STREAM_TDEST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_load_B)) then
                INPUT_STREAM_V_dest_V_0_payload_B <= INPUT_STREAM_TDEST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_id_V_0_load_A)) then
                INPUT_STREAM_V_id_V_0_payload_A <= INPUT_STREAM_TID;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_id_V_0_load_B)) then
                INPUT_STREAM_V_id_V_0_payload_B <= INPUT_STREAM_TID;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_keep_V_0_load_A)) then
                INPUT_STREAM_V_keep_V_0_payload_A <= INPUT_STREAM_TKEEP;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_keep_V_0_load_B)) then
                INPUT_STREAM_V_keep_V_0_payload_B <= INPUT_STREAM_TKEEP;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_last_V_0_load_A)) then
                INPUT_STREAM_V_last_V_0_payload_A <= INPUT_STREAM_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_last_V_0_load_B)) then
                INPUT_STREAM_V_last_V_0_payload_B <= INPUT_STREAM_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_strb_V_0_load_A)) then
                INPUT_STREAM_V_strb_V_0_payload_A <= INPUT_STREAM_TSTRB;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_strb_V_0_load_B)) then
                INPUT_STREAM_V_strb_V_0_payload_B <= INPUT_STREAM_TSTRB;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_user_V_0_load_A)) then
                INPUT_STREAM_V_user_V_0_payload_A <= INPUT_STREAM_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_V_user_V_0_load_B)) then
                INPUT_STREAM_V_user_V_0_payload_B <= INPUT_STREAM_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_data_V_1_load_A)) then
                OUTPUT_STREAM_V_data_V_1_payload_A <= tmp_data_V_reg_269;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_data_V_1_load_B)) then
                OUTPUT_STREAM_V_data_V_1_payload_B <= tmp_data_V_reg_269;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_dest_V_1_load_A)) then
                OUTPUT_STREAM_V_dest_V_1_payload_A <= tmp_dest_V_reg_299;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_dest_V_1_load_B)) then
                OUTPUT_STREAM_V_dest_V_1_payload_B <= tmp_dest_V_reg_299;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_id_V_1_load_A)) then
                OUTPUT_STREAM_V_id_V_1_payload_A <= tmp_id_V_reg_294;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_id_V_1_load_B)) then
                OUTPUT_STREAM_V_id_V_1_payload_B <= tmp_id_V_reg_294;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_keep_V_1_load_A)) then
                OUTPUT_STREAM_V_keep_V_1_payload_A <= tmp_keep_V_reg_274;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_keep_V_1_load_B)) then
                OUTPUT_STREAM_V_keep_V_1_payload_B <= tmp_keep_V_reg_274;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_last_V_1_load_A)) then
                OUTPUT_STREAM_V_last_V_1_payload_A <= tmp_last_V_reg_289;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_last_V_1_load_B)) then
                OUTPUT_STREAM_V_last_V_1_payload_B <= tmp_last_V_reg_289;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_strb_V_1_load_A)) then
                OUTPUT_STREAM_V_strb_V_1_payload_A <= tmp_strb_V_reg_279;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_strb_V_1_load_B)) then
                OUTPUT_STREAM_V_strb_V_1_payload_B <= tmp_strb_V_reg_279;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_user_V_1_load_A)) then
                OUTPUT_STREAM_V_user_V_1_payload_A <= tmp_user_V_reg_284;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_V_user_V_1_load_B)) then
                OUTPUT_STREAM_V_user_V_1_payload_B <= tmp_user_V_reg_284;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                in1Count_3_reg_263 <= in1Count_3_fu_219_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_fu_213_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_data_V_reg_269 <= INPUT_STREAM_V_data_V_0_data_out;
                tmp_dest_V_reg_299 <= INPUT_STREAM_V_dest_V_0_data_out;
                tmp_id_V_reg_294 <= INPUT_STREAM_V_id_V_0_data_out;
                tmp_keep_V_reg_274 <= INPUT_STREAM_V_keep_V_0_data_out;
                tmp_last_V_reg_289 <= INPUT_STREAM_V_last_V_0_data_out;
                tmp_strb_V_reg_279 <= INPUT_STREAM_V_strb_V_0_data_out;
                tmp_user_V_reg_284 <= INPUT_STREAM_V_user_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_reg_259 <= tmp_fu_213_p2;
                tmp_reg_259_pp0_iter1_reg <= tmp_reg_259;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, OUTPUT_STREAM_V_data_V_1_ack_in, OUTPUT_STREAM_V_keep_V_1_ack_in, OUTPUT_STREAM_V_strb_V_1_ack_in, OUTPUT_STREAM_V_user_V_1_ack_in, OUTPUT_STREAM_V_last_V_1_ack_in, OUTPUT_STREAM_V_id_V_1_ack_in, OUTPUT_STREAM_V_dest_V_1_ack_in, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone, ap_CS_fsm_state5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_dest_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_id_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_last_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_user_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_strb_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_keep_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    INPUT_STREAM_TDATA_blk_n_assign_proc : process(INPUT_STREAM_V_data_V_0_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, tmp_fu_213_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_fu_213_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            INPUT_STREAM_TDATA_blk_n <= INPUT_STREAM_V_data_V_0_state(0);
        else 
            INPUT_STREAM_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    INPUT_STREAM_TREADY <= INPUT_STREAM_V_dest_V_0_state(1);
    INPUT_STREAM_V_data_V_0_ack_in <= INPUT_STREAM_V_data_V_0_state(1);

    INPUT_STREAM_V_data_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, tmp_fu_213_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_fu_213_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            INPUT_STREAM_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            INPUT_STREAM_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    INPUT_STREAM_V_data_V_0_data_out_assign_proc : process(INPUT_STREAM_V_data_V_0_payload_A, INPUT_STREAM_V_data_V_0_payload_B, INPUT_STREAM_V_data_V_0_sel)
    begin
        if ((ap_const_logic_1 = INPUT_STREAM_V_data_V_0_sel)) then 
            INPUT_STREAM_V_data_V_0_data_out <= INPUT_STREAM_V_data_V_0_payload_B;
        else 
            INPUT_STREAM_V_data_V_0_data_out <= INPUT_STREAM_V_data_V_0_payload_A;
        end if; 
    end process;

    INPUT_STREAM_V_data_V_0_load_A <= (not(INPUT_STREAM_V_data_V_0_sel_wr) and INPUT_STREAM_V_data_V_0_state_cmp_full);
    INPUT_STREAM_V_data_V_0_load_B <= (INPUT_STREAM_V_data_V_0_state_cmp_full and INPUT_STREAM_V_data_V_0_sel_wr);
    INPUT_STREAM_V_data_V_0_sel <= INPUT_STREAM_V_data_V_0_sel_rd;
    INPUT_STREAM_V_data_V_0_state_cmp_full <= '0' when (INPUT_STREAM_V_data_V_0_state = ap_const_lv2_1) else '1';
    INPUT_STREAM_V_data_V_0_vld_in <= INPUT_STREAM_TVALID;
    INPUT_STREAM_V_data_V_0_vld_out <= INPUT_STREAM_V_data_V_0_state(0);
    INPUT_STREAM_V_dest_V_0_ack_in <= INPUT_STREAM_V_dest_V_0_state(1);

    INPUT_STREAM_V_dest_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, tmp_fu_213_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_fu_213_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            INPUT_STREAM_V_dest_V_0_ack_out <= ap_const_logic_1;
        else 
            INPUT_STREAM_V_dest_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    INPUT_STREAM_V_dest_V_0_data_out_assign_proc : process(INPUT_STREAM_V_dest_V_0_payload_A, INPUT_STREAM_V_dest_V_0_payload_B, INPUT_STREAM_V_dest_V_0_sel)
    begin
        if ((ap_const_logic_1 = INPUT_STREAM_V_dest_V_0_sel)) then 
            INPUT_STREAM_V_dest_V_0_data_out <= INPUT_STREAM_V_dest_V_0_payload_B;
        else 
            INPUT_STREAM_V_dest_V_0_data_out <= INPUT_STREAM_V_dest_V_0_payload_A;
        end if; 
    end process;

    INPUT_STREAM_V_dest_V_0_load_A <= (not(INPUT_STREAM_V_dest_V_0_sel_wr) and INPUT_STREAM_V_dest_V_0_state_cmp_full);
    INPUT_STREAM_V_dest_V_0_load_B <= (INPUT_STREAM_V_dest_V_0_state_cmp_full and INPUT_STREAM_V_dest_V_0_sel_wr);
    INPUT_STREAM_V_dest_V_0_sel <= INPUT_STREAM_V_dest_V_0_sel_rd;
    INPUT_STREAM_V_dest_V_0_state_cmp_full <= '0' when (INPUT_STREAM_V_dest_V_0_state = ap_const_lv2_1) else '1';
    INPUT_STREAM_V_dest_V_0_vld_in <= INPUT_STREAM_TVALID;
    INPUT_STREAM_V_dest_V_0_vld_out <= INPUT_STREAM_V_dest_V_0_state(0);
    INPUT_STREAM_V_id_V_0_ack_in <= INPUT_STREAM_V_id_V_0_state(1);

    INPUT_STREAM_V_id_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, tmp_fu_213_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_fu_213_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            INPUT_STREAM_V_id_V_0_ack_out <= ap_const_logic_1;
        else 
            INPUT_STREAM_V_id_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    INPUT_STREAM_V_id_V_0_data_out_assign_proc : process(INPUT_STREAM_V_id_V_0_payload_A, INPUT_STREAM_V_id_V_0_payload_B, INPUT_STREAM_V_id_V_0_sel)
    begin
        if ((ap_const_logic_1 = INPUT_STREAM_V_id_V_0_sel)) then 
            INPUT_STREAM_V_id_V_0_data_out <= INPUT_STREAM_V_id_V_0_payload_B;
        else 
            INPUT_STREAM_V_id_V_0_data_out <= INPUT_STREAM_V_id_V_0_payload_A;
        end if; 
    end process;

    INPUT_STREAM_V_id_V_0_load_A <= (not(INPUT_STREAM_V_id_V_0_sel_wr) and INPUT_STREAM_V_id_V_0_state_cmp_full);
    INPUT_STREAM_V_id_V_0_load_B <= (INPUT_STREAM_V_id_V_0_state_cmp_full and INPUT_STREAM_V_id_V_0_sel_wr);
    INPUT_STREAM_V_id_V_0_sel <= INPUT_STREAM_V_id_V_0_sel_rd;
    INPUT_STREAM_V_id_V_0_state_cmp_full <= '0' when (INPUT_STREAM_V_id_V_0_state = ap_const_lv2_1) else '1';
    INPUT_STREAM_V_id_V_0_vld_in <= INPUT_STREAM_TVALID;
    INPUT_STREAM_V_id_V_0_vld_out <= INPUT_STREAM_V_id_V_0_state(0);
    INPUT_STREAM_V_keep_V_0_ack_in <= INPUT_STREAM_V_keep_V_0_state(1);

    INPUT_STREAM_V_keep_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, tmp_fu_213_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_fu_213_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            INPUT_STREAM_V_keep_V_0_ack_out <= ap_const_logic_1;
        else 
            INPUT_STREAM_V_keep_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    INPUT_STREAM_V_keep_V_0_data_out_assign_proc : process(INPUT_STREAM_V_keep_V_0_payload_A, INPUT_STREAM_V_keep_V_0_payload_B, INPUT_STREAM_V_keep_V_0_sel)
    begin
        if ((ap_const_logic_1 = INPUT_STREAM_V_keep_V_0_sel)) then 
            INPUT_STREAM_V_keep_V_0_data_out <= INPUT_STREAM_V_keep_V_0_payload_B;
        else 
            INPUT_STREAM_V_keep_V_0_data_out <= INPUT_STREAM_V_keep_V_0_payload_A;
        end if; 
    end process;

    INPUT_STREAM_V_keep_V_0_load_A <= (not(INPUT_STREAM_V_keep_V_0_sel_wr) and INPUT_STREAM_V_keep_V_0_state_cmp_full);
    INPUT_STREAM_V_keep_V_0_load_B <= (INPUT_STREAM_V_keep_V_0_state_cmp_full and INPUT_STREAM_V_keep_V_0_sel_wr);
    INPUT_STREAM_V_keep_V_0_sel <= INPUT_STREAM_V_keep_V_0_sel_rd;
    INPUT_STREAM_V_keep_V_0_state_cmp_full <= '0' when (INPUT_STREAM_V_keep_V_0_state = ap_const_lv2_1) else '1';
    INPUT_STREAM_V_keep_V_0_vld_in <= INPUT_STREAM_TVALID;
    INPUT_STREAM_V_keep_V_0_vld_out <= INPUT_STREAM_V_keep_V_0_state(0);
    INPUT_STREAM_V_last_V_0_ack_in <= INPUT_STREAM_V_last_V_0_state(1);

    INPUT_STREAM_V_last_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, tmp_fu_213_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_fu_213_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            INPUT_STREAM_V_last_V_0_ack_out <= ap_const_logic_1;
        else 
            INPUT_STREAM_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    INPUT_STREAM_V_last_V_0_data_out_assign_proc : process(INPUT_STREAM_V_last_V_0_payload_A, INPUT_STREAM_V_last_V_0_payload_B, INPUT_STREAM_V_last_V_0_sel)
    begin
        if ((ap_const_logic_1 = INPUT_STREAM_V_last_V_0_sel)) then 
            INPUT_STREAM_V_last_V_0_data_out <= INPUT_STREAM_V_last_V_0_payload_B;
        else 
            INPUT_STREAM_V_last_V_0_data_out <= INPUT_STREAM_V_last_V_0_payload_A;
        end if; 
    end process;

    INPUT_STREAM_V_last_V_0_load_A <= (not(INPUT_STREAM_V_last_V_0_sel_wr) and INPUT_STREAM_V_last_V_0_state_cmp_full);
    INPUT_STREAM_V_last_V_0_load_B <= (INPUT_STREAM_V_last_V_0_state_cmp_full and INPUT_STREAM_V_last_V_0_sel_wr);
    INPUT_STREAM_V_last_V_0_sel <= INPUT_STREAM_V_last_V_0_sel_rd;
    INPUT_STREAM_V_last_V_0_state_cmp_full <= '0' when (INPUT_STREAM_V_last_V_0_state = ap_const_lv2_1) else '1';
    INPUT_STREAM_V_last_V_0_vld_in <= INPUT_STREAM_TVALID;
    INPUT_STREAM_V_last_V_0_vld_out <= INPUT_STREAM_V_last_V_0_state(0);
    INPUT_STREAM_V_strb_V_0_ack_in <= INPUT_STREAM_V_strb_V_0_state(1);

    INPUT_STREAM_V_strb_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, tmp_fu_213_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_fu_213_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            INPUT_STREAM_V_strb_V_0_ack_out <= ap_const_logic_1;
        else 
            INPUT_STREAM_V_strb_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    INPUT_STREAM_V_strb_V_0_data_out_assign_proc : process(INPUT_STREAM_V_strb_V_0_payload_A, INPUT_STREAM_V_strb_V_0_payload_B, INPUT_STREAM_V_strb_V_0_sel)
    begin
        if ((ap_const_logic_1 = INPUT_STREAM_V_strb_V_0_sel)) then 
            INPUT_STREAM_V_strb_V_0_data_out <= INPUT_STREAM_V_strb_V_0_payload_B;
        else 
            INPUT_STREAM_V_strb_V_0_data_out <= INPUT_STREAM_V_strb_V_0_payload_A;
        end if; 
    end process;

    INPUT_STREAM_V_strb_V_0_load_A <= (not(INPUT_STREAM_V_strb_V_0_sel_wr) and INPUT_STREAM_V_strb_V_0_state_cmp_full);
    INPUT_STREAM_V_strb_V_0_load_B <= (INPUT_STREAM_V_strb_V_0_state_cmp_full and INPUT_STREAM_V_strb_V_0_sel_wr);
    INPUT_STREAM_V_strb_V_0_sel <= INPUT_STREAM_V_strb_V_0_sel_rd;
    INPUT_STREAM_V_strb_V_0_state_cmp_full <= '0' when (INPUT_STREAM_V_strb_V_0_state = ap_const_lv2_1) else '1';
    INPUT_STREAM_V_strb_V_0_vld_in <= INPUT_STREAM_TVALID;
    INPUT_STREAM_V_strb_V_0_vld_out <= INPUT_STREAM_V_strb_V_0_state(0);
    INPUT_STREAM_V_user_V_0_ack_in <= INPUT_STREAM_V_user_V_0_state(1);

    INPUT_STREAM_V_user_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, tmp_fu_213_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_fu_213_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            INPUT_STREAM_V_user_V_0_ack_out <= ap_const_logic_1;
        else 
            INPUT_STREAM_V_user_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    INPUT_STREAM_V_user_V_0_data_out_assign_proc : process(INPUT_STREAM_V_user_V_0_payload_A, INPUT_STREAM_V_user_V_0_payload_B, INPUT_STREAM_V_user_V_0_sel)
    begin
        if ((ap_const_logic_1 = INPUT_STREAM_V_user_V_0_sel)) then 
            INPUT_STREAM_V_user_V_0_data_out <= INPUT_STREAM_V_user_V_0_payload_B;
        else 
            INPUT_STREAM_V_user_V_0_data_out <= INPUT_STREAM_V_user_V_0_payload_A;
        end if; 
    end process;

    INPUT_STREAM_V_user_V_0_load_A <= (not(INPUT_STREAM_V_user_V_0_sel_wr) and INPUT_STREAM_V_user_V_0_state_cmp_full);
    INPUT_STREAM_V_user_V_0_load_B <= (INPUT_STREAM_V_user_V_0_state_cmp_full and INPUT_STREAM_V_user_V_0_sel_wr);
    INPUT_STREAM_V_user_V_0_sel <= INPUT_STREAM_V_user_V_0_sel_rd;
    INPUT_STREAM_V_user_V_0_state_cmp_full <= '0' when (INPUT_STREAM_V_user_V_0_state = ap_const_lv2_1) else '1';
    INPUT_STREAM_V_user_V_0_vld_in <= INPUT_STREAM_TVALID;
    INPUT_STREAM_V_user_V_0_vld_out <= INPUT_STREAM_V_user_V_0_state(0);
    OUTPUT_STREAM_TDATA <= OUTPUT_STREAM_V_data_V_1_data_out;

    OUTPUT_STREAM_TDATA_blk_n_assign_proc : process(OUTPUT_STREAM_V_data_V_1_state, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_259, ap_enable_reg_pp0_iter2, tmp_reg_259_pp0_iter1_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_reg_259_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_reg_259 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            OUTPUT_STREAM_TDATA_blk_n <= OUTPUT_STREAM_V_data_V_1_state(1);
        else 
            OUTPUT_STREAM_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    OUTPUT_STREAM_TDEST <= OUTPUT_STREAM_V_dest_V_1_data_out;
    OUTPUT_STREAM_TID <= OUTPUT_STREAM_V_id_V_1_data_out;
    OUTPUT_STREAM_TKEEP <= OUTPUT_STREAM_V_keep_V_1_data_out;
    OUTPUT_STREAM_TLAST <= OUTPUT_STREAM_V_last_V_1_data_out;
    OUTPUT_STREAM_TSTRB <= OUTPUT_STREAM_V_strb_V_1_data_out;
    OUTPUT_STREAM_TUSER <= OUTPUT_STREAM_V_user_V_1_data_out;
    OUTPUT_STREAM_TVALID <= OUTPUT_STREAM_V_dest_V_1_state(0);
    OUTPUT_STREAM_V_data_V_1_ack_in <= OUTPUT_STREAM_V_data_V_1_state(1);
    OUTPUT_STREAM_V_data_V_1_ack_out <= OUTPUT_STREAM_TREADY;

    OUTPUT_STREAM_V_data_V_1_data_out_assign_proc : process(OUTPUT_STREAM_V_data_V_1_payload_A, OUTPUT_STREAM_V_data_V_1_payload_B, OUTPUT_STREAM_V_data_V_1_sel)
    begin
        if ((ap_const_logic_1 = OUTPUT_STREAM_V_data_V_1_sel)) then 
            OUTPUT_STREAM_V_data_V_1_data_out <= OUTPUT_STREAM_V_data_V_1_payload_B;
        else 
            OUTPUT_STREAM_V_data_V_1_data_out <= OUTPUT_STREAM_V_data_V_1_payload_A;
        end if; 
    end process;

    OUTPUT_STREAM_V_data_V_1_load_A <= (not(OUTPUT_STREAM_V_data_V_1_sel_wr) and OUTPUT_STREAM_V_data_V_1_state_cmp_full);
    OUTPUT_STREAM_V_data_V_1_load_B <= (OUTPUT_STREAM_V_data_V_1_state_cmp_full and OUTPUT_STREAM_V_data_V_1_sel_wr);
    OUTPUT_STREAM_V_data_V_1_sel <= OUTPUT_STREAM_V_data_V_1_sel_rd;
    OUTPUT_STREAM_V_data_V_1_state_cmp_full <= '0' when (OUTPUT_STREAM_V_data_V_1_state = ap_const_lv2_1) else '1';

    OUTPUT_STREAM_V_data_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_259, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_259 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            OUTPUT_STREAM_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            OUTPUT_STREAM_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    OUTPUT_STREAM_V_data_V_1_vld_out <= OUTPUT_STREAM_V_data_V_1_state(0);
    OUTPUT_STREAM_V_dest_V_1_ack_in <= OUTPUT_STREAM_V_dest_V_1_state(1);
    OUTPUT_STREAM_V_dest_V_1_ack_out <= OUTPUT_STREAM_TREADY;

    OUTPUT_STREAM_V_dest_V_1_data_out_assign_proc : process(OUTPUT_STREAM_V_dest_V_1_payload_A, OUTPUT_STREAM_V_dest_V_1_payload_B, OUTPUT_STREAM_V_dest_V_1_sel)
    begin
        if ((ap_const_logic_1 = OUTPUT_STREAM_V_dest_V_1_sel)) then 
            OUTPUT_STREAM_V_dest_V_1_data_out <= OUTPUT_STREAM_V_dest_V_1_payload_B;
        else 
            OUTPUT_STREAM_V_dest_V_1_data_out <= OUTPUT_STREAM_V_dest_V_1_payload_A;
        end if; 
    end process;

    OUTPUT_STREAM_V_dest_V_1_load_A <= (not(OUTPUT_STREAM_V_dest_V_1_sel_wr) and OUTPUT_STREAM_V_dest_V_1_state_cmp_full);
    OUTPUT_STREAM_V_dest_V_1_load_B <= (OUTPUT_STREAM_V_dest_V_1_state_cmp_full and OUTPUT_STREAM_V_dest_V_1_sel_wr);
    OUTPUT_STREAM_V_dest_V_1_sel <= OUTPUT_STREAM_V_dest_V_1_sel_rd;
    OUTPUT_STREAM_V_dest_V_1_state_cmp_full <= '0' when (OUTPUT_STREAM_V_dest_V_1_state = ap_const_lv2_1) else '1';

    OUTPUT_STREAM_V_dest_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_259, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_259 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            OUTPUT_STREAM_V_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            OUTPUT_STREAM_V_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    OUTPUT_STREAM_V_dest_V_1_vld_out <= OUTPUT_STREAM_V_dest_V_1_state(0);
    OUTPUT_STREAM_V_id_V_1_ack_in <= OUTPUT_STREAM_V_id_V_1_state(1);
    OUTPUT_STREAM_V_id_V_1_ack_out <= OUTPUT_STREAM_TREADY;

    OUTPUT_STREAM_V_id_V_1_data_out_assign_proc : process(OUTPUT_STREAM_V_id_V_1_payload_A, OUTPUT_STREAM_V_id_V_1_payload_B, OUTPUT_STREAM_V_id_V_1_sel)
    begin
        if ((ap_const_logic_1 = OUTPUT_STREAM_V_id_V_1_sel)) then 
            OUTPUT_STREAM_V_id_V_1_data_out <= OUTPUT_STREAM_V_id_V_1_payload_B;
        else 
            OUTPUT_STREAM_V_id_V_1_data_out <= OUTPUT_STREAM_V_id_V_1_payload_A;
        end if; 
    end process;

    OUTPUT_STREAM_V_id_V_1_load_A <= (not(OUTPUT_STREAM_V_id_V_1_sel_wr) and OUTPUT_STREAM_V_id_V_1_state_cmp_full);
    OUTPUT_STREAM_V_id_V_1_load_B <= (OUTPUT_STREAM_V_id_V_1_state_cmp_full and OUTPUT_STREAM_V_id_V_1_sel_wr);
    OUTPUT_STREAM_V_id_V_1_sel <= OUTPUT_STREAM_V_id_V_1_sel_rd;
    OUTPUT_STREAM_V_id_V_1_state_cmp_full <= '0' when (OUTPUT_STREAM_V_id_V_1_state = ap_const_lv2_1) else '1';

    OUTPUT_STREAM_V_id_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_259, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_259 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            OUTPUT_STREAM_V_id_V_1_vld_in <= ap_const_logic_1;
        else 
            OUTPUT_STREAM_V_id_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    OUTPUT_STREAM_V_id_V_1_vld_out <= OUTPUT_STREAM_V_id_V_1_state(0);
    OUTPUT_STREAM_V_keep_V_1_ack_in <= OUTPUT_STREAM_V_keep_V_1_state(1);
    OUTPUT_STREAM_V_keep_V_1_ack_out <= OUTPUT_STREAM_TREADY;

    OUTPUT_STREAM_V_keep_V_1_data_out_assign_proc : process(OUTPUT_STREAM_V_keep_V_1_payload_A, OUTPUT_STREAM_V_keep_V_1_payload_B, OUTPUT_STREAM_V_keep_V_1_sel)
    begin
        if ((ap_const_logic_1 = OUTPUT_STREAM_V_keep_V_1_sel)) then 
            OUTPUT_STREAM_V_keep_V_1_data_out <= OUTPUT_STREAM_V_keep_V_1_payload_B;
        else 
            OUTPUT_STREAM_V_keep_V_1_data_out <= OUTPUT_STREAM_V_keep_V_1_payload_A;
        end if; 
    end process;

    OUTPUT_STREAM_V_keep_V_1_load_A <= (not(OUTPUT_STREAM_V_keep_V_1_sel_wr) and OUTPUT_STREAM_V_keep_V_1_state_cmp_full);
    OUTPUT_STREAM_V_keep_V_1_load_B <= (OUTPUT_STREAM_V_keep_V_1_state_cmp_full and OUTPUT_STREAM_V_keep_V_1_sel_wr);
    OUTPUT_STREAM_V_keep_V_1_sel <= OUTPUT_STREAM_V_keep_V_1_sel_rd;
    OUTPUT_STREAM_V_keep_V_1_state_cmp_full <= '0' when (OUTPUT_STREAM_V_keep_V_1_state = ap_const_lv2_1) else '1';

    OUTPUT_STREAM_V_keep_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_259, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_259 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            OUTPUT_STREAM_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            OUTPUT_STREAM_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    OUTPUT_STREAM_V_keep_V_1_vld_out <= OUTPUT_STREAM_V_keep_V_1_state(0);
    OUTPUT_STREAM_V_last_V_1_ack_in <= OUTPUT_STREAM_V_last_V_1_state(1);
    OUTPUT_STREAM_V_last_V_1_ack_out <= OUTPUT_STREAM_TREADY;

    OUTPUT_STREAM_V_last_V_1_data_out_assign_proc : process(OUTPUT_STREAM_V_last_V_1_payload_A, OUTPUT_STREAM_V_last_V_1_payload_B, OUTPUT_STREAM_V_last_V_1_sel)
    begin
        if ((ap_const_logic_1 = OUTPUT_STREAM_V_last_V_1_sel)) then 
            OUTPUT_STREAM_V_last_V_1_data_out <= OUTPUT_STREAM_V_last_V_1_payload_B;
        else 
            OUTPUT_STREAM_V_last_V_1_data_out <= OUTPUT_STREAM_V_last_V_1_payload_A;
        end if; 
    end process;

    OUTPUT_STREAM_V_last_V_1_load_A <= (not(OUTPUT_STREAM_V_last_V_1_sel_wr) and OUTPUT_STREAM_V_last_V_1_state_cmp_full);
    OUTPUT_STREAM_V_last_V_1_load_B <= (OUTPUT_STREAM_V_last_V_1_state_cmp_full and OUTPUT_STREAM_V_last_V_1_sel_wr);
    OUTPUT_STREAM_V_last_V_1_sel <= OUTPUT_STREAM_V_last_V_1_sel_rd;
    OUTPUT_STREAM_V_last_V_1_state_cmp_full <= '0' when (OUTPUT_STREAM_V_last_V_1_state = ap_const_lv2_1) else '1';

    OUTPUT_STREAM_V_last_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_259, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_259 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            OUTPUT_STREAM_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            OUTPUT_STREAM_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    OUTPUT_STREAM_V_last_V_1_vld_out <= OUTPUT_STREAM_V_last_V_1_state(0);
    OUTPUT_STREAM_V_strb_V_1_ack_in <= OUTPUT_STREAM_V_strb_V_1_state(1);
    OUTPUT_STREAM_V_strb_V_1_ack_out <= OUTPUT_STREAM_TREADY;

    OUTPUT_STREAM_V_strb_V_1_data_out_assign_proc : process(OUTPUT_STREAM_V_strb_V_1_payload_A, OUTPUT_STREAM_V_strb_V_1_payload_B, OUTPUT_STREAM_V_strb_V_1_sel)
    begin
        if ((ap_const_logic_1 = OUTPUT_STREAM_V_strb_V_1_sel)) then 
            OUTPUT_STREAM_V_strb_V_1_data_out <= OUTPUT_STREAM_V_strb_V_1_payload_B;
        else 
            OUTPUT_STREAM_V_strb_V_1_data_out <= OUTPUT_STREAM_V_strb_V_1_payload_A;
        end if; 
    end process;

    OUTPUT_STREAM_V_strb_V_1_load_A <= (not(OUTPUT_STREAM_V_strb_V_1_sel_wr) and OUTPUT_STREAM_V_strb_V_1_state_cmp_full);
    OUTPUT_STREAM_V_strb_V_1_load_B <= (OUTPUT_STREAM_V_strb_V_1_state_cmp_full and OUTPUT_STREAM_V_strb_V_1_sel_wr);
    OUTPUT_STREAM_V_strb_V_1_sel <= OUTPUT_STREAM_V_strb_V_1_sel_rd;
    OUTPUT_STREAM_V_strb_V_1_state_cmp_full <= '0' when (OUTPUT_STREAM_V_strb_V_1_state = ap_const_lv2_1) else '1';

    OUTPUT_STREAM_V_strb_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_259, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_259 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            OUTPUT_STREAM_V_strb_V_1_vld_in <= ap_const_logic_1;
        else 
            OUTPUT_STREAM_V_strb_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    OUTPUT_STREAM_V_strb_V_1_vld_out <= OUTPUT_STREAM_V_strb_V_1_state(0);
    OUTPUT_STREAM_V_user_V_1_ack_in <= OUTPUT_STREAM_V_user_V_1_state(1);
    OUTPUT_STREAM_V_user_V_1_ack_out <= OUTPUT_STREAM_TREADY;

    OUTPUT_STREAM_V_user_V_1_data_out_assign_proc : process(OUTPUT_STREAM_V_user_V_1_payload_A, OUTPUT_STREAM_V_user_V_1_payload_B, OUTPUT_STREAM_V_user_V_1_sel)
    begin
        if ((ap_const_logic_1 = OUTPUT_STREAM_V_user_V_1_sel)) then 
            OUTPUT_STREAM_V_user_V_1_data_out <= OUTPUT_STREAM_V_user_V_1_payload_B;
        else 
            OUTPUT_STREAM_V_user_V_1_data_out <= OUTPUT_STREAM_V_user_V_1_payload_A;
        end if; 
    end process;

    OUTPUT_STREAM_V_user_V_1_load_A <= (not(OUTPUT_STREAM_V_user_V_1_sel_wr) and OUTPUT_STREAM_V_user_V_1_state_cmp_full);
    OUTPUT_STREAM_V_user_V_1_load_B <= (OUTPUT_STREAM_V_user_V_1_state_cmp_full and OUTPUT_STREAM_V_user_V_1_sel_wr);
    OUTPUT_STREAM_V_user_V_1_sel <= OUTPUT_STREAM_V_user_V_1_sel_rd;
    OUTPUT_STREAM_V_user_V_1_state_cmp_full <= '0' when (OUTPUT_STREAM_V_user_V_1_state = ap_const_lv2_1) else '1';

    OUTPUT_STREAM_V_user_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_259, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_259 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            OUTPUT_STREAM_V_user_V_1_vld_in <= ap_const_logic_1;
        else 
            OUTPUT_STREAM_V_user_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    OUTPUT_STREAM_V_user_V_1_vld_out <= OUTPUT_STREAM_V_user_V_1_state(0);

    agg_result_a_ap_vld_assign_proc : process(OUTPUT_STREAM_V_data_V_1_ack_in, OUTPUT_STREAM_V_keep_V_1_ack_in, OUTPUT_STREAM_V_strb_V_1_ack_in, OUTPUT_STREAM_V_user_V_1_ack_in, OUTPUT_STREAM_V_last_V_1_ack_in, OUTPUT_STREAM_V_id_V_1_ack_in, OUTPUT_STREAM_V_dest_V_1_ack_in, ap_CS_fsm_state5)
    begin
        if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_dest_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_id_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_last_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_user_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_strb_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_keep_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            agg_result_a_ap_vld <= ap_const_logic_1;
        else 
            agg_result_a_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    agg_result_b_ap_vld_assign_proc : process(OUTPUT_STREAM_V_data_V_1_ack_in, OUTPUT_STREAM_V_keep_V_1_ack_in, OUTPUT_STREAM_V_strb_V_1_ack_in, OUTPUT_STREAM_V_user_V_1_ack_in, OUTPUT_STREAM_V_last_V_1_ack_in, OUTPUT_STREAM_V_id_V_1_ack_in, OUTPUT_STREAM_V_dest_V_1_ack_in, ap_CS_fsm_state5)
    begin
        if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_dest_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_id_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_last_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_user_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_strb_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_keep_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            agg_result_b_ap_vld <= ap_const_logic_1;
        else 
            agg_result_b_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    agg_result_c_ap_vld_assign_proc : process(OUTPUT_STREAM_V_data_V_1_ack_in, OUTPUT_STREAM_V_keep_V_1_ack_in, OUTPUT_STREAM_V_strb_V_1_ack_in, OUTPUT_STREAM_V_user_V_1_ack_in, OUTPUT_STREAM_V_last_V_1_ack_in, OUTPUT_STREAM_V_id_V_1_ack_in, OUTPUT_STREAM_V_dest_V_1_ack_in, ap_CS_fsm_state5)
    begin
        if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_dest_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_id_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_last_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_user_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_strb_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_keep_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            agg_result_c_ap_vld <= ap_const_logic_1;
        else 
            agg_result_c_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    agg_result_d_ap_vld_assign_proc : process(OUTPUT_STREAM_V_data_V_1_ack_in, OUTPUT_STREAM_V_keep_V_1_ack_in, OUTPUT_STREAM_V_strb_V_1_ack_in, OUTPUT_STREAM_V_user_V_1_ack_in, OUTPUT_STREAM_V_last_V_1_ack_in, OUTPUT_STREAM_V_id_V_1_ack_in, OUTPUT_STREAM_V_dest_V_1_ack_in, ap_CS_fsm_state5)
    begin
        if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_dest_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_id_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_last_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_user_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_strb_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_keep_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            agg_result_d_ap_vld <= ap_const_logic_1;
        else 
            agg_result_d_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    agg_result_e_ap_vld_assign_proc : process(OUTPUT_STREAM_V_data_V_1_ack_in, OUTPUT_STREAM_V_keep_V_1_ack_in, OUTPUT_STREAM_V_strb_V_1_ack_in, OUTPUT_STREAM_V_user_V_1_ack_in, OUTPUT_STREAM_V_last_V_1_ack_in, OUTPUT_STREAM_V_id_V_1_ack_in, OUTPUT_STREAM_V_dest_V_1_ack_in, ap_CS_fsm_state5)
    begin
        if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_dest_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_id_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_last_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_user_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_strb_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_keep_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            agg_result_e_ap_vld <= ap_const_logic_1;
        else 
            agg_result_e_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    agg_result_f_ap_vld_assign_proc : process(OUTPUT_STREAM_V_data_V_1_ack_in, OUTPUT_STREAM_V_keep_V_1_ack_in, OUTPUT_STREAM_V_strb_V_1_ack_in, OUTPUT_STREAM_V_user_V_1_ack_in, OUTPUT_STREAM_V_last_V_1_ack_in, OUTPUT_STREAM_V_id_V_1_ack_in, OUTPUT_STREAM_V_dest_V_1_ack_in, ap_CS_fsm_state5)
    begin
        if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_dest_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_id_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_last_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_user_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_strb_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_keep_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            agg_result_f_ap_vld <= ap_const_logic_1;
        else 
            agg_result_f_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state5 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, ap_enable_reg_pp0_iter0, tmp_fu_213_p2)
    begin
                ap_block_pp0_stage0_01001 <= ((tmp_fu_213_p2 = ap_const_lv1_1) and (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_out) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, ap_enable_reg_pp0_iter0, tmp_fu_213_p2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state3_io, ap_block_state4_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state4_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state3_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_fu_213_p2 = ap_const_lv1_1) and (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_out) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, ap_enable_reg_pp0_iter0, tmp_fu_213_p2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state3_io, ap_block_state4_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state4_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state3_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_fu_213_p2 = ap_const_lv1_1) and (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_out) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_state2_pp0_stage0_iter0_assign_proc : process(INPUT_STREAM_V_data_V_0_vld_out, tmp_fu_213_p2)
    begin
                ap_block_state2_pp0_stage0_iter0 <= ((tmp_fu_213_p2 = ap_const_lv1_1) and (ap_const_logic_0 = INPUT_STREAM_V_data_V_0_vld_out));
    end process;


    ap_block_state3_io_assign_proc : process(OUTPUT_STREAM_V_data_V_1_ack_in, tmp_reg_259)
    begin
                ap_block_state3_io <= ((tmp_reg_259 = ap_const_lv1_1) and (ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in));
    end process;

        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_io_assign_proc : process(OUTPUT_STREAM_V_data_V_1_ack_in, tmp_reg_259_pp0_iter1_reg)
    begin
                ap_block_state4_io <= ((tmp_reg_259_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_assign_proc : process(OUTPUT_STREAM_V_data_V_1_ack_in, OUTPUT_STREAM_V_keep_V_1_ack_in, OUTPUT_STREAM_V_strb_V_1_ack_in, OUTPUT_STREAM_V_user_V_1_ack_in, OUTPUT_STREAM_V_last_V_1_ack_in, OUTPUT_STREAM_V_id_V_1_ack_in, OUTPUT_STREAM_V_dest_V_1_ack_in)
    begin
                ap_block_state5 <= ((ap_const_logic_0 = OUTPUT_STREAM_V_dest_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_id_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_last_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_user_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_strb_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_keep_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in));
    end process;


    ap_condition_1138_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_reg_259, tmp_last_V_reg_289)
    begin
                ap_condition_1138 <= ((tmp_last_V_reg_289 = ap_const_lv1_1) and (tmp_reg_259 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(OUTPUT_STREAM_V_data_V_1_ack_in, OUTPUT_STREAM_V_keep_V_1_ack_in, OUTPUT_STREAM_V_strb_V_1_ack_in, OUTPUT_STREAM_V_user_V_1_ack_in, OUTPUT_STREAM_V_last_V_1_ack_in, OUTPUT_STREAM_V_id_V_1_ack_in, OUTPUT_STREAM_V_dest_V_1_ack_in, ap_CS_fsm_state5)
    begin
        if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_dest_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_id_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_last_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_user_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_strb_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_keep_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_in1Count_phi_fu_195_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_259, in1Count_reg_191, in1Count_3_reg_263, tmp_last_V_reg_289)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_reg_259 = ap_const_lv1_1) and (tmp_last_V_reg_289 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_in1Count_phi_fu_195_p4 <= in1Count_3_reg_263;
        else 
            ap_phi_mux_in1Count_phi_fu_195_p4 <= in1Count_reg_191;
        end if; 
    end process;


    ap_predicate_tran4to5_state2_assign_proc : process(INPUT_STREAM_V_last_V_0_data_out, tmp_fu_213_p2)
    begin
                ap_predicate_tran4to5_state2 <= ((tmp_fu_213_p2 = ap_const_lv1_0) or ((ap_const_lv1_1 = INPUT_STREAM_V_last_V_0_data_out) and (tmp_fu_213_p2 = ap_const_lv1_1)));
    end process;


    ap_ready_assign_proc : process(OUTPUT_STREAM_V_data_V_1_ack_in, OUTPUT_STREAM_V_keep_V_1_ack_in, OUTPUT_STREAM_V_strb_V_1_ack_in, OUTPUT_STREAM_V_user_V_1_ack_in, OUTPUT_STREAM_V_last_V_1_ack_in, OUTPUT_STREAM_V_id_V_1_ack_in, OUTPUT_STREAM_V_dest_V_1_ack_in, ap_CS_fsm_state5)
    begin
        if ((not(((ap_const_logic_0 = OUTPUT_STREAM_V_dest_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_id_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_last_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_user_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_strb_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_keep_V_1_ack_in) or (ap_const_logic_0 = OUTPUT_STREAM_V_data_V_1_ack_in))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    in1Count_1_cast_fu_253_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(in1Count_1_reg_203),32));
    in1Count_3_fu_219_p2 <= std_logic_vector(unsigned(ap_phi_mux_in1Count_phi_fu_195_p4) + unsigned(ap_const_lv23_1));
    tmp_fu_213_p2 <= "1" when (unsigned(ap_phi_mux_in1Count_phi_fu_195_p4) < unsigned(ap_const_lv23_7FBC00)) else "0";
end behav;
