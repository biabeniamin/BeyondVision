// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module AddWeighted (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        src1_data_stream_V_dout,
        src1_data_stream_V_empty_n,
        src1_data_stream_V_read,
        src2_data_stream_V_dout,
        src2_data_stream_V_empty_n,
        src2_data_stream_V_read,
        dst_data_stream_V_din,
        dst_data_stream_V_full_n,
        dst_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state33 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] src1_data_stream_V_dout;
input   src1_data_stream_V_empty_n;
output   src1_data_stream_V_read;
input  [7:0] src2_data_stream_V_dout;
input   src2_data_stream_V_empty_n;
output   src2_data_stream_V_read;
output  [7:0] dst_data_stream_V_din;
input   dst_data_stream_V_full_n;
output   dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg src1_data_stream_V_read;
reg src2_data_stream_V_read;
reg dst_data_stream_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    src1_data_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_i_reg_945;
reg    src2_data_stream_V_blk_n;
reg    dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter29;
reg   [0:0] exitcond_i_reg_945_pp0_iter28_reg;
reg   [10:0] t_V_4_reg_186;
wire   [0:0] exitcond4_i_fu_222_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] i_V_fu_228_p2;
reg   [10:0] i_V_reg_940;
wire   [0:0] exitcond_i_fu_234_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
wire    ap_block_state13_pp0_stage0_iter10;
wire    ap_block_state14_pp0_stage0_iter11;
wire    ap_block_state15_pp0_stage0_iter12;
wire    ap_block_state16_pp0_stage0_iter13;
wire    ap_block_state17_pp0_stage0_iter14;
wire    ap_block_state18_pp0_stage0_iter15;
wire    ap_block_state19_pp0_stage0_iter16;
wire    ap_block_state20_pp0_stage0_iter17;
wire    ap_block_state21_pp0_stage0_iter18;
wire    ap_block_state22_pp0_stage0_iter19;
wire    ap_block_state23_pp0_stage0_iter20;
wire    ap_block_state24_pp0_stage0_iter21;
wire    ap_block_state25_pp0_stage0_iter22;
wire    ap_block_state26_pp0_stage0_iter23;
wire    ap_block_state27_pp0_stage0_iter24;
wire    ap_block_state28_pp0_stage0_iter25;
wire    ap_block_state29_pp0_stage0_iter26;
wire    ap_block_state30_pp0_stage0_iter27;
wire    ap_block_state31_pp0_stage0_iter28;
reg    ap_block_state32_pp0_stage0_iter29;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_i_reg_945_pp0_iter1_reg;
reg   [0:0] exitcond_i_reg_945_pp0_iter2_reg;
reg   [0:0] exitcond_i_reg_945_pp0_iter3_reg;
reg   [0:0] exitcond_i_reg_945_pp0_iter4_reg;
reg   [0:0] exitcond_i_reg_945_pp0_iter5_reg;
reg   [0:0] exitcond_i_reg_945_pp0_iter6_reg;
reg   [0:0] exitcond_i_reg_945_pp0_iter7_reg;
reg   [0:0] exitcond_i_reg_945_pp0_iter8_reg;
reg   [0:0] exitcond_i_reg_945_pp0_iter9_reg;
reg   [0:0] exitcond_i_reg_945_pp0_iter10_reg;
reg   [0:0] exitcond_i_reg_945_pp0_iter11_reg;
reg   [0:0] exitcond_i_reg_945_pp0_iter12_reg;
reg   [0:0] exitcond_i_reg_945_pp0_iter13_reg;
reg   [0:0] exitcond_i_reg_945_pp0_iter14_reg;
reg   [0:0] exitcond_i_reg_945_pp0_iter15_reg;
reg   [0:0] exitcond_i_reg_945_pp0_iter16_reg;
reg   [0:0] exitcond_i_reg_945_pp0_iter17_reg;
reg   [0:0] exitcond_i_reg_945_pp0_iter18_reg;
reg   [0:0] exitcond_i_reg_945_pp0_iter19_reg;
reg   [0:0] exitcond_i_reg_945_pp0_iter20_reg;
reg   [0:0] exitcond_i_reg_945_pp0_iter21_reg;
reg   [0:0] exitcond_i_reg_945_pp0_iter22_reg;
reg   [0:0] exitcond_i_reg_945_pp0_iter23_reg;
reg   [0:0] exitcond_i_reg_945_pp0_iter24_reg;
reg   [0:0] exitcond_i_reg_945_pp0_iter25_reg;
reg   [0:0] exitcond_i_reg_945_pp0_iter26_reg;
reg   [0:0] exitcond_i_reg_945_pp0_iter27_reg;
wire   [10:0] j_V_fu_240_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [7:0] tmp_106_reg_954;
reg   [7:0] tmp_107_reg_959;
wire   [63:0] grp_fu_216_p1;
reg   [63:0] tmp_43_i_reg_974;
wire   [63:0] grp_fu_219_p1;
reg   [63:0] tmp_45_i_reg_979;
wire   [63:0] grp_fu_206_p2;
reg   [63:0] t1_reg_984;
wire   [63:0] grp_fu_211_p2;
reg   [63:0] t2_reg_989;
wire   [63:0] grp_fu_197_p2;
reg   [63:0] tmp_46_i_reg_994;
wire   [63:0] grp_fu_201_p2;
reg   [63:0] sum_reg_999;
wire   [0:0] tmp_i_i_i_i_fu_271_p2;
reg   [0:0] tmp_i_i_i_i_reg_1004;
reg   [0:0] tmp_i_i_i_i_reg_1004_pp0_iter27_reg;
reg   [0:0] tmp_i_i_i_i_reg_1004_pp0_iter28_reg;
wire   [0:0] tmp_i_i_i_i_99_fu_277_p2;
reg   [0:0] tmp_i_i_i_i_99_reg_1010;
reg   [0:0] tmp_i_i_i_i_99_reg_1010_pp0_iter27_reg;
reg   [0:0] tmp_i_i_i_i_99_reg_1010_pp0_iter28_reg;
reg   [0:0] isneg_reg_1016;
reg   [0:0] isneg_reg_1016_pp0_iter27_reg;
wire   [53:0] p_Result_s_fu_307_p1;
reg   [53:0] p_Result_s_reg_1026;
wire   [53:0] man_V_1_fu_311_p2;
reg   [53:0] man_V_1_reg_1031;
wire   [0:0] tmp_9_i_fu_317_p2;
reg   [0:0] tmp_9_i_reg_1036;
reg   [0:0] tmp_9_i_reg_1036_pp0_iter27_reg;
reg   [0:0] tmp_9_i_reg_1036_pp0_iter28_reg;
wire   [11:0] F2_fu_323_p2;
reg   [11:0] F2_reg_1042;
wire   [0:0] tmp_i2_fu_329_p2;
reg   [0:0] tmp_i2_reg_1050;
reg   [0:0] tmp_i2_reg_1050_pp0_iter27_reg;
wire  signed [11:0] F2_2_fu_341_p3;
reg  signed [11:0] F2_2_reg_1056;
reg  signed [11:0] F2_2_reg_1056_pp0_iter27_reg;
wire   [0:0] tmp_3_i_fu_349_p2;
reg   [0:0] tmp_3_i_reg_1063;
reg   [0:0] tmp_3_i_reg_1063_pp0_iter27_reg;
wire   [0:0] icmp_fu_365_p2;
reg   [0:0] icmp_reg_1070;
reg   [0:0] icmp_reg_1070_pp0_iter27_reg;
wire   [7:0] tmp_96_fu_379_p1;
reg   [7:0] tmp_96_reg_1076;
reg   [0:0] tmp_100_reg_1082;
wire   [7:0] p_Val2_13_fu_458_p2;
reg   [7:0] p_Val2_13_reg_1088;
wire   [0:0] sel_tmp2_i_fu_469_p2;
reg   [0:0] sel_tmp2_i_reg_1095;
wire   [0:0] tmp_18_i_fu_492_p2;
reg   [0:0] tmp_18_i_reg_1101;
wire   [0:0] rev_fu_506_p2;
reg   [0:0] rev_reg_1107;
wire   [0:0] Range1_all_ones_1_fu_532_p2;
reg   [0:0] Range1_all_ones_1_reg_1114;
reg   [0:0] tmp_105_reg_1121;
wire   [0:0] tmp_23_i_fu_546_p2;
reg   [0:0] tmp_23_i_reg_1126;
wire   [53:0] tmp_24_i_fu_552_p1;
reg   [53:0] tmp_24_i_reg_1132;
wire   [53:0] Range2_V_1_fu_556_p2;
reg   [53:0] Range2_V_1_reg_1137;
wire   [0:0] Range1_all_zeros_1_fu_568_p2;
reg   [0:0] Range1_all_zeros_1_reg_1143;
wire   [0:0] sel_tmp34_i_fu_586_p2;
reg   [0:0] sel_tmp34_i_reg_1148;
wire   [7:0] p_Val2_14_fu_662_p3;
reg   [7:0] p_Val2_14_reg_1154;
wire   [0:0] underflow_fu_826_p3;
reg   [0:0] underflow_reg_1160;
wire   [0:0] p_121_demorgan_i_i_fu_839_p2;
reg   [0:0] p_121_demorgan_i_i_reg_1166;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg   [10:0] t_V_reg_175;
reg    ap_block_state1;
wire    ap_CS_fsm_state33;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_216_p0;
wire   [31:0] grp_fu_219_p0;
wire   [63:0] p_Val2_11_fu_254_p1;
wire   [10:0] loc_V_fu_257_p4;
wire   [51:0] loc_V_1_fu_267_p1;
wire   [52:0] tmp_1_i_fu_299_p3;
wire   [62:0] tmp_fu_283_p1;
wire   [11:0] tmp_7_i1_fu_295_p1;
wire   [11:0] tmp_2_i_fu_335_p2;
wire   [8:0] tmp_97_fu_355_p4;
wire   [53:0] p_Val2_s_fu_371_p3;
wire  signed [31:0] F2_2_cast_i_fu_376_p1;
wire   [53:0] tmp_10_i_fu_388_p1;
wire   [53:0] tmp_11_i_fu_392_p2;
wire   [0:0] tmp_5_i3_fu_383_p2;
wire   [7:0] tmp_98_fu_398_p1;
wire   [7:0] p_Val2_0_i_i6_i_fu_402_p3;
wire   [11:0] tmp_15_i_fu_422_p2;
wire   [31:0] tmp_25_cast_i_fu_427_p1;
wire   [0:0] tmp_14_i_fu_417_p2;
wire   [0:0] tmp_99_fu_431_p3;
wire   [7:0] p_Val2_12_fu_409_p3;
wire   [0:0] qb_fu_439_p3;
wire   [7:0] tmp_16_i_fu_454_p1;
wire   [0:0] sel_tmp1_i_fu_464_p2;
wire  signed [11:0] pos1_fu_474_p2;
wire  signed [11:0] pos2_fu_483_p2;
wire   [0:0] tmp_103_fu_498_p3;
wire  signed [31:0] pos1_cast_i_fu_479_p1;
wire   [53:0] tmp_20_i_fu_512_p1;
wire   [53:0] tmp_21_i_fu_516_p2;
wire   [0:0] lD_fu_522_p1;
wire   [0:0] tmp6_fu_526_p2;
wire  signed [31:0] pos2_cast_i_fu_488_p1;
wire   [0:0] tmp_23_i_not_fu_574_p2;
wire   [0:0] tmp_27_i_fu_562_p2;
wire   [0:0] sel_tmp33_i_fu_580_p2;
wire   [7:0] tmp_95_fu_592_p1;
wire   [0:0] tmp_101_fu_600_p3;
wire   [0:0] sel_tmp3_i_fu_619_p2;
wire   [7:0] sel_tmp_i_fu_613_p3;
wire   [0:0] sel_tmp7_i_fu_630_p2;
wire   [0:0] sel_tmp8_i_fu_635_p2;
wire   [7:0] sel_tmp4_i_fu_623_p3;
wire   [0:0] sel_tmp12_demorgan_i_fu_647_p2;
wire   [0:0] sel_tmp12_i_fu_651_p2;
wire   [0:0] sel_tmp13_i_fu_657_p2;
wire   [7:0] tmp_13_i_fu_595_p2;
wire   [7:0] sel_tmp9_i_fu_640_p3;
wire   [0:0] tmp_8_not_i_fu_670_p2;
wire   [0:0] not_sel_tmp28_i_fu_675_p2;
wire   [0:0] tmp_17_i_fu_607_p2;
wire   [0:0] tmp5_fu_681_p2;
wire   [0:0] rev4_fu_701_p2;
wire   [53:0] r_V_fu_711_p2;
wire   [0:0] or_cond115_i_i_fu_706_p2;
wire   [0:0] Range2_all_ones_fu_716_p2;
wire   [0:0] Range2_all_ones_1_i_s_fu_721_p3;
wire   [0:0] tmp_25_i_fu_738_p2;
wire   [0:0] Range1_all_zeros_fu_743_p2;
wire   [0:0] or_cond117_i_i_fu_729_p2;
wire   [0:0] Range1_all_ones_fu_733_p2;
wire   [0:0] sel_tmp35_i_fu_758_p3;
wire   [0:0] p_119_i_i_fu_754_p2;
wire   [0:0] p_122_i_i_fu_748_p2;
wire   [0:0] sel_tmp39_i_fu_771_p3;
wire   [0:0] carry_1_i_i_fu_687_p2;
wire   [0:0] Range1_all_ones_2_i_s_fu_763_p3;
wire   [0:0] Range1_all_zeros_2_i_fu_778_p3;
wire   [0:0] Range1_all_ones_2_i_fu_794_p2;
wire   [0:0] newsignbit_fu_693_p3;
wire   [0:0] sel_tmp41_i_fu_806_p2;
wire   [0:0] tmp7_fu_811_p2;
wire   [0:0] sel_tmp47_i_fu_822_p2;
wire   [0:0] tmp_28_i_fu_800_p2;
wire   [0:0] sel_tmp46_i_fu_817_p2;
wire   [0:0] tmp8_fu_834_p2;
wire   [0:0] deleted_zeros_fu_786_p3;
wire   [0:0] underflow_not_i_fu_849_p2;
wire   [0:0] p_121_demorgan_i_not_s_fu_859_p2;
wire   [0:0] brmerge_i_i_not_i_fu_854_p2;
wire   [0:0] sel_tmp50_i_demorgan_fu_877_p2;
wire   [0:0] sel_tmp50_i_fu_881_p2;
wire   [0:0] sel_tmp51_i_fu_887_p2;
wire   [0:0] tmp_demorgan_i_fu_845_p2;
wire   [0:0] tmp_s_fu_892_p2;
wire   [0:0] tmp_45_fu_898_p2;
wire   [0:0] sel_tmp55_demorgan_i_fu_910_p2;
wire   [0:0] brmerge_i_fu_864_p2;
wire   [0:0] sel_tmp55_i_fu_915_p2;
wire   [0:0] sel_tmp56_i_fu_921_p2;
wire   [7:0] p_Val2_12_0_i_mux_i_fu_870_p3;
wire   [7:0] sel_tmp52_i_fu_903_p3;
reg    grp_fu_197_ce;
reg    grp_fu_201_ce;
reg    grp_fu_206_ce;
reg    grp_fu_211_ce;
reg    grp_fu_216_ce;
reg    grp_fu_219_ce;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
end

Sobel_filter_daddrcU #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
Sobel_filter_daddrcU_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(t1_reg_984),
    .din1(t2_reg_989),
    .ce(grp_fu_197_ce),
    .dout(grp_fu_197_p2)
);

Sobel_filter_daddrcU #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
Sobel_filter_daddrcU_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_46_i_reg_994),
    .din1(64'd0),
    .ce(grp_fu_201_ce),
    .dout(grp_fu_201_p2)
);

Sobel_filter_dmulsc4 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
Sobel_filter_dmulsc4_U76(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_43_i_reg_974),
    .din1(64'd4602678819172646912),
    .ce(grp_fu_206_ce),
    .dout(grp_fu_206_p2)
);

Sobel_filter_dmulsc4 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
Sobel_filter_dmulsc4_U77(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_45_i_reg_979),
    .din1(64'd4602678819172646912),
    .ce(grp_fu_211_ce),
    .dout(grp_fu_211_p2)
);

Sobel_filter_sitotde #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
Sobel_filter_sitotde_U78(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_216_p0),
    .ce(grp_fu_216_ce),
    .dout(grp_fu_216_p1)
);

Sobel_filter_sitotde #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
Sobel_filter_sitotde_U79(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_219_p0),
    .ce(grp_fu_219_ce),
    .dout(grp_fu_219_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond4_i_fu_222_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond4_i_fu_222_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end else if (((exitcond4_i_fu_222_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter29 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_234_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_4_reg_186 <= j_V_fu_240_p2;
    end else if (((exitcond4_i_fu_222_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_4_reg_186 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        t_V_reg_175 <= i_V_reg_940;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_175 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_945_pp0_iter25_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        F2_2_reg_1056 <= F2_2_fu_341_p3;
        F2_reg_1042 <= F2_fu_323_p2;
        icmp_reg_1070 <= icmp_fu_365_p2;
        isneg_reg_1016 <= p_Val2_11_fu_254_p1[32'd63];
        man_V_1_reg_1031 <= man_V_1_fu_311_p2;
        p_Result_s_reg_1026[51 : 0] <= p_Result_s_fu_307_p1[51 : 0];
        tmp_3_i_reg_1063 <= tmp_3_i_fu_349_p2;
        tmp_9_i_reg_1036 <= tmp_9_i_fu_317_p2;
        tmp_i2_reg_1050 <= tmp_i2_fu_329_p2;
        tmp_i_i_i_i_99_reg_1010 <= tmp_i_i_i_i_99_fu_277_p2;
        tmp_i_i_i_i_reg_1004 <= tmp_i_i_i_i_fu_271_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        F2_2_reg_1056_pp0_iter27_reg <= F2_2_reg_1056;
        exitcond_i_reg_945_pp0_iter10_reg <= exitcond_i_reg_945_pp0_iter9_reg;
        exitcond_i_reg_945_pp0_iter11_reg <= exitcond_i_reg_945_pp0_iter10_reg;
        exitcond_i_reg_945_pp0_iter12_reg <= exitcond_i_reg_945_pp0_iter11_reg;
        exitcond_i_reg_945_pp0_iter13_reg <= exitcond_i_reg_945_pp0_iter12_reg;
        exitcond_i_reg_945_pp0_iter14_reg <= exitcond_i_reg_945_pp0_iter13_reg;
        exitcond_i_reg_945_pp0_iter15_reg <= exitcond_i_reg_945_pp0_iter14_reg;
        exitcond_i_reg_945_pp0_iter16_reg <= exitcond_i_reg_945_pp0_iter15_reg;
        exitcond_i_reg_945_pp0_iter17_reg <= exitcond_i_reg_945_pp0_iter16_reg;
        exitcond_i_reg_945_pp0_iter18_reg <= exitcond_i_reg_945_pp0_iter17_reg;
        exitcond_i_reg_945_pp0_iter19_reg <= exitcond_i_reg_945_pp0_iter18_reg;
        exitcond_i_reg_945_pp0_iter20_reg <= exitcond_i_reg_945_pp0_iter19_reg;
        exitcond_i_reg_945_pp0_iter21_reg <= exitcond_i_reg_945_pp0_iter20_reg;
        exitcond_i_reg_945_pp0_iter22_reg <= exitcond_i_reg_945_pp0_iter21_reg;
        exitcond_i_reg_945_pp0_iter23_reg <= exitcond_i_reg_945_pp0_iter22_reg;
        exitcond_i_reg_945_pp0_iter24_reg <= exitcond_i_reg_945_pp0_iter23_reg;
        exitcond_i_reg_945_pp0_iter25_reg <= exitcond_i_reg_945_pp0_iter24_reg;
        exitcond_i_reg_945_pp0_iter26_reg <= exitcond_i_reg_945_pp0_iter25_reg;
        exitcond_i_reg_945_pp0_iter27_reg <= exitcond_i_reg_945_pp0_iter26_reg;
        exitcond_i_reg_945_pp0_iter28_reg <= exitcond_i_reg_945_pp0_iter27_reg;
        exitcond_i_reg_945_pp0_iter2_reg <= exitcond_i_reg_945_pp0_iter1_reg;
        exitcond_i_reg_945_pp0_iter3_reg <= exitcond_i_reg_945_pp0_iter2_reg;
        exitcond_i_reg_945_pp0_iter4_reg <= exitcond_i_reg_945_pp0_iter3_reg;
        exitcond_i_reg_945_pp0_iter5_reg <= exitcond_i_reg_945_pp0_iter4_reg;
        exitcond_i_reg_945_pp0_iter6_reg <= exitcond_i_reg_945_pp0_iter5_reg;
        exitcond_i_reg_945_pp0_iter7_reg <= exitcond_i_reg_945_pp0_iter6_reg;
        exitcond_i_reg_945_pp0_iter8_reg <= exitcond_i_reg_945_pp0_iter7_reg;
        exitcond_i_reg_945_pp0_iter9_reg <= exitcond_i_reg_945_pp0_iter8_reg;
        icmp_reg_1070_pp0_iter27_reg <= icmp_reg_1070;
        isneg_reg_1016_pp0_iter27_reg <= isneg_reg_1016;
        tmp_3_i_reg_1063_pp0_iter27_reg <= tmp_3_i_reg_1063;
        tmp_9_i_reg_1036_pp0_iter27_reg <= tmp_9_i_reg_1036;
        tmp_9_i_reg_1036_pp0_iter28_reg <= tmp_9_i_reg_1036_pp0_iter27_reg;
        tmp_i2_reg_1050_pp0_iter27_reg <= tmp_i2_reg_1050;
        tmp_i_i_i_i_99_reg_1010_pp0_iter27_reg <= tmp_i_i_i_i_99_reg_1010;
        tmp_i_i_i_i_99_reg_1010_pp0_iter28_reg <= tmp_i_i_i_i_99_reg_1010_pp0_iter27_reg;
        tmp_i_i_i_i_reg_1004_pp0_iter27_reg <= tmp_i_i_i_i_reg_1004;
        tmp_i_i_i_i_reg_1004_pp0_iter28_reg <= tmp_i_i_i_i_reg_1004_pp0_iter27_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_945_pp0_iter26_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Range1_all_ones_1_reg_1114 <= Range1_all_ones_1_fu_532_p2;
        Range1_all_zeros_1_reg_1143 <= Range1_all_zeros_1_fu_568_p2;
        Range2_V_1_reg_1137 <= Range2_V_1_fu_556_p2;
        p_Val2_13_reg_1088 <= p_Val2_13_fu_458_p2;
        rev_reg_1107 <= rev_fu_506_p2;
        sel_tmp2_i_reg_1095 <= sel_tmp2_i_fu_469_p2;
        sel_tmp34_i_reg_1148 <= sel_tmp34_i_fu_586_p2;
        tmp_100_reg_1082 <= p_Val2_12_fu_409_p3[32'd7];
        tmp_105_reg_1121 <= pos2_fu_483_p2[32'd11];
        tmp_18_i_reg_1101 <= tmp_18_i_fu_492_p2;
        tmp_23_i_reg_1126 <= tmp_23_i_fu_546_p2;
        tmp_24_i_reg_1132[31 : 0] <= tmp_24_i_fu_552_p1[31 : 0];
        tmp_96_reg_1076 <= tmp_96_fu_379_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_i_reg_945 <= exitcond_i_fu_234_p2;
        exitcond_i_reg_945_pp0_iter1_reg <= exitcond_i_reg_945;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_940 <= i_V_fu_228_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_945_pp0_iter27_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_121_demorgan_i_i_reg_1166 <= p_121_demorgan_i_i_fu_839_p2;
        p_Val2_14_reg_1154 <= p_Val2_14_fu_662_p3;
        underflow_reg_1160 <= underflow_fu_826_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_945_pp0_iter24_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_reg_999 <= grp_fu_201_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_945_pp0_iter12_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t1_reg_984 <= grp_fu_206_p2;
        t2_reg_989 <= grp_fu_211_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_945 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_106_reg_954 <= src1_data_stream_V_dout;
        tmp_107_reg_959 <= src2_data_stream_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_945_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_43_i_reg_974 <= grp_fu_216_p1;
        tmp_45_i_reg_979 <= grp_fu_219_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_945_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_46_i_reg_994 <= grp_fu_197_p2;
    end
end

always @ (*) begin
    if ((exitcond_i_fu_234_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond4_i_fu_222_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_945_pp0_iter28_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        dst_data_stream_V_blk_n = dst_data_stream_V_full_n;
    end else begin
        dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_945_pp0_iter28_reg == 1'd0) & (ap_enable_reg_pp0_iter29 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dst_data_stream_V_write = 1'b1;
    end else begin
        dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_197_ce = 1'b1;
    end else begin
        grp_fu_197_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_201_ce = 1'b1;
    end else begin
        grp_fu_201_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_206_ce = 1'b1;
    end else begin
        grp_fu_206_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_211_ce = 1'b1;
    end else begin
        grp_fu_211_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_216_ce = 1'b1;
    end else begin
        grp_fu_216_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_219_ce = 1'b1;
    end else begin
        grp_fu_219_ce = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond4_i_fu_222_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_945 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        src1_data_stream_V_blk_n = src1_data_stream_V_empty_n;
    end else begin
        src1_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_945 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src1_data_stream_V_read = 1'b1;
    end else begin
        src1_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_945 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        src2_data_stream_V_blk_n = src2_data_stream_V_empty_n;
    end else begin
        src2_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_945 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src2_data_stream_V_read = 1'b1;
    end else begin
        src2_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond4_i_fu_222_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond_i_fu_234_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter28 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter29 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter28 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter29 == 1'b1)) | ((exitcond_i_fu_234_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_2_cast_i_fu_376_p1 = F2_2_reg_1056;

assign F2_2_fu_341_p3 = ((tmp_i2_fu_329_p2[0:0] === 1'b1) ? F2_fu_323_p2 : tmp_2_i_fu_335_p2);

assign F2_fu_323_p2 = (12'd1075 - tmp_7_i1_fu_295_p1);

assign Range1_all_ones_1_fu_532_p2 = (tmp_18_i_fu_492_p2 & tmp6_fu_526_p2);

assign Range1_all_ones_2_i_fu_794_p2 = (carry_1_i_i_fu_687_p2 & Range1_all_ones_2_i_s_fu_763_p3);

assign Range1_all_ones_2_i_s_fu_763_p3 = ((or_cond117_i_i_fu_729_p2[0:0] === 1'b1) ? Range1_all_ones_fu_733_p2 : sel_tmp35_i_fu_758_p3);

assign Range1_all_ones_fu_733_p2 = (Range2_all_ones_1_i_s_fu_721_p3 & Range1_all_ones_1_reg_1114);

assign Range1_all_zeros_1_fu_568_p2 = ((p_Val2_s_fu_371_p3 == 54'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_i_fu_778_p3 = ((or_cond117_i_i_fu_729_p2[0:0] === 1'b1) ? p_122_i_i_fu_748_p2 : sel_tmp39_i_fu_771_p3);

assign Range1_all_zeros_fu_743_p2 = (1'd1 ^ Range1_all_ones_1_reg_1114);

assign Range2_V_1_fu_556_p2 = p_Val2_s_fu_371_p3 >> tmp_24_i_fu_552_p1;

assign Range2_all_ones_1_i_s_fu_721_p3 = ((or_cond115_i_i_fu_706_p2[0:0] === 1'b1) ? Range2_all_ones_fu_716_p2 : rev4_fu_701_p2);

assign Range2_all_ones_fu_716_p2 = ((Range2_V_1_reg_1137 == r_V_fu_711_p2) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((exitcond_i_reg_945_pp0_iter28_reg == 1'd0) & (dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_i_reg_945 == 1'd0) & (src2_data_stream_V_empty_n == 1'b0)) | ((exitcond_i_reg_945 == 1'd0) & (src1_data_stream_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((exitcond_i_reg_945_pp0_iter28_reg == 1'd0) & (dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_i_reg_945 == 1'd0) & (src2_data_stream_V_empty_n == 1'b0)) | ((exitcond_i_reg_945 == 1'd0) & (src1_data_stream_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((exitcond_i_reg_945_pp0_iter28_reg == 1'd0) & (dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_i_reg_945 == 1'd0) & (src2_data_stream_V_empty_n == 1'b0)) | ((exitcond_i_reg_945 == 1'd0) & (src1_data_stream_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state32_pp0_stage0_iter29 = ((exitcond_i_reg_945_pp0_iter28_reg == 1'd0) & (dst_data_stream_V_full_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((exitcond_i_reg_945 == 1'd0) & (src2_data_stream_V_empty_n == 1'b0)) | ((exitcond_i_reg_945 == 1'd0) & (src1_data_stream_V_empty_n == 1'b0)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign brmerge_i_fu_864_p2 = (underflow_not_i_fu_849_p2 | p_121_demorgan_i_not_s_fu_859_p2);

assign brmerge_i_i_not_i_fu_854_p2 = (underflow_not_i_fu_849_p2 & p_121_demorgan_i_i_reg_1166);

assign carry_1_i_i_fu_687_p2 = (tmp5_fu_681_p2 & sel_tmp3_i_fu_619_p2);

assign deleted_zeros_fu_786_p3 = ((carry_1_i_i_fu_687_p2[0:0] === 1'b1) ? Range1_all_ones_2_i_s_fu_763_p3 : Range1_all_zeros_2_i_fu_778_p3);

assign dst_data_stream_V_din = ((sel_tmp56_i_fu_921_p2[0:0] === 1'b1) ? p_Val2_12_0_i_mux_i_fu_870_p3 : sel_tmp52_i_fu_903_p3);

assign exitcond4_i_fu_222_p2 = ((t_V_reg_175 == 11'd1080) ? 1'b1 : 1'b0);

assign exitcond_i_fu_234_p2 = ((t_V_4_reg_186 == 11'd1920) ? 1'b1 : 1'b0);

assign grp_fu_216_p0 = tmp_106_reg_954;

assign grp_fu_219_p0 = tmp_107_reg_959;

assign i_V_fu_228_p2 = (t_V_reg_175 + 11'd1);

assign icmp_fu_365_p2 = ((tmp_97_fu_355_p4 == 9'd0) ? 1'b1 : 1'b0);

assign j_V_fu_240_p2 = (t_V_4_reg_186 + 11'd1);

assign lD_fu_522_p1 = tmp_21_i_fu_516_p2[0:0];

assign loc_V_1_fu_267_p1 = p_Val2_11_fu_254_p1[51:0];

assign loc_V_fu_257_p4 = {{p_Val2_11_fu_254_p1[62:52]}};

assign man_V_1_fu_311_p2 = (54'd0 - p_Result_s_fu_307_p1);

assign newsignbit_fu_693_p3 = p_Val2_14_fu_662_p3[32'd7];

assign not_sel_tmp28_i_fu_675_p2 = (tmp_8_not_i_fu_670_p2 | sel_tmp12_demorgan_i_fu_647_p2);

assign or_cond115_i_i_fu_706_p2 = (tmp_23_i_reg_1126 & rev4_fu_701_p2);

assign or_cond117_i_i_fu_729_p2 = (tmp_23_i_reg_1126 & rev_reg_1107);

assign p_119_i_i_fu_754_p2 = (rev_reg_1107 | Range1_all_zeros_1_reg_1143);

assign p_121_demorgan_i_i_fu_839_p2 = (tmp8_fu_834_p2 | deleted_zeros_fu_786_p3);

assign p_121_demorgan_i_not_s_fu_859_p2 = (p_121_demorgan_i_i_reg_1166 ^ 1'd1);

assign p_122_i_i_fu_748_p2 = (tmp_25_i_fu_738_p2 & Range1_all_zeros_fu_743_p2);

assign p_Result_s_fu_307_p1 = tmp_1_i_fu_299_p3;

assign p_Val2_0_i_i6_i_fu_402_p3 = ((isneg_reg_1016[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_Val2_11_fu_254_p1 = sum_reg_999;

assign p_Val2_12_0_i_mux_i_fu_870_p3 = ((brmerge_i_i_not_i_fu_854_p2[0:0] === 1'b1) ? p_Val2_14_reg_1154 : 8'd255);

assign p_Val2_12_fu_409_p3 = ((tmp_5_i3_fu_383_p2[0:0] === 1'b1) ? tmp_98_fu_398_p1 : p_Val2_0_i_i6_i_fu_402_p3);

assign p_Val2_13_fu_458_p2 = (tmp_16_i_fu_454_p1 + p_Val2_12_fu_409_p3);

assign p_Val2_14_fu_662_p3 = ((sel_tmp13_i_fu_657_p2[0:0] === 1'b1) ? tmp_13_i_fu_595_p2 : sel_tmp9_i_fu_640_p3);

assign p_Val2_s_fu_371_p3 = ((isneg_reg_1016[0:0] === 1'b1) ? man_V_1_reg_1031 : p_Result_s_reg_1026);

assign pos1_cast_i_fu_479_p1 = pos1_fu_474_p2;

assign pos1_fu_474_p2 = (12'd8 + F2_reg_1042);

assign pos2_cast_i_fu_488_p1 = pos2_fu_483_p2;

assign pos2_fu_483_p2 = (12'd9 + F2_reg_1042);

assign qb_fu_439_p3 = ((tmp_14_i_fu_417_p2[0:0] === 1'b1) ? isneg_reg_1016 : tmp_99_fu_431_p3);

assign r_V_fu_711_p2 = 54'd18014398509481983 >> tmp_24_i_reg_1132;

assign rev4_fu_701_p2 = (tmp_105_reg_1121 ^ 1'd1);

assign rev_fu_506_p2 = (tmp_103_fu_498_p3 ^ 1'd1);

assign sel_tmp12_demorgan_i_fu_647_p2 = (tmp_i2_reg_1050_pp0_iter27_reg | tmp_3_i_reg_1063_pp0_iter27_reg);

assign sel_tmp12_i_fu_651_p2 = (sel_tmp12_demorgan_i_fu_647_p2 ^ 1'd1);

assign sel_tmp13_i_fu_657_p2 = (sel_tmp12_i_fu_651_p2 & icmp_reg_1070_pp0_iter27_reg);

assign sel_tmp1_i_fu_464_p2 = (tmp_3_i_reg_1063 ^ 1'd1);

assign sel_tmp2_i_fu_469_p2 = (tmp_i2_reg_1050 & sel_tmp1_i_fu_464_p2);

assign sel_tmp33_i_fu_580_p2 = (tmp_23_i_not_fu_574_p2 | tmp_103_fu_498_p3);

assign sel_tmp34_i_fu_586_p2 = (tmp_27_i_fu_562_p2 & sel_tmp33_i_fu_580_p2);

assign sel_tmp35_i_fu_758_p3 = ((sel_tmp34_i_reg_1148[0:0] === 1'b1) ? Range1_all_ones_1_reg_1114 : rev_reg_1107);

assign sel_tmp39_i_fu_771_p3 = ((sel_tmp34_i_reg_1148[0:0] === 1'b1) ? Range1_all_zeros_fu_743_p2 : p_119_i_i_fu_754_p2);

assign sel_tmp3_i_fu_619_p2 = (tmp_100_reg_1082 & sel_tmp2_i_reg_1095);

assign sel_tmp41_i_fu_806_p2 = (tmp_18_i_reg_1101 ^ 1'd1);

assign sel_tmp46_i_fu_817_p2 = (tmp7_fu_811_p2 & isneg_reg_1016_pp0_iter27_reg);

assign sel_tmp47_i_fu_822_p2 = (tmp_18_i_reg_1101 & isneg_reg_1016_pp0_iter27_reg);

assign sel_tmp4_i_fu_623_p3 = ((sel_tmp3_i_fu_619_p2[0:0] === 1'b1) ? p_Val2_13_reg_1088 : sel_tmp_i_fu_613_p3);

assign sel_tmp50_i_demorgan_fu_877_p2 = (tmp_i_i_i_i_reg_1004_pp0_iter28_reg & tmp_i_i_i_i_99_reg_1010_pp0_iter28_reg);

assign sel_tmp50_i_fu_881_p2 = (sel_tmp50_i_demorgan_fu_877_p2 ^ 1'd1);

assign sel_tmp51_i_fu_887_p2 = (tmp_9_i_reg_1036_pp0_iter28_reg & sel_tmp50_i_fu_881_p2);

assign sel_tmp52_i_fu_903_p3 = ((tmp_45_fu_898_p2[0:0] === 1'b1) ? 8'd0 : p_Val2_14_reg_1154);

assign sel_tmp55_demorgan_i_fu_910_p2 = (tmp_demorgan_i_fu_845_p2 | tmp_9_i_reg_1036_pp0_iter28_reg);

assign sel_tmp55_i_fu_915_p2 = (sel_tmp55_demorgan_i_fu_910_p2 ^ 1'd1);

assign sel_tmp56_i_fu_921_p2 = (sel_tmp55_i_fu_915_p2 & brmerge_i_fu_864_p2);

assign sel_tmp7_i_fu_630_p2 = (tmp_100_reg_1082 ^ 1'd1);

assign sel_tmp8_i_fu_635_p2 = (sel_tmp7_i_fu_630_p2 & sel_tmp2_i_reg_1095);

assign sel_tmp9_i_fu_640_p3 = ((sel_tmp8_i_fu_635_p2[0:0] === 1'b1) ? p_Val2_13_reg_1088 : sel_tmp4_i_fu_623_p3);

assign sel_tmp_i_fu_613_p3 = ((tmp_3_i_reg_1063_pp0_iter27_reg[0:0] === 1'b1) ? tmp_96_reg_1076 : 8'd0);

assign start_out = real_start;

assign tmp5_fu_681_p2 = (tmp_17_i_fu_607_p2 & not_sel_tmp28_i_fu_675_p2);

assign tmp6_fu_526_p2 = (rev_fu_506_p2 & lD_fu_522_p1);

assign tmp7_fu_811_p2 = (sel_tmp41_i_fu_806_p2 & newsignbit_fu_693_p3);

assign tmp8_fu_834_p2 = (sel_tmp41_i_fu_806_p2 | isneg_reg_1016_pp0_iter27_reg);

assign tmp_101_fu_600_p3 = p_Val2_13_reg_1088[32'd7];

assign tmp_103_fu_498_p3 = pos1_fu_474_p2[32'd11];

assign tmp_10_i_fu_388_p1 = $unsigned(F2_2_cast_i_fu_376_p1);

assign tmp_11_i_fu_392_p2 = $signed(p_Val2_s_fu_371_p3) >>> tmp_10_i_fu_388_p1;

assign tmp_13_i_fu_595_p2 = tmp_96_reg_1076 << tmp_95_fu_592_p1;

assign tmp_14_i_fu_417_p2 = (($signed(F2_reg_1042) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_15_i_fu_422_p2 = ($signed(12'd4095) + $signed(F2_reg_1042));

assign tmp_16_i_fu_454_p1 = qb_fu_439_p3;

assign tmp_17_i_fu_607_p2 = (tmp_101_fu_600_p3 ^ 1'd1);

assign tmp_18_i_fu_492_p2 = (($signed(pos1_fu_474_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_1_i_fu_299_p3 = {{1'd1}, {loc_V_1_fu_267_p1}};

assign tmp_20_i_fu_512_p1 = $unsigned(pos1_cast_i_fu_479_p1);

assign tmp_21_i_fu_516_p2 = $signed(p_Val2_s_fu_371_p3) >>> tmp_20_i_fu_512_p1;

assign tmp_23_i_fu_546_p2 = (($signed(pos2_fu_483_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_23_i_not_fu_574_p2 = (tmp_23_i_fu_546_p2 ^ 1'd1);

assign tmp_24_i_fu_552_p1 = $unsigned(pos2_cast_i_fu_488_p1);

assign tmp_25_cast_i_fu_427_p1 = tmp_15_i_fu_422_p2;

assign tmp_25_i_fu_738_p2 = ((Range2_V_1_reg_1137 == 54'd0) ? 1'b1 : 1'b0);

assign tmp_27_i_fu_562_p2 = ((pos2_fu_483_p2 == 12'd54) ? 1'b1 : 1'b0);

assign tmp_28_i_fu_800_p2 = (1'd1 ^ Range1_all_ones_2_i_fu_794_p2);

assign tmp_2_i_fu_335_p2 = (12'd0 - F2_fu_323_p2);

assign tmp_3_i_fu_349_p2 = ((loc_V_fu_257_p4 == 11'd1075) ? 1'b1 : 1'b0);

assign tmp_45_fu_898_p2 = (underflow_reg_1160 | tmp_s_fu_892_p2);

assign tmp_5_i3_fu_383_p2 = ((F2_2_reg_1056 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_7_i1_fu_295_p1 = loc_V_fu_257_p4;

assign tmp_8_not_i_fu_670_p2 = (icmp_reg_1070_pp0_iter27_reg ^ 1'd1);

assign tmp_95_fu_592_p1 = F2_2_reg_1056_pp0_iter27_reg[7:0];

assign tmp_96_fu_379_p1 = p_Val2_s_fu_371_p3[7:0];

assign tmp_97_fu_355_p4 = {{F2_2_fu_341_p3[11:3]}};

assign tmp_98_fu_398_p1 = tmp_11_i_fu_392_p2[7:0];

assign tmp_99_fu_431_p3 = p_Val2_s_fu_371_p3[tmp_25_cast_i_fu_427_p1];

assign tmp_9_i_fu_317_p2 = ((tmp_fu_283_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_demorgan_i_fu_845_p2 = (tmp_i_i_i_i_reg_1004_pp0_iter28_reg & tmp_i_i_i_i_99_reg_1010_pp0_iter28_reg);

assign tmp_fu_283_p1 = p_Val2_11_fu_254_p1[62:0];

assign tmp_i2_fu_329_p2 = (($signed(F2_fu_323_p2) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign tmp_i_i_i_i_99_fu_277_p2 = ((loc_V_1_fu_267_p1 != 52'd0) ? 1'b1 : 1'b0);

assign tmp_i_i_i_i_fu_271_p2 = ((loc_V_fu_257_p4 == 11'd2047) ? 1'b1 : 1'b0);

assign tmp_s_fu_892_p2 = (tmp_demorgan_i_fu_845_p2 | sel_tmp51_i_fu_887_p2);

assign underflow_fu_826_p3 = ((sel_tmp47_i_fu_822_p2[0:0] === 1'b1) ? tmp_28_i_fu_800_p2 : sel_tmp46_i_fu_817_p2);

assign underflow_not_i_fu_849_p2 = (underflow_reg_1160 ^ 1'd1);

always @ (posedge ap_clk) begin
    p_Result_s_reg_1026[53:52] <= 2'b01;
    tmp_24_i_reg_1132[53:32] <= 22'b0000000000000000000000;
end

endmodule //AddWeighted
