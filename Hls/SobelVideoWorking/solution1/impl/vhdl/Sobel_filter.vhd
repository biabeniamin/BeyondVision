-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Sobel_filter is
port (
    INPUT_STREAM_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    INPUT_STREAM_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    INPUT_STREAM_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    INPUT_STREAM_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    OUTPUT_STREAM_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    OUTPUT_STREAM_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    OUTPUT_STREAM_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    OUTPUT_STREAM_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUTPUT_STREAM_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUTPUT_STREAM_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUTPUT_STREAM_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    enable_V : IN STD_LOGIC_VECTOR (0 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    INPUT_STREAM_TVALID : IN STD_LOGIC;
    INPUT_STREAM_TREADY : OUT STD_LOGIC;
    OUTPUT_STREAM_TVALID : OUT STD_LOGIC;
    OUTPUT_STREAM_TREADY : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of Sobel_filter is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "Sobel_filter,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7a200tsbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=11.000000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=9,HLS_SYN_DSP=39,HLS_SYN_FF=6332,HLS_SYN_LUT=10952,HLS_VERSION=2018_2}";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal Block_proc306_U0_OUTPUT_STREAM_TDATA : STD_LOGIC_VECTOR (23 downto 0);
    signal Block_proc306_U0_OUTPUT_STREAM_TKEEP : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_proc306_U0_OUTPUT_STREAM_TSTRB : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_proc306_U0_OUTPUT_STREAM_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc306_U0_OUTPUT_STREAM_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc306_U0_OUTPUT_STREAM_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc306_U0_OUTPUT_STREAM_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_rst_n_inv : STD_LOGIC;
    signal Block_proc306_U0_ap_start : STD_LOGIC;
    signal Block_proc306_U0_INPUT_STREAM_TREADY : STD_LOGIC;
    signal Block_proc306_U0_OUTPUT_STREAM_TVALID : STD_LOGIC;
    signal Block_proc306_U0_ap_done : STD_LOGIC;
    signal Block_proc306_U0_ap_ready : STD_LOGIC;
    signal Block_proc306_U0_ap_idle : STD_LOGIC;
    signal Block_proc306_U0_ap_continue : STD_LOGIC;
    signal Block_proc306_U0_enable_V_ap_vld : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal Block_proc306_U0_start_full_n : STD_LOGIC;
    signal Block_proc306_U0_start_write : STD_LOGIC;

    component Block_proc306 IS
    port (
        enable_V : IN STD_LOGIC_VECTOR (0 downto 0);
        INPUT_STREAM_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
        INPUT_STREAM_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
        INPUT_STREAM_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
        INPUT_STREAM_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        INPUT_STREAM_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        INPUT_STREAM_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        INPUT_STREAM_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        OUTPUT_STREAM_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
        OUTPUT_STREAM_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
        OUTPUT_STREAM_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
        OUTPUT_STREAM_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        OUTPUT_STREAM_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        OUTPUT_STREAM_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        OUTPUT_STREAM_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        INPUT_STREAM_TVALID : IN STD_LOGIC;
        INPUT_STREAM_TREADY : OUT STD_LOGIC;
        OUTPUT_STREAM_TVALID : OUT STD_LOGIC;
        OUTPUT_STREAM_TREADY : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    Block_proc306_U0 : component Block_proc306
    port map (
        enable_V => enable_V,
        INPUT_STREAM_TDATA => INPUT_STREAM_TDATA,
        INPUT_STREAM_TKEEP => INPUT_STREAM_TKEEP,
        INPUT_STREAM_TSTRB => INPUT_STREAM_TSTRB,
        INPUT_STREAM_TUSER => INPUT_STREAM_TUSER,
        INPUT_STREAM_TLAST => INPUT_STREAM_TLAST,
        INPUT_STREAM_TID => INPUT_STREAM_TID,
        INPUT_STREAM_TDEST => INPUT_STREAM_TDEST,
        OUTPUT_STREAM_TDATA => Block_proc306_U0_OUTPUT_STREAM_TDATA,
        OUTPUT_STREAM_TKEEP => Block_proc306_U0_OUTPUT_STREAM_TKEEP,
        OUTPUT_STREAM_TSTRB => Block_proc306_U0_OUTPUT_STREAM_TSTRB,
        OUTPUT_STREAM_TUSER => Block_proc306_U0_OUTPUT_STREAM_TUSER,
        OUTPUT_STREAM_TLAST => Block_proc306_U0_OUTPUT_STREAM_TLAST,
        OUTPUT_STREAM_TID => Block_proc306_U0_OUTPUT_STREAM_TID,
        OUTPUT_STREAM_TDEST => Block_proc306_U0_OUTPUT_STREAM_TDEST,
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_proc306_U0_ap_start,
        INPUT_STREAM_TVALID => INPUT_STREAM_TVALID,
        INPUT_STREAM_TREADY => Block_proc306_U0_INPUT_STREAM_TREADY,
        OUTPUT_STREAM_TVALID => Block_proc306_U0_OUTPUT_STREAM_TVALID,
        OUTPUT_STREAM_TREADY => OUTPUT_STREAM_TREADY,
        ap_done => Block_proc306_U0_ap_done,
        ap_ready => Block_proc306_U0_ap_ready,
        ap_idle => Block_proc306_U0_ap_idle,
        ap_continue => Block_proc306_U0_ap_continue);




    Block_proc306_U0_ap_continue <= ap_const_logic_1;
    Block_proc306_U0_ap_start <= ap_start;
    Block_proc306_U0_enable_V_ap_vld <= ap_const_logic_1;
    Block_proc306_U0_start_full_n <= ap_const_logic_1;
    Block_proc306_U0_start_write <= ap_const_logic_0;
    INPUT_STREAM_TREADY <= Block_proc306_U0_INPUT_STREAM_TREADY;
    OUTPUT_STREAM_TDATA <= Block_proc306_U0_OUTPUT_STREAM_TDATA;
    OUTPUT_STREAM_TDEST <= Block_proc306_U0_OUTPUT_STREAM_TDEST;
    OUTPUT_STREAM_TID <= Block_proc306_U0_OUTPUT_STREAM_TID;
    OUTPUT_STREAM_TKEEP <= Block_proc306_U0_OUTPUT_STREAM_TKEEP;
    OUTPUT_STREAM_TLAST <= Block_proc306_U0_OUTPUT_STREAM_TLAST;
    OUTPUT_STREAM_TSTRB <= Block_proc306_U0_OUTPUT_STREAM_TSTRB;
    OUTPUT_STREAM_TUSER <= Block_proc306_U0_OUTPUT_STREAM_TUSER;
    OUTPUT_STREAM_TVALID <= Block_proc306_U0_OUTPUT_STREAM_TVALID;
    ap_done <= Block_proc306_U0_ap_done;
    ap_idle <= Block_proc306_U0_ap_idle;
    ap_ready <= Block_proc306_U0_ap_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= Block_proc306_U0_ap_done;
    ap_sync_ready <= Block_proc306_U0_ap_ready;
end behav;
