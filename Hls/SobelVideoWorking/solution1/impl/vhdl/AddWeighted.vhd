-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity AddWeighted is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    src1_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src1_data_stream_V_empty_n : IN STD_LOGIC;
    src1_data_stream_V_read : OUT STD_LOGIC;
    src2_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src2_data_stream_V_empty_n : IN STD_LOGIC;
    src2_data_stream_V_read : OUT STD_LOGIC;
    dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_data_stream_V_full_n : IN STD_LOGIC;
    dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of AddWeighted is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_3FE0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111100000000000000000000000000000000000000000000000000000";
    constant ap_const_lv11_438 : STD_LOGIC_VECTOR (10 downto 0) := "10000111000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_780 : STD_LOGIC_VECTOR (10 downto 0) := "11110000000";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv11_433 : STD_LOGIC_VECTOR (10 downto 0) := "10000110011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv12_8 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_const_lv12_9 : STD_LOGIC_VECTOR (11 downto 0) := "000000001001";
    constant ap_const_lv54_3FFFFFFFFFFFFF : STD_LOGIC_VECTOR (53 downto 0) := "111111111111111111111111111111111111111111111111111111";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal src1_data_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_i_reg_945 : STD_LOGIC_VECTOR (0 downto 0);
    signal src2_data_stream_V_blk_n : STD_LOGIC;
    signal dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter29 : STD_LOGIC := '0';
    signal exitcond_i_reg_945_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_4_reg_186 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond4_i_fu_222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_228_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_reg_940 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_i_fu_234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter29 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_i_reg_945_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_945_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_945_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_945_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_945_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_945_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_945_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_945_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_945_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_945_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_945_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_945_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_945_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_945_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_945_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_945_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_945_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_945_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_945_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_945_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_945_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_945_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_945_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_945_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_945_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_945_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_945_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_240_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_106_reg_954 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_107_reg_959 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_216_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_i_reg_974 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_219_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_45_i_reg_979 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_206_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal t1_reg_984 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_211_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal t2_reg_989 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_197_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_46_i_reg_994 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_201_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum_reg_999 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_i_i_i_fu_271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_i_reg_1004 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_i_reg_1004_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_i_reg_1004_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_i_99_fu_277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_i_99_reg_1010 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_i_99_reg_1010_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_i_99_reg_1010_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_reg_1016 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_reg_1016_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_307_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_s_reg_1026 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_311_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_reg_1031 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_9_i_fu_317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_i_reg_1036 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_i_reg_1036_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_i_reg_1036_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_fu_323_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_reg_1042 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_i2_fu_329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i2_reg_1050 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i2_reg_1050_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_2_fu_341_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_2_reg_1056 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_2_reg_1056_pp0_iter27_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_3_i_fu_349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_i_reg_1063 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_i_reg_1063_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1070 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1070_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_96_fu_379_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_96_reg_1076 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_100_reg_1082 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_13_fu_458_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_13_reg_1088 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp2_i_fu_469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_i_reg_1095 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_i_fu_492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_i_reg_1101 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_reg_1107 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_fu_532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_reg_1114 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_105_reg_1121 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_i_fu_546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_i_reg_1126 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_i_fu_552_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_24_i_reg_1132 : STD_LOGIC_VECTOR (53 downto 0);
    signal Range2_V_1_fu_556_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal Range2_V_1_reg_1137 : STD_LOGIC_VECTOR (53 downto 0);
    signal Range1_all_zeros_1_fu_568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_reg_1143 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp34_i_fu_586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp34_i_reg_1148 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_14_fu_662_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_14_reg_1154 : STD_LOGIC_VECTOR (7 downto 0);
    signal underflow_fu_826_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_reg_1160 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_121_demorgan_i_i_fu_839_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_121_demorgan_i_i_reg_1166 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal t_V_reg_175 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_216_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_219_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_11_fu_254_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal loc_V_fu_257_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal loc_V_1_fu_267_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_1_i_fu_299_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp_fu_283_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_7_i1_fu_295_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_2_i_fu_335_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_97_fu_355_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_s_fu_371_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal F2_2_cast_i_fu_376_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_i_fu_388_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_11_i_fu_392_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_5_i3_fu_383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_98_fu_398_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_0_i_i6_i_fu_402_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_i_fu_422_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_25_cast_i_fu_427_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_i_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_99_fu_431_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_12_fu_409_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal qb_fu_439_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_i_fu_454_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp1_i_fu_464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos1_fu_474_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal pos2_fu_483_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_103_fu_498_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos1_cast_i_fu_479_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_i_fu_512_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_21_i_fu_516_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal lD_fu_522_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp6_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos2_cast_i_fu_488_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_i_not_fu_574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_i_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp33_i_fu_580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_95_fu_592_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_101_fu_600_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_i_fu_619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_i_fu_613_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp7_i_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_i_fu_635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_i_fu_623_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp12_demorgan_i_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_i_fu_651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_i_fu_657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_fu_595_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp9_i_fu_640_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_not_i_fu_670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp28_i_fu_675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_i_fu_607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_fu_681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev4_fu_701_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_fu_711_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal or_cond115_i_i_fu_706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_fu_716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_1_i_s_fu_721_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_i_fu_738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond117_i_i_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp35_i_fu_758_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_119_i_i_fu_754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_122_i_i_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp39_i_fu_771_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_i_i_fu_687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_i_s_fu_763_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_i_fu_778_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_i_fu_794_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_fu_693_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp41_i_fu_806_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp7_fu_811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp47_i_fu_822_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_i_fu_800_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp46_i_fu_817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp8_fu_834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_786_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_i_fu_849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_121_demorgan_i_not_s_fu_859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_not_i_fu_854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp50_i_demorgan_fu_877_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp50_i_fu_881_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp51_i_fu_887_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_demorgan_i_fu_845_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp55_demorgan_i_fu_910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_fu_864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp55_i_fu_915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp56_i_fu_921_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_12_0_i_mux_i_fu_870_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp52_i_fu_903_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_197_ce : STD_LOGIC;
    signal grp_fu_201_ce : STD_LOGIC;
    signal grp_fu_206_ce : STD_LOGIC;
    signal grp_fu_211_ce : STD_LOGIC;
    signal grp_fu_216_ce : STD_LOGIC;
    signal grp_fu_219_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component Sobel_filter_daddrcU IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Sobel_filter_dmulsc4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Sobel_filter_sitotde IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    Sobel_filter_daddrcU_U74 : component Sobel_filter_daddrcU
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => t1_reg_984,
        din1 => t2_reg_989,
        ce => grp_fu_197_ce,
        dout => grp_fu_197_p2);

    Sobel_filter_daddrcU_U75 : component Sobel_filter_daddrcU
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_46_i_reg_994,
        din1 => ap_const_lv64_0,
        ce => grp_fu_201_ce,
        dout => grp_fu_201_p2);

    Sobel_filter_dmulsc4_U76 : component Sobel_filter_dmulsc4
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_43_i_reg_974,
        din1 => ap_const_lv64_3FE0000000000000,
        ce => grp_fu_206_ce,
        dout => grp_fu_206_p2);

    Sobel_filter_dmulsc4_U77 : component Sobel_filter_dmulsc4
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_45_i_reg_979,
        din1 => ap_const_lv64_3FE0000000000000,
        ce => grp_fu_211_ce,
        dout => grp_fu_211_p2);

    Sobel_filter_sitotde_U78 : component Sobel_filter_sitotde
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_216_p0,
        ce => grp_fu_216_ce,
        dout => grp_fu_216_p1);

    Sobel_filter_sitotde_U79 : component Sobel_filter_sitotde
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_219_p0,
        ce => grp_fu_219_ce,
        dout => grp_fu_219_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((exitcond4_i_fu_222_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond4_i_fu_222_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter29 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
                elsif (((exitcond4_i_fu_222_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter29 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_4_reg_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_fu_234_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_4_reg_186 <= j_V_fu_240_p2;
            elsif (((exitcond4_i_fu_222_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_4_reg_186 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    t_V_reg_175_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                t_V_reg_175 <= i_V_reg_940;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_175 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_945_pp0_iter25_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                F2_2_reg_1056 <= F2_2_fu_341_p3;
                F2_reg_1042 <= F2_fu_323_p2;
                icmp_reg_1070 <= icmp_fu_365_p2;
                isneg_reg_1016 <= p_Val2_11_fu_254_p1(63 downto 63);
                man_V_1_reg_1031 <= man_V_1_fu_311_p2;
                    p_Result_s_reg_1026(51 downto 0) <= p_Result_s_fu_307_p1(51 downto 0);
                tmp_3_i_reg_1063 <= tmp_3_i_fu_349_p2;
                tmp_9_i_reg_1036 <= tmp_9_i_fu_317_p2;
                tmp_i2_reg_1050 <= tmp_i2_fu_329_p2;
                tmp_i_i_i_i_99_reg_1010 <= tmp_i_i_i_i_99_fu_277_p2;
                tmp_i_i_i_i_reg_1004 <= tmp_i_i_i_i_fu_271_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                F2_2_reg_1056_pp0_iter27_reg <= F2_2_reg_1056;
                exitcond_i_reg_945_pp0_iter10_reg <= exitcond_i_reg_945_pp0_iter9_reg;
                exitcond_i_reg_945_pp0_iter11_reg <= exitcond_i_reg_945_pp0_iter10_reg;
                exitcond_i_reg_945_pp0_iter12_reg <= exitcond_i_reg_945_pp0_iter11_reg;
                exitcond_i_reg_945_pp0_iter13_reg <= exitcond_i_reg_945_pp0_iter12_reg;
                exitcond_i_reg_945_pp0_iter14_reg <= exitcond_i_reg_945_pp0_iter13_reg;
                exitcond_i_reg_945_pp0_iter15_reg <= exitcond_i_reg_945_pp0_iter14_reg;
                exitcond_i_reg_945_pp0_iter16_reg <= exitcond_i_reg_945_pp0_iter15_reg;
                exitcond_i_reg_945_pp0_iter17_reg <= exitcond_i_reg_945_pp0_iter16_reg;
                exitcond_i_reg_945_pp0_iter18_reg <= exitcond_i_reg_945_pp0_iter17_reg;
                exitcond_i_reg_945_pp0_iter19_reg <= exitcond_i_reg_945_pp0_iter18_reg;
                exitcond_i_reg_945_pp0_iter20_reg <= exitcond_i_reg_945_pp0_iter19_reg;
                exitcond_i_reg_945_pp0_iter21_reg <= exitcond_i_reg_945_pp0_iter20_reg;
                exitcond_i_reg_945_pp0_iter22_reg <= exitcond_i_reg_945_pp0_iter21_reg;
                exitcond_i_reg_945_pp0_iter23_reg <= exitcond_i_reg_945_pp0_iter22_reg;
                exitcond_i_reg_945_pp0_iter24_reg <= exitcond_i_reg_945_pp0_iter23_reg;
                exitcond_i_reg_945_pp0_iter25_reg <= exitcond_i_reg_945_pp0_iter24_reg;
                exitcond_i_reg_945_pp0_iter26_reg <= exitcond_i_reg_945_pp0_iter25_reg;
                exitcond_i_reg_945_pp0_iter27_reg <= exitcond_i_reg_945_pp0_iter26_reg;
                exitcond_i_reg_945_pp0_iter28_reg <= exitcond_i_reg_945_pp0_iter27_reg;
                exitcond_i_reg_945_pp0_iter2_reg <= exitcond_i_reg_945_pp0_iter1_reg;
                exitcond_i_reg_945_pp0_iter3_reg <= exitcond_i_reg_945_pp0_iter2_reg;
                exitcond_i_reg_945_pp0_iter4_reg <= exitcond_i_reg_945_pp0_iter3_reg;
                exitcond_i_reg_945_pp0_iter5_reg <= exitcond_i_reg_945_pp0_iter4_reg;
                exitcond_i_reg_945_pp0_iter6_reg <= exitcond_i_reg_945_pp0_iter5_reg;
                exitcond_i_reg_945_pp0_iter7_reg <= exitcond_i_reg_945_pp0_iter6_reg;
                exitcond_i_reg_945_pp0_iter8_reg <= exitcond_i_reg_945_pp0_iter7_reg;
                exitcond_i_reg_945_pp0_iter9_reg <= exitcond_i_reg_945_pp0_iter8_reg;
                icmp_reg_1070_pp0_iter27_reg <= icmp_reg_1070;
                isneg_reg_1016_pp0_iter27_reg <= isneg_reg_1016;
                tmp_3_i_reg_1063_pp0_iter27_reg <= tmp_3_i_reg_1063;
                tmp_9_i_reg_1036_pp0_iter27_reg <= tmp_9_i_reg_1036;
                tmp_9_i_reg_1036_pp0_iter28_reg <= tmp_9_i_reg_1036_pp0_iter27_reg;
                tmp_i2_reg_1050_pp0_iter27_reg <= tmp_i2_reg_1050;
                tmp_i_i_i_i_99_reg_1010_pp0_iter27_reg <= tmp_i_i_i_i_99_reg_1010;
                tmp_i_i_i_i_99_reg_1010_pp0_iter28_reg <= tmp_i_i_i_i_99_reg_1010_pp0_iter27_reg;
                tmp_i_i_i_i_reg_1004_pp0_iter27_reg <= tmp_i_i_i_i_reg_1004;
                tmp_i_i_i_i_reg_1004_pp0_iter28_reg <= tmp_i_i_i_i_reg_1004_pp0_iter27_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_945_pp0_iter26_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                Range1_all_ones_1_reg_1114 <= Range1_all_ones_1_fu_532_p2;
                Range1_all_zeros_1_reg_1143 <= Range1_all_zeros_1_fu_568_p2;
                Range2_V_1_reg_1137 <= Range2_V_1_fu_556_p2;
                p_Val2_13_reg_1088 <= p_Val2_13_fu_458_p2;
                rev_reg_1107 <= rev_fu_506_p2;
                sel_tmp2_i_reg_1095 <= sel_tmp2_i_fu_469_p2;
                sel_tmp34_i_reg_1148 <= sel_tmp34_i_fu_586_p2;
                tmp_100_reg_1082 <= p_Val2_12_fu_409_p3(7 downto 7);
                tmp_105_reg_1121 <= pos2_fu_483_p2(11 downto 11);
                tmp_18_i_reg_1101 <= tmp_18_i_fu_492_p2;
                tmp_23_i_reg_1126 <= tmp_23_i_fu_546_p2;
                    tmp_24_i_reg_1132(31 downto 0) <= tmp_24_i_fu_552_p1(31 downto 0);
                tmp_96_reg_1076 <= tmp_96_fu_379_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond_i_reg_945 <= exitcond_i_fu_234_p2;
                exitcond_i_reg_945_pp0_iter1_reg <= exitcond_i_reg_945;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_940 <= i_V_fu_228_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_945_pp0_iter27_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_121_demorgan_i_i_reg_1166 <= p_121_demorgan_i_i_fu_839_p2;
                p_Val2_14_reg_1154 <= p_Val2_14_fu_662_p3;
                underflow_reg_1160 <= underflow_fu_826_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_945_pp0_iter24_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum_reg_999 <= grp_fu_201_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_945_pp0_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                t1_reg_984 <= grp_fu_206_p2;
                t2_reg_989 <= grp_fu_211_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_945 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_106_reg_954 <= src1_data_stream_V_dout;
                tmp_107_reg_959 <= src2_data_stream_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_945_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_43_i_reg_974 <= grp_fu_216_p1;
                tmp_45_i_reg_979 <= grp_fu_219_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_945_pp0_iter18_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_46_i_reg_994 <= grp_fu_197_p2;
            end if;
        end if;
    end process;
    p_Result_s_reg_1026(53 downto 52) <= "01";
    tmp_24_i_reg_1132(53 downto 32) <= "0000000000000000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter29, exitcond4_i_fu_222_p2, ap_CS_fsm_state2, exitcond_i_fu_234_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter28)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond4_i_fu_222_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((exitcond_i_fu_234_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter29 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter29 = ap_const_logic_1)) or ((exitcond_i_fu_234_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
        F2_2_cast_i_fu_376_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(F2_2_reg_1056),32));

    F2_2_fu_341_p3 <= 
        F2_fu_323_p2 when (tmp_i2_fu_329_p2(0) = '1') else 
        tmp_2_i_fu_335_p2;
    F2_fu_323_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_7_i1_fu_295_p1));
    Range1_all_ones_1_fu_532_p2 <= (tmp_18_i_fu_492_p2 and tmp6_fu_526_p2);
    Range1_all_ones_2_i_fu_794_p2 <= (carry_1_i_i_fu_687_p2 and Range1_all_ones_2_i_s_fu_763_p3);
    Range1_all_ones_2_i_s_fu_763_p3 <= 
        Range1_all_ones_fu_733_p2 when (or_cond117_i_i_fu_729_p2(0) = '1') else 
        sel_tmp35_i_fu_758_p3;
    Range1_all_ones_fu_733_p2 <= (Range2_all_ones_1_i_s_fu_721_p3 and Range1_all_ones_1_reg_1114);
    Range1_all_zeros_1_fu_568_p2 <= "1" when (p_Val2_s_fu_371_p3 = ap_const_lv54_0) else "0";
    Range1_all_zeros_2_i_fu_778_p3 <= 
        p_122_i_i_fu_748_p2 when (or_cond117_i_i_fu_729_p2(0) = '1') else 
        sel_tmp39_i_fu_771_p3;
    Range1_all_zeros_fu_743_p2 <= (ap_const_lv1_1 xor Range1_all_ones_1_reg_1114);
    Range2_V_1_fu_556_p2 <= std_logic_vector(shift_right(unsigned(p_Val2_s_fu_371_p3),to_integer(unsigned('0' & tmp_24_i_fu_552_p1(31-1 downto 0)))));
    Range2_all_ones_1_i_s_fu_721_p3 <= 
        Range2_all_ones_fu_716_p2 when (or_cond115_i_i_fu_706_p2(0) = '1') else 
        rev4_fu_701_p2;
    Range2_all_ones_fu_716_p2 <= "1" when (Range2_V_1_reg_1137 = r_V_fu_711_p2) else "0";
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state33 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(src1_data_stream_V_empty_n, src2_data_stream_V_empty_n, dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, exitcond_i_reg_945, ap_enable_reg_pp0_iter29, exitcond_i_reg_945_pp0_iter28_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((exitcond_i_reg_945_pp0_iter28_reg = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_i_reg_945 = ap_const_lv1_0) and (src2_data_stream_V_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_945 = ap_const_lv1_0) and (src1_data_stream_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(src1_data_stream_V_empty_n, src2_data_stream_V_empty_n, dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, exitcond_i_reg_945, ap_enable_reg_pp0_iter29, exitcond_i_reg_945_pp0_iter28_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((exitcond_i_reg_945_pp0_iter28_reg = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_i_reg_945 = ap_const_lv1_0) and (src2_data_stream_V_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_945 = ap_const_lv1_0) and (src1_data_stream_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(src1_data_stream_V_empty_n, src2_data_stream_V_empty_n, dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, exitcond_i_reg_945, ap_enable_reg_pp0_iter29, exitcond_i_reg_945_pp0_iter28_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((exitcond_i_reg_945_pp0_iter28_reg = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_i_reg_945 = ap_const_lv1_0) and (src2_data_stream_V_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_945 = ap_const_lv1_0) and (src1_data_stream_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state32_pp0_stage0_iter29_assign_proc : process(dst_data_stream_V_full_n, exitcond_i_reg_945_pp0_iter28_reg)
    begin
                ap_block_state32_pp0_stage0_iter29 <= ((exitcond_i_reg_945_pp0_iter28_reg = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(src1_data_stream_V_empty_n, src2_data_stream_V_empty_n, exitcond_i_reg_945)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((exitcond_i_reg_945 = ap_const_lv1_0) and (src2_data_stream_V_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_945 = ap_const_lv1_0) and (src1_data_stream_V_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond_i_fu_234_p2)
    begin
        if ((exitcond_i_fu_234_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond4_i_fu_222_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond4_i_fu_222_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28)
    begin
        if (((ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    brmerge_i_fu_864_p2 <= (underflow_not_i_fu_849_p2 or p_121_demorgan_i_not_s_fu_859_p2);
    brmerge_i_i_not_i_fu_854_p2 <= (underflow_not_i_fu_849_p2 and p_121_demorgan_i_i_reg_1166);
    carry_1_i_i_fu_687_p2 <= (tmp5_fu_681_p2 and sel_tmp3_i_fu_619_p2);
    deleted_zeros_fu_786_p3 <= 
        Range1_all_ones_2_i_s_fu_763_p3 when (carry_1_i_i_fu_687_p2(0) = '1') else 
        Range1_all_zeros_2_i_fu_778_p3;

    dst_data_stream_V_blk_n_assign_proc : process(dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter29, exitcond_i_reg_945_pp0_iter28_reg)
    begin
        if (((exitcond_i_reg_945_pp0_iter28_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_1))) then 
            dst_data_stream_V_blk_n <= dst_data_stream_V_full_n;
        else 
            dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_data_stream_V_din <= 
        p_Val2_12_0_i_mux_i_fu_870_p3 when (sel_tmp56_i_fu_921_p2(0) = '1') else 
        sel_tmp52_i_fu_903_p3;

    dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter29, exitcond_i_reg_945_pp0_iter28_reg, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_i_reg_945_pp0_iter28_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dst_data_stream_V_write <= ap_const_logic_1;
        else 
            dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    exitcond4_i_fu_222_p2 <= "1" when (t_V_reg_175 = ap_const_lv11_438) else "0";
    exitcond_i_fu_234_p2 <= "1" when (t_V_4_reg_186 = ap_const_lv11_780) else "0";

    grp_fu_197_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_197_ce <= ap_const_logic_1;
        else 
            grp_fu_197_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_201_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_201_ce <= ap_const_logic_1;
        else 
            grp_fu_201_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_206_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_206_ce <= ap_const_logic_1;
        else 
            grp_fu_206_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_211_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_211_ce <= ap_const_logic_1;
        else 
            grp_fu_211_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_216_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_216_ce <= ap_const_logic_1;
        else 
            grp_fu_216_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_216_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_106_reg_954),32));

    grp_fu_219_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_219_ce <= ap_const_logic_1;
        else 
            grp_fu_219_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_219_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_107_reg_959),32));
    i_V_fu_228_p2 <= std_logic_vector(unsigned(t_V_reg_175) + unsigned(ap_const_lv11_1));
    icmp_fu_365_p2 <= "1" when (tmp_97_fu_355_p4 = ap_const_lv9_0) else "0";

    internal_ap_ready_assign_proc : process(exitcond4_i_fu_222_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond4_i_fu_222_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    j_V_fu_240_p2 <= std_logic_vector(unsigned(t_V_4_reg_186) + unsigned(ap_const_lv11_1));
    lD_fu_522_p1 <= tmp_21_i_fu_516_p2(1 - 1 downto 0);
    loc_V_1_fu_267_p1 <= p_Val2_11_fu_254_p1(52 - 1 downto 0);
    loc_V_fu_257_p4 <= p_Val2_11_fu_254_p1(62 downto 52);
    man_V_1_fu_311_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_s_fu_307_p1));
    newsignbit_fu_693_p3 <= p_Val2_14_fu_662_p3(7 downto 7);
    not_sel_tmp28_i_fu_675_p2 <= (tmp_8_not_i_fu_670_p2 or sel_tmp12_demorgan_i_fu_647_p2);
    or_cond115_i_i_fu_706_p2 <= (tmp_23_i_reg_1126 and rev4_fu_701_p2);
    or_cond117_i_i_fu_729_p2 <= (tmp_23_i_reg_1126 and rev_reg_1107);
    p_119_i_i_fu_754_p2 <= (rev_reg_1107 or Range1_all_zeros_1_reg_1143);
    p_121_demorgan_i_i_fu_839_p2 <= (tmp8_fu_834_p2 or deleted_zeros_fu_786_p3);
    p_121_demorgan_i_not_s_fu_859_p2 <= (p_121_demorgan_i_i_reg_1166 xor ap_const_lv1_1);
    p_122_i_i_fu_748_p2 <= (tmp_25_i_fu_738_p2 and Range1_all_zeros_fu_743_p2);
    p_Result_s_fu_307_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_i_fu_299_p3),54));
    p_Val2_0_i_i6_i_fu_402_p3 <= 
        ap_const_lv8_FF when (isneg_reg_1016(0) = '1') else 
        ap_const_lv8_0;
    p_Val2_11_fu_254_p1 <= sum_reg_999;
    p_Val2_12_0_i_mux_i_fu_870_p3 <= 
        p_Val2_14_reg_1154 when (brmerge_i_i_not_i_fu_854_p2(0) = '1') else 
        ap_const_lv8_FF;
    p_Val2_12_fu_409_p3 <= 
        tmp_98_fu_398_p1 when (tmp_5_i3_fu_383_p2(0) = '1') else 
        p_Val2_0_i_i6_i_fu_402_p3;
    p_Val2_13_fu_458_p2 <= std_logic_vector(unsigned(tmp_16_i_fu_454_p1) + unsigned(p_Val2_12_fu_409_p3));
    p_Val2_14_fu_662_p3 <= 
        tmp_13_i_fu_595_p2 when (sel_tmp13_i_fu_657_p2(0) = '1') else 
        sel_tmp9_i_fu_640_p3;
    p_Val2_s_fu_371_p3 <= 
        man_V_1_reg_1031 when (isneg_reg_1016(0) = '1') else 
        p_Result_s_reg_1026;
        pos1_cast_i_fu_479_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos1_fu_474_p2),32));

    pos1_fu_474_p2 <= std_logic_vector(unsigned(ap_const_lv12_8) + unsigned(F2_reg_1042));
        pos2_cast_i_fu_488_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos2_fu_483_p2),32));

    pos2_fu_483_p2 <= std_logic_vector(unsigned(ap_const_lv12_9) + unsigned(F2_reg_1042));
    qb_fu_439_p3 <= 
        isneg_reg_1016 when (tmp_14_i_fu_417_p2(0) = '1') else 
        tmp_99_fu_431_p3;
    r_V_fu_711_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & tmp_24_i_reg_1132(31-1 downto 0)))));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    rev4_fu_701_p2 <= (tmp_105_reg_1121 xor ap_const_lv1_1);
    rev_fu_506_p2 <= (tmp_103_fu_498_p3 xor ap_const_lv1_1);
    sel_tmp12_demorgan_i_fu_647_p2 <= (tmp_i2_reg_1050_pp0_iter27_reg or tmp_3_i_reg_1063_pp0_iter27_reg);
    sel_tmp12_i_fu_651_p2 <= (sel_tmp12_demorgan_i_fu_647_p2 xor ap_const_lv1_1);
    sel_tmp13_i_fu_657_p2 <= (sel_tmp12_i_fu_651_p2 and icmp_reg_1070_pp0_iter27_reg);
    sel_tmp1_i_fu_464_p2 <= (tmp_3_i_reg_1063 xor ap_const_lv1_1);
    sel_tmp2_i_fu_469_p2 <= (tmp_i2_reg_1050 and sel_tmp1_i_fu_464_p2);
    sel_tmp33_i_fu_580_p2 <= (tmp_23_i_not_fu_574_p2 or tmp_103_fu_498_p3);
    sel_tmp34_i_fu_586_p2 <= (tmp_27_i_fu_562_p2 and sel_tmp33_i_fu_580_p2);
    sel_tmp35_i_fu_758_p3 <= 
        Range1_all_ones_1_reg_1114 when (sel_tmp34_i_reg_1148(0) = '1') else 
        rev_reg_1107;
    sel_tmp39_i_fu_771_p3 <= 
        Range1_all_zeros_fu_743_p2 when (sel_tmp34_i_reg_1148(0) = '1') else 
        p_119_i_i_fu_754_p2;
    sel_tmp3_i_fu_619_p2 <= (tmp_100_reg_1082 and sel_tmp2_i_reg_1095);
    sel_tmp41_i_fu_806_p2 <= (tmp_18_i_reg_1101 xor ap_const_lv1_1);
    sel_tmp46_i_fu_817_p2 <= (tmp7_fu_811_p2 and isneg_reg_1016_pp0_iter27_reg);
    sel_tmp47_i_fu_822_p2 <= (tmp_18_i_reg_1101 and isneg_reg_1016_pp0_iter27_reg);
    sel_tmp4_i_fu_623_p3 <= 
        p_Val2_13_reg_1088 when (sel_tmp3_i_fu_619_p2(0) = '1') else 
        sel_tmp_i_fu_613_p3;
    sel_tmp50_i_demorgan_fu_877_p2 <= (tmp_i_i_i_i_reg_1004_pp0_iter28_reg and tmp_i_i_i_i_99_reg_1010_pp0_iter28_reg);
    sel_tmp50_i_fu_881_p2 <= (sel_tmp50_i_demorgan_fu_877_p2 xor ap_const_lv1_1);
    sel_tmp51_i_fu_887_p2 <= (tmp_9_i_reg_1036_pp0_iter28_reg and sel_tmp50_i_fu_881_p2);
    sel_tmp52_i_fu_903_p3 <= 
        ap_const_lv8_0 when (tmp_45_fu_898_p2(0) = '1') else 
        p_Val2_14_reg_1154;
    sel_tmp55_demorgan_i_fu_910_p2 <= (tmp_demorgan_i_fu_845_p2 or tmp_9_i_reg_1036_pp0_iter28_reg);
    sel_tmp55_i_fu_915_p2 <= (sel_tmp55_demorgan_i_fu_910_p2 xor ap_const_lv1_1);
    sel_tmp56_i_fu_921_p2 <= (sel_tmp55_i_fu_915_p2 and brmerge_i_fu_864_p2);
    sel_tmp7_i_fu_630_p2 <= (tmp_100_reg_1082 xor ap_const_lv1_1);
    sel_tmp8_i_fu_635_p2 <= (sel_tmp7_i_fu_630_p2 and sel_tmp2_i_reg_1095);
    sel_tmp9_i_fu_640_p3 <= 
        p_Val2_13_reg_1088 when (sel_tmp8_i_fu_635_p2(0) = '1') else 
        sel_tmp4_i_fu_623_p3;
    sel_tmp_i_fu_613_p3 <= 
        tmp_96_reg_1076 when (tmp_3_i_reg_1063_pp0_iter27_reg(0) = '1') else 
        ap_const_lv8_0;

    src1_data_stream_V_blk_n_assign_proc : process(src1_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_i_reg_945)
    begin
        if (((exitcond_i_reg_945 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            src1_data_stream_V_blk_n <= src1_data_stream_V_empty_n;
        else 
            src1_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src1_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_i_reg_945, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_i_reg_945 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            src1_data_stream_V_read <= ap_const_logic_1;
        else 
            src1_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;


    src2_data_stream_V_blk_n_assign_proc : process(src2_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_i_reg_945)
    begin
        if (((exitcond_i_reg_945 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            src2_data_stream_V_blk_n <= src2_data_stream_V_empty_n;
        else 
            src2_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src2_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_i_reg_945, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_i_reg_945 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            src2_data_stream_V_read <= ap_const_logic_1;
        else 
            src2_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp5_fu_681_p2 <= (tmp_17_i_fu_607_p2 and not_sel_tmp28_i_fu_675_p2);
    tmp6_fu_526_p2 <= (rev_fu_506_p2 and lD_fu_522_p1);
    tmp7_fu_811_p2 <= (sel_tmp41_i_fu_806_p2 and newsignbit_fu_693_p3);
    tmp8_fu_834_p2 <= (sel_tmp41_i_fu_806_p2 or isneg_reg_1016_pp0_iter27_reg);
    tmp_101_fu_600_p3 <= p_Val2_13_reg_1088(7 downto 7);
    tmp_103_fu_498_p3 <= pos1_fu_474_p2(11 downto 11);
    tmp_10_i_fu_388_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(F2_2_cast_i_fu_376_p1),54));
    tmp_11_i_fu_392_p2 <= std_logic_vector(shift_right(signed(p_Val2_s_fu_371_p3),to_integer(unsigned('0' & tmp_10_i_fu_388_p1(31-1 downto 0)))));
    tmp_13_i_fu_595_p2 <= std_logic_vector(shift_left(unsigned(tmp_96_reg_1076),to_integer(unsigned('0' & tmp_95_fu_592_p1(8-1 downto 0)))));
    tmp_14_i_fu_417_p2 <= "1" when (signed(F2_reg_1042) > signed(ap_const_lv12_36)) else "0";
    tmp_15_i_fu_422_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(F2_reg_1042));
    tmp_16_i_fu_454_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qb_fu_439_p3),8));
    tmp_17_i_fu_607_p2 <= (tmp_101_fu_600_p3 xor ap_const_lv1_1);
    tmp_18_i_fu_492_p2 <= "1" when (signed(pos1_fu_474_p2) < signed(ap_const_lv12_36)) else "0";
    tmp_1_i_fu_299_p3 <= (ap_const_lv1_1 & loc_V_1_fu_267_p1);
    tmp_20_i_fu_512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos1_cast_i_fu_479_p1),54));
    tmp_21_i_fu_516_p2 <= std_logic_vector(shift_right(signed(p_Val2_s_fu_371_p3),to_integer(unsigned('0' & tmp_20_i_fu_512_p1(31-1 downto 0)))));
    tmp_23_i_fu_546_p2 <= "1" when (signed(pos2_fu_483_p2) < signed(ap_const_lv12_36)) else "0";
    tmp_23_i_not_fu_574_p2 <= (tmp_23_i_fu_546_p2 xor ap_const_lv1_1);
    tmp_24_i_fu_552_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos2_cast_i_fu_488_p1),54));
    tmp_25_cast_i_fu_427_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_i_fu_422_p2),32));
    tmp_25_i_fu_738_p2 <= "1" when (Range2_V_1_reg_1137 = ap_const_lv54_0) else "0";
    tmp_27_i_fu_562_p2 <= "1" when (pos2_fu_483_p2 = ap_const_lv12_36) else "0";
    tmp_28_i_fu_800_p2 <= (ap_const_lv1_1 xor Range1_all_ones_2_i_fu_794_p2);
    tmp_2_i_fu_335_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(F2_fu_323_p2));
    tmp_3_i_fu_349_p2 <= "1" when (loc_V_fu_257_p4 = ap_const_lv11_433) else "0";
    tmp_45_fu_898_p2 <= (underflow_reg_1160 or tmp_s_fu_892_p2);
    tmp_5_i3_fu_383_p2 <= "1" when (unsigned(F2_2_reg_1056) < unsigned(ap_const_lv12_36)) else "0";
    tmp_7_i1_fu_295_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_fu_257_p4),12));
    tmp_8_not_i_fu_670_p2 <= (icmp_reg_1070_pp0_iter27_reg xor ap_const_lv1_1);
    tmp_95_fu_592_p1 <= F2_2_reg_1056_pp0_iter27_reg(8 - 1 downto 0);
    tmp_96_fu_379_p1 <= p_Val2_s_fu_371_p3(8 - 1 downto 0);
    tmp_97_fu_355_p4 <= F2_2_fu_341_p3(11 downto 3);
    tmp_98_fu_398_p1 <= tmp_11_i_fu_392_p2(8 - 1 downto 0);
    tmp_99_fu_431_p3 <= p_Val2_s_fu_371_p3(to_integer(unsigned(tmp_25_cast_i_fu_427_p1)) downto to_integer(unsigned(tmp_25_cast_i_fu_427_p1))) when (to_integer(unsigned(tmp_25_cast_i_fu_427_p1))>= 0 and to_integer(unsigned(tmp_25_cast_i_fu_427_p1))<=53) else "-";
    tmp_9_i_fu_317_p2 <= "1" when (tmp_fu_283_p1 = ap_const_lv63_0) else "0";
    tmp_demorgan_i_fu_845_p2 <= (tmp_i_i_i_i_reg_1004_pp0_iter28_reg and tmp_i_i_i_i_99_reg_1010_pp0_iter28_reg);
    tmp_fu_283_p1 <= p_Val2_11_fu_254_p1(63 - 1 downto 0);
    tmp_i2_fu_329_p2 <= "1" when (signed(F2_fu_323_p2) > signed(ap_const_lv12_0)) else "0";
    tmp_i_i_i_i_99_fu_277_p2 <= "0" when (loc_V_1_fu_267_p1 = ap_const_lv52_0) else "1";
    tmp_i_i_i_i_fu_271_p2 <= "1" when (loc_V_fu_257_p4 = ap_const_lv11_7FF) else "0";
    tmp_s_fu_892_p2 <= (tmp_demorgan_i_fu_845_p2 or sel_tmp51_i_fu_887_p2);
    underflow_fu_826_p3 <= 
        tmp_28_i_fu_800_p2 when (sel_tmp47_i_fu_822_p2(0) = '1') else 
        sel_tmp46_i_fu_817_p2;
    underflow_not_i_fu_849_p2 <= (underflow_reg_1160 xor ap_const_lv1_1);
end behav;
