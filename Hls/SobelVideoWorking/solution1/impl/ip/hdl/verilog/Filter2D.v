// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write,
        p_kernel_val_0_V_1_read,
        p_kernel_val_0_V_2_read,
        p_kernel_val_1_V_0_read,
        p_kernel_val_1_V_2_read,
        p_kernel_val_2_V_0_read,
        p_kernel_val_2_V_1_read
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state9 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;
input  [1:0] p_kernel_val_0_V_1_read;
input  [1:0] p_kernel_val_0_V_2_read;
input  [2:0] p_kernel_val_1_V_0_read;
input  [3:0] p_kernel_val_1_V_2_read;
input  [1:0] p_kernel_val_2_V_0_read;
input  [2:0] p_kernel_val_2_V_1_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond388_i_reg_1422;
reg   [0:0] exitcond388_i_reg_1422_pp0_iter1_reg;
reg   [0:0] or_cond_i_i_reg_1431;
reg   [0:0] or_cond_i_i_reg_1431_pp0_iter1_reg;
reg   [0:0] icmp_reg_1387;
reg   [0:0] tmp_s_reg_1378;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter5;
reg   [0:0] or_cond_i_reg_1452;
reg   [0:0] or_cond_i_reg_1452_pp0_iter4_reg;
reg   [10:0] t_V_2_reg_323;
wire  signed [9:0] OP2_V_0_1_cast_fu_334_p1;
reg  signed [9:0] OP2_V_0_1_cast_reg_1339;
wire  signed [9:0] OP2_V_0_2_cast_fu_338_p1;
reg  signed [9:0] OP2_V_0_2_cast_reg_1344;
wire  signed [10:0] OP2_V_1_cast_fu_342_p1;
reg  signed [10:0] OP2_V_1_cast_reg_1349;
wire   [11:0] OP2_V_1_2_cast_fu_346_p1;
reg   [11:0] OP2_V_1_2_cast_reg_1354;
wire  signed [9:0] OP2_V_2_cast_fu_350_p1;
reg  signed [9:0] OP2_V_2_cast_reg_1359;
wire   [10:0] OP2_V_2_1_cast_fu_354_p1;
reg   [10:0] OP2_V_2_1_cast_reg_1364;
wire   [0:0] exitcond389_i_fu_362_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] i_V_fu_368_p2;
reg   [10:0] i_V_reg_1373;
wire   [0:0] tmp_s_fu_374_p2;
wire   [0:0] tmp_375_0_not_fu_380_p2;
reg   [0:0] tmp_375_0_not_reg_1382;
wire   [0:0] icmp_fu_396_p2;
wire   [0:0] tmp_2_fu_402_p2;
reg   [0:0] tmp_2_reg_1392;
wire   [0:0] tmp_419_1_fu_408_p2;
reg   [0:0] tmp_419_1_reg_1396;
wire   [0:0] tmp_3_fu_414_p2;
reg   [0:0] tmp_3_reg_1400;
wire   [1:0] row_assign_10_0_t_fu_568_p2;
reg   [1:0] row_assign_10_0_t_reg_1407;
wire   [1:0] row_assign_10_1_t_fu_606_p2;
reg   [1:0] row_assign_10_1_t_reg_1412;
wire   [1:0] row_assign_10_2_t_fu_644_p2;
reg   [1:0] row_assign_10_2_t_reg_1417;
wire   [0:0] exitcond388_i_fu_654_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
reg    ap_predicate_op161_read_state5;
reg    ap_predicate_op172_read_state5;
reg    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
reg    ap_block_state8_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond388_i_reg_1422_pp0_iter2_reg;
wire   [10:0] j_V_fu_660_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] or_cond_i_i_fu_712_p2;
wire  signed [13:0] x_fu_790_p3;
reg  signed [13:0] x_reg_1435;
wire   [1:0] tmp_73_fu_798_p1;
reg   [1:0] tmp_73_reg_1440;
reg   [1:0] tmp_73_reg_1440_pp0_iter1_reg;
wire   [0:0] brmerge_fu_802_p2;
reg   [0:0] brmerge_reg_1445;
reg   [0:0] brmerge_reg_1445_pp0_iter1_reg;
wire   [0:0] or_cond_i_fu_807_p2;
reg   [0:0] or_cond_i_reg_1452_pp0_iter1_reg;
reg   [0:0] or_cond_i_reg_1452_pp0_iter2_reg;
reg   [0:0] or_cond_i_reg_1452_pp0_iter3_reg;
reg   [10:0] k_buf_0_val_3_addr_reg_1456;
reg   [10:0] k_buf_0_val_4_addr_reg_1462;
reg   [10:0] k_buf_0_val_5_addr_reg_1468;
wire   [7:0] src_kernel_win_0_va_23_fu_949_p3;
reg   [7:0] src_kernel_win_0_va_23_reg_1474;
wire   [7:0] src_kernel_win_0_va_24_fu_967_p3;
reg   [7:0] src_kernel_win_0_va_24_reg_1481;
wire   [7:0] src_kernel_win_0_va_25_fu_985_p3;
reg   [7:0] src_kernel_win_0_va_25_reg_1487;
wire  signed [10:0] grp_fu_1248_p3;
reg  signed [10:0] p_Val2_89_0_1_reg_1492;
wire   [11:0] p_Val2_89_1_1_fu_1064_p2;
reg   [11:0] p_Val2_89_1_1_reg_1497;
wire   [11:0] r_V_8_1_2_fu_1073_p2;
reg   [11:0] r_V_8_1_2_reg_1502;
wire   [7:0] tmp_79_fu_1097_p1;
reg   [7:0] tmp_79_reg_1507;
wire   [10:0] tmp4_fu_1127_p2;
reg   [10:0] tmp4_reg_1512;
wire   [7:0] tmp6_fu_1133_p2;
reg   [7:0] tmp6_reg_1517;
wire   [7:0] tmp8_fu_1139_p2;
reg   [7:0] tmp8_reg_1522;
wire   [7:0] p_Val2_s_fu_1240_p3;
reg   [7:0] p_Val2_s_reg_1527;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
reg    ap_condition_pp0_exit_iter2_state5;
reg    ap_enable_reg_pp0_iter4;
wire   [10:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [7:0] k_buf_0_val_3_q0;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [10:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [7:0] k_buf_0_val_4_q0;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [10:0] t_V_reg_312;
wire    ap_CS_fsm_state9;
wire   [63:0] tmp_23_fu_815_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_150;
reg   [7:0] src_kernel_win_0_va_18_fu_154;
reg   [7:0] src_kernel_win_0_va_19_fu_158;
reg   [7:0] src_kernel_win_0_va_20_fu_162;
reg   [7:0] src_kernel_win_0_va_21_fu_166;
reg   [7:0] src_kernel_win_0_va_22_fu_170;
reg   [7:0] right_border_buf_0_s_fu_174;
wire   [7:0] col_buf_0_val_0_0_fu_857_p3;
reg   [7:0] right_border_buf_0_14_fu_178;
reg   [7:0] right_border_buf_0_15_fu_182;
reg   [7:0] right_border_buf_0_16_fu_186;
wire   [7:0] col_buf_0_val_1_0_fu_876_p3;
reg   [7:0] right_border_buf_0_17_fu_190;
reg   [7:0] right_border_buf_0_18_fu_194;
wire   [7:0] col_buf_0_val_2_0_fu_895_p3;
wire   [9:0] tmp_55_fu_386_p4;
wire   [11:0] t_V_cast_fu_358_p1;
wire   [11:0] tmp_7_fu_424_p2;
wire   [0:0] tmp_57_fu_430_p3;
wire   [0:0] tmp_10_fu_444_p2;
wire   [0:0] rev_fu_438_p2;
wire   [0:0] tmp_58_fu_456_p3;
wire   [11:0] p_assign_7_fu_464_p2;
wire   [11:0] p_p2_i425_i_fu_470_p3;
wire   [11:0] p_assign_6_1_fu_488_p2;
wire   [11:0] p_assign_6_2_fu_514_p2;
wire   [1:0] tmp_59_fu_484_p1;
wire   [0:0] tmp_13_fu_478_p2;
wire   [1:0] tmp_28_fu_540_p2;
wire   [1:0] tmp_56_fu_420_p1;
wire   [0:0] or_cond_i424_i_fu_450_p2;
wire   [1:0] tmp_30_fu_554_p2;
wire   [1:0] tmp_29_fu_546_p3;
wire   [1:0] tmp_31_fu_560_p3;
wire   [1:0] tmp_62_fu_510_p1;
wire   [0:0] tmp_61_fu_502_p3;
wire   [1:0] tmp_66_fu_580_p2;
wire   [1:0] tmp_67_fu_586_p1;
wire   [0:0] tmp_60_fu_494_p3;
wire   [1:0] tmp_41_fu_590_p3;
wire   [1:0] tmp_33_fu_574_p2;
wire   [1:0] tmp_35_fu_598_p3;
wire   [1:0] tmp_65_fu_536_p1;
wire   [0:0] tmp_64_fu_528_p3;
wire   [1:0] tmp_68_fu_618_p2;
wire   [1:0] tmp_69_fu_624_p1;
wire   [0:0] tmp_63_fu_520_p3;
wire   [1:0] tmp_42_fu_628_p3;
wire   [1:0] tmp_37_fu_612_p2;
wire   [1:0] tmp_39_fu_636_p3;
wire   [9:0] tmp_70_fu_666_p4;
wire   [11:0] t_V_2_cast_fu_650_p1;
wire  signed [11:0] ImagLoc_x_fu_682_p2;
wire   [0:0] tmp_71_fu_692_p3;
wire   [0:0] tmp_19_fu_706_p2;
wire   [0:0] rev2_fu_700_p2;
wire   [0:0] tmp_72_fu_718_p3;
wire   [11:0] p_assign_1_fu_726_p2;
wire  signed [11:0] p_p2_i_i_fu_732_p3;
wire  signed [12:0] p_p2_i_i_cast_fu_744_p1;
wire  signed [12:0] ImagLoc_x_cast_fu_688_p1;
wire   [12:0] p_assign_2_fu_754_p2;
wire   [12:0] p_assign_3_fu_760_p3;
wire   [0:0] tmp_19_not_fu_772_p2;
wire   [0:0] tmp_21_fu_748_p2;
wire   [0:0] sel_tmp7_fu_778_p2;
wire   [0:0] sel_tmp8_fu_784_p2;
wire  signed [13:0] p_p2_i_i_cast1_fu_740_p1;
wire   [13:0] sel_tmp_cast_fu_768_p1;
wire   [0:0] icmp2_fu_676_p2;
wire  signed [31:0] col_assign_cast_fu_812_p1;
wire   [1:0] col_assign_3_t_fu_840_p2;
wire   [7:0] tmp_24_fu_845_p5;
wire   [7:0] tmp_25_fu_864_p5;
wire   [7:0] tmp_26_fu_883_p5;
wire   [7:0] tmp_32_fu_938_p5;
wire   [7:0] tmp_36_fu_956_p5;
wire   [7:0] tmp_40_fu_974_p5;
wire   [8:0] OP1_V_0_cast_fu_998_p1;
wire  signed [8:0] r_V_8_fu_1002_p2;
wire  signed [10:0] grp_fu_1255_p3;
wire  signed [2:0] r_V_8_1_fu_1048_p0;
wire   [7:0] r_V_8_1_fu_1048_p1;
wire  signed [10:0] r_V_8_1_fu_1048_p2;
wire  signed [11:0] tmp_463_1_cast_cast_fu_1053_p1;
wire  signed [11:0] p_Val2_89_0_2_cast_fu_1041_p1;
wire   [3:0] r_V_8_1_2_fu_1073_p0;
wire   [7:0] r_V_8_1_2_fu_1073_p1;
wire   [7:0] tmp_77_fu_1061_p1;
wire   [7:0] tmp_76_fu_1057_p1;
wire  signed [1:0] r_V_8_2_fu_1092_p0;
wire   [7:0] r_V_8_2_fu_1092_p1;
wire   [9:0] r_V_8_2_fu_1092_p2;
wire   [2:0] r_V_8_2_1_fu_1105_p0;
wire   [7:0] r_V_8_2_1_fu_1105_p1;
wire   [10:0] r_V_8_2_1_fu_1105_p2;
wire   [9:0] tmp_463_2_2_cast_cas_fu_1114_p1;
wire   [9:0] tmp5_fu_1117_p2;
wire  signed [10:0] tmp5_cast_fu_1123_p1;
wire   [7:0] tmp_43_fu_1082_p2;
wire   [7:0] tmp_78_fu_1078_p1;
wire   [7:0] tmp_80_fu_1110_p1;
wire   [11:0] tmp3_fu_1168_p2;
wire  signed [11:0] tmp4_cast_fu_1172_p1;
wire   [11:0] p_Val2_4_fu_1175_p2;
wire   [7:0] tmp7_fu_1189_p2;
wire   [0:0] isneg_fu_1181_p3;
wire   [3:0] tmp_44_fu_1198_p4;
wire   [0:0] not_i_i_i_fu_1214_p2;
wire   [0:0] tmp_i_i_fu_1208_p2;
wire   [0:0] overflow_fu_1220_p2;
wire   [0:0] tmp_i_i_84_fu_1234_p2;
wire   [7:0] p_mux_i_i_cast_fu_1226_p3;
wire   [7:0] p_Val2_2_fu_1193_p2;
wire  signed [1:0] grp_fu_1248_p0;
wire   [7:0] grp_fu_1248_p1;
wire  signed [1:0] grp_fu_1255_p0;
wire   [7:0] grp_fu_1255_p1;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_1248_p10;
wire   [9:0] grp_fu_1255_p10;
wire   [11:0] r_V_8_1_2_fu_1073_p10;
wire   [10:0] r_V_8_1_fu_1048_p10;
wire   [10:0] r_V_8_2_1_fu_1105_p10;
wire   [9:0] r_V_8_2_fu_1092_p10;
reg    ap_condition_364;
reg    ap_condition_358;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_addr_reg_1456),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_V_dout)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_addr_reg_1462),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_addr_reg_1468),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

Sobel_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
Sobel_filter_mux_hbi_U52(
    .din0(right_border_buf_0_s_fu_174),
    .din1(right_border_buf_0_14_fu_178),
    .din2(8'd0),
    .din3(col_assign_3_t_fu_840_p2),
    .dout(tmp_24_fu_845_p5)
);

Sobel_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
Sobel_filter_mux_hbi_U53(
    .din0(right_border_buf_0_16_fu_186),
    .din1(right_border_buf_0_17_fu_190),
    .din2(8'd0),
    .din3(col_assign_3_t_fu_840_p2),
    .dout(tmp_25_fu_864_p5)
);

Sobel_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
Sobel_filter_mux_hbi_U54(
    .din0(right_border_buf_0_18_fu_194),
    .din1(right_border_buf_0_15_fu_182),
    .din2(8'd0),
    .din3(col_assign_3_t_fu_840_p2),
    .dout(tmp_26_fu_883_p5)
);

Sobel_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
Sobel_filter_mux_hbi_U55(
    .din0(col_buf_0_val_0_0_fu_857_p3),
    .din1(col_buf_0_val_1_0_fu_876_p3),
    .din2(col_buf_0_val_2_0_fu_895_p3),
    .din3(row_assign_10_0_t_reg_1407),
    .dout(tmp_32_fu_938_p5)
);

Sobel_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
Sobel_filter_mux_hbi_U56(
    .din0(col_buf_0_val_0_0_fu_857_p3),
    .din1(col_buf_0_val_1_0_fu_876_p3),
    .din2(col_buf_0_val_2_0_fu_895_p3),
    .din3(row_assign_10_1_t_reg_1412),
    .dout(tmp_36_fu_956_p5)
);

Sobel_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
Sobel_filter_mux_hbi_U57(
    .din0(col_buf_0_val_0_0_fu_857_p3),
    .din1(col_buf_0_val_1_0_fu_876_p3),
    .din2(col_buf_0_val_2_0_fu_895_p3),
    .din3(row_assign_10_2_t_reg_1417),
    .dout(tmp_40_fu_974_p5)
);

Sobel_filter_mac_pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 11 ))
Sobel_filter_mac_pcA_U58(
    .din0(grp_fu_1248_p0),
    .din1(grp_fu_1248_p1),
    .din2(r_V_8_fu_1002_p2),
    .dout(grp_fu_1248_p3)
);

Sobel_filter_mac_qcK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
Sobel_filter_mac_qcK_U59(
    .din0(grp_fu_1255_p0),
    .din1(grp_fu_1255_p1),
    .din2(p_Val2_89_0_1_reg_1492),
    .dout(grp_fu_1255_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond388_i_fu_654_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond389_i_fu_362_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter2_state5)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if (((exitcond389_i_fu_362_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_fu_654_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_2_reg_323 <= j_V_fu_660_p2;
    end else if (((exitcond389_i_fu_362_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_2_reg_323 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        t_V_reg_312 <= i_V_reg_1373;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_312 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        OP2_V_0_1_cast_reg_1339 <= OP2_V_0_1_cast_fu_334_p1;
        OP2_V_0_2_cast_reg_1344 <= OP2_V_0_2_cast_fu_338_p1;
        OP2_V_1_2_cast_reg_1354[3 : 0] <= OP2_V_1_2_cast_fu_346_p1[3 : 0];
        OP2_V_1_cast_reg_1349 <= OP2_V_1_cast_fu_342_p1;
        OP2_V_2_1_cast_reg_1364[2 : 0] <= OP2_V_2_1_cast_fu_354_p1[2 : 0];
        OP2_V_2_cast_reg_1359 <= OP2_V_2_cast_fu_350_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_fu_654_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_1445 <= brmerge_fu_802_p2;
        or_cond_i_i_reg_1431 <= or_cond_i_i_fu_712_p2;
        or_cond_i_reg_1452 <= or_cond_i_fu_807_p2;
        tmp_73_reg_1440 <= tmp_73_fu_798_p1;
        x_reg_1435 <= x_fu_790_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_1445_pp0_iter1_reg <= brmerge_reg_1445;
        exitcond388_i_reg_1422 <= exitcond388_i_fu_654_p2;
        exitcond388_i_reg_1422_pp0_iter1_reg <= exitcond388_i_reg_1422;
        or_cond_i_i_reg_1431_pp0_iter1_reg <= or_cond_i_i_reg_1431;
        or_cond_i_reg_1452_pp0_iter1_reg <= or_cond_i_reg_1452;
        tmp_73_reg_1440_pp0_iter1_reg <= tmp_73_reg_1440;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond388_i_reg_1422_pp0_iter2_reg <= exitcond388_i_reg_1422_pp0_iter1_reg;
        or_cond_i_reg_1452_pp0_iter2_reg <= or_cond_i_reg_1452_pp0_iter1_reg;
        or_cond_i_reg_1452_pp0_iter3_reg <= or_cond_i_reg_1452_pp0_iter2_reg;
        or_cond_i_reg_1452_pp0_iter4_reg <= or_cond_i_reg_1452_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1373 <= i_V_fu_368_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond389_i_fu_362_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_1387 <= icmp_fu_396_p2;
        row_assign_10_0_t_reg_1407 <= row_assign_10_0_t_fu_568_p2;
        row_assign_10_1_t_reg_1412 <= row_assign_10_1_t_fu_606_p2;
        row_assign_10_2_t_reg_1417 <= row_assign_10_2_t_fu_644_p2;
        tmp_2_reg_1392 <= tmp_2_fu_402_p2;
        tmp_375_0_not_reg_1382 <= tmp_375_0_not_fu_380_p2;
        tmp_3_reg_1400 <= tmp_3_fu_414_p2;
        tmp_419_1_reg_1396 <= tmp_419_1_fu_408_p2;
        tmp_s_reg_1378 <= tmp_s_fu_374_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_reg_1422 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_addr_reg_1456 <= tmp_23_fu_815_p1;
        k_buf_0_val_4_addr_reg_1462 <= tmp_23_fu_815_p1;
        k_buf_0_val_5_addr_reg_1468 <= tmp_23_fu_815_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1452_pp0_iter1_reg == 1'd1) & (exitcond388_i_reg_1422_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_89_0_1_reg_1492 <= grp_fu_1248_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1452_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_89_1_1_reg_1497 <= p_Val2_89_1_1_fu_1064_p2;
        r_V_8_1_2_reg_1502 <= r_V_8_1_2_fu_1073_p2;
        tmp4_reg_1512 <= tmp4_fu_1127_p2;
        tmp6_reg_1517 <= tmp6_fu_1133_p2;
        tmp8_reg_1522 <= tmp8_fu_1139_p2;
        tmp_79_reg_1507 <= tmp_79_fu_1097_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1452_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_s_reg_1527 <= p_Val2_s_fu_1240_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op172_read_state5 == 1'b1))) begin
        right_border_buf_0_14_fu_178 <= right_border_buf_0_s_fu_174;
        right_border_buf_0_15_fu_182 <= right_border_buf_0_18_fu_194;
        right_border_buf_0_16_fu_186 <= col_buf_0_val_1_0_fu_876_p3;
        right_border_buf_0_17_fu_190 <= right_border_buf_0_16_fu_186;
        right_border_buf_0_18_fu_194 <= col_buf_0_val_2_0_fu_895_p3;
        right_border_buf_0_s_fu_174 <= col_buf_0_val_0_0_fu_857_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_reg_1422_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_18_fu_154 <= src_kernel_win_0_va_fu_150;
        src_kernel_win_0_va_19_fu_158 <= src_kernel_win_0_va_24_reg_1481;
        src_kernel_win_0_va_20_fu_162 <= src_kernel_win_0_va_19_fu_158;
        src_kernel_win_0_va_fu_150 <= src_kernel_win_0_va_23_reg_1474;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_reg_1422_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_21_fu_166 <= src_kernel_win_0_va_25_fu_985_p3;
        src_kernel_win_0_va_22_fu_170 <= src_kernel_win_0_va_21_fu_166;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_reg_1422_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_23_reg_1474 <= src_kernel_win_0_va_23_fu_949_p3;
        src_kernel_win_0_va_24_reg_1481 <= src_kernel_win_0_va_24_fu_967_p3;
        src_kernel_win_0_va_25_reg_1487 <= src_kernel_win_0_va_25_fu_985_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_condition_pp0_exit_iter2_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond389_i_fu_362_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond389_i_fu_362_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1392 == 1'd1) & (or_cond_i_i_reg_1431_pp0_iter1_reg == 1'd1) & (icmp_reg_1387 == 1'd0) & (exitcond388_i_reg_1422_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op172_read_state5 == 1'b1)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1392 == 1'd1) & (or_cond_i_i_reg_1431_pp0_iter1_reg == 1'd1) & (icmp_reg_1387 == 1'd0) & (exitcond388_i_reg_1422_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op172_read_state5 == 1'b1)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_419_1_reg_1396 == 1'd1) & (or_cond_i_i_reg_1431_pp0_iter1_reg == 1'd1) & (icmp_reg_1387 == 1'd0) & (exitcond388_i_reg_1422_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op172_read_state5 == 1'b1)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op172_read_state5 == 1'b1)) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_q0;
        end else if ((1'b1 == ap_condition_364)) begin
            k_buf_0_val_4_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_419_1_reg_1396 == 1'd1) & (or_cond_i_i_reg_1431_pp0_iter1_reg == 1'd1) & (icmp_reg_1387 == 1'd0) & (exitcond388_i_reg_1422_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op172_read_state5 == 1'b1)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1392 == 1'd1) & (or_cond_i_i_reg_1431_pp0_iter1_reg == 1'd1) & (icmp_reg_1387 == 1'd0) & (exitcond388_i_reg_1422_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op172_read_state5 == 1'b1)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op172_read_state5 == 1'b1)) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_q0;
        end else if ((1'b1 == ap_condition_358)) begin
            k_buf_0_val_5_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1392 == 1'd1) & (or_cond_i_i_reg_1431_pp0_iter1_reg == 1'd1) & (icmp_reg_1387 == 1'd0) & (exitcond388_i_reg_1422_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op172_read_state5 == 1'b1)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_1452_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_1452_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1378 == 1'd1) & (icmp_reg_1387 == 1'd1) & (or_cond_i_i_reg_1431_pp0_iter1_reg == 1'd1) & (exitcond388_i_reg_1422_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((or_cond_i_i_reg_1431_pp0_iter1_reg == 1'd1) & (icmp_reg_1387 == 1'd0) & (exitcond388_i_reg_1422_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op172_read_state5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op161_read_state5 == 1'b1)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond389_i_fu_362_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)) & ~((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_cast_fu_688_p1 = ImagLoc_x_fu_682_p2;

assign ImagLoc_x_fu_682_p2 = ($signed(12'd4095) + $signed(t_V_2_cast_fu_650_p1));

assign OP1_V_0_cast_fu_998_p1 = src_kernel_win_0_va_22_fu_170;

assign OP2_V_0_1_cast_fu_334_p1 = $signed(p_kernel_val_0_V_1_read);

assign OP2_V_0_2_cast_fu_338_p1 = $signed(p_kernel_val_0_V_2_read);

assign OP2_V_1_2_cast_fu_346_p1 = p_kernel_val_1_V_2_read;

assign OP2_V_1_cast_fu_342_p1 = $signed(p_kernel_val_1_V_0_read);

assign OP2_V_2_1_cast_fu_354_p1 = p_kernel_val_2_V_1_read;

assign OP2_V_2_cast_fu_350_p1 = $signed(p_kernel_val_2_V_0_read);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((or_cond_i_reg_1452_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op172_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op161_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((or_cond_i_reg_1452_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op172_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op161_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((or_cond_i_reg_1452_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op172_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op161_read_state5 == 1'b1)))));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter2 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op172_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op161_read_state5 == 1'b1)));
end

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter5 = ((or_cond_i_reg_1452_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_358 = ((tmp_2_reg_1392 == 1'd1) & (or_cond_i_i_reg_1431_pp0_iter1_reg == 1'd1) & (icmp_reg_1387 == 1'd0) & (exitcond388_i_reg_1422_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_364 = ((tmp_419_1_reg_1396 == 1'd1) & (or_cond_i_i_reg_1431_pp0_iter1_reg == 1'd1) & (icmp_reg_1387 == 1'd0) & (exitcond388_i_reg_1422_pp0_iter1_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op161_read_state5 = ((or_cond_i_i_reg_1431_pp0_iter1_reg == 1'd1) & (icmp_reg_1387 == 1'd0) & (exitcond388_i_reg_1422_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op172_read_state5 = ((tmp_s_reg_1378 == 1'd1) & (icmp_reg_1387 == 1'd1) & (or_cond_i_i_reg_1431_pp0_iter1_reg == 1'd1) & (exitcond388_i_reg_1422_pp0_iter1_reg == 1'd0));
end

assign brmerge_fu_802_p2 = (tmp_375_0_not_reg_1382 | tmp_19_fu_706_p2);

assign col_assign_3_t_fu_840_p2 = (tmp_73_reg_1440_pp0_iter1_reg ^ 2'd3);

assign col_assign_cast_fu_812_p1 = x_reg_1435;

assign col_buf_0_val_0_0_fu_857_p3 = ((brmerge_reg_1445_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_24_fu_845_p5);

assign col_buf_0_val_1_0_fu_876_p3 = ((brmerge_reg_1445_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_25_fu_864_p5);

assign col_buf_0_val_2_0_fu_895_p3 = ((brmerge_reg_1445_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_26_fu_883_p5);

assign exitcond388_i_fu_654_p2 = ((t_V_2_reg_323 == 11'd1922) ? 1'b1 : 1'b0);

assign exitcond389_i_fu_362_p2 = ((t_V_reg_312 == 11'd1082) ? 1'b1 : 1'b0);

assign grp_fu_1248_p0 = OP2_V_0_1_cast_reg_1339;

assign grp_fu_1248_p1 = grp_fu_1248_p10;

assign grp_fu_1248_p10 = src_kernel_win_0_va_21_fu_166;

assign grp_fu_1255_p0 = OP2_V_0_2_cast_reg_1344;

assign grp_fu_1255_p1 = grp_fu_1255_p10;

assign grp_fu_1255_p10 = src_kernel_win_0_va_25_reg_1487;

assign i_V_fu_368_p2 = (t_V_reg_312 + 11'd1);

assign icmp2_fu_676_p2 = ((tmp_70_fu_666_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_fu_396_p2 = ((tmp_55_fu_386_p4 != 10'd0) ? 1'b1 : 1'b0);

assign isneg_fu_1181_p3 = p_Val2_4_fu_1175_p2[32'd11];

assign j_V_fu_660_p2 = (t_V_2_reg_323 + 11'd1);

assign k_buf_0_val_3_address0 = tmp_23_fu_815_p1;

assign k_buf_0_val_4_address0 = tmp_23_fu_815_p1;

assign k_buf_0_val_5_address0 = tmp_23_fu_815_p1;

assign not_i_i_i_fu_1214_p2 = ((tmp_44_fu_1198_p4 != 4'd0) ? 1'b1 : 1'b0);

assign or_cond_i424_i_fu_450_p2 = (tmp_10_fu_444_p2 & rev_fu_438_p2);

assign or_cond_i_fu_807_p2 = (icmp_reg_1387 & icmp2_fu_676_p2);

assign or_cond_i_i_fu_712_p2 = (tmp_19_fu_706_p2 & rev2_fu_700_p2);

assign overflow_fu_1220_p2 = (tmp_i_i_fu_1208_p2 & not_i_i_i_fu_1214_p2);

assign p_Val2_2_fu_1193_p2 = (tmp6_reg_1517 + tmp7_fu_1189_p2);

assign p_Val2_4_fu_1175_p2 = ($signed(tmp3_fu_1168_p2) + $signed(tmp4_cast_fu_1172_p1));

assign p_Val2_89_0_2_cast_fu_1041_p1 = grp_fu_1255_p3;

assign p_Val2_89_1_1_fu_1064_p2 = ($signed(tmp_463_1_cast_cast_fu_1053_p1) + $signed(p_Val2_89_0_2_cast_fu_1041_p1));

assign p_Val2_s_fu_1240_p3 = ((tmp_i_i_84_fu_1234_p2[0:0] === 1'b1) ? p_mux_i_i_cast_fu_1226_p3 : p_Val2_2_fu_1193_p2);

assign p_assign_1_fu_726_p2 = (12'd1 - t_V_2_cast_fu_650_p1);

assign p_assign_2_fu_754_p2 = ($signed(13'd3838) - $signed(p_p2_i_i_cast_fu_744_p1));

assign p_assign_3_fu_760_p3 = ((or_cond_i_i_fu_712_p2[0:0] === 1'b1) ? ImagLoc_x_cast_fu_688_p1 : p_assign_2_fu_754_p2);

assign p_assign_6_1_fu_488_p2 = ($signed(12'd4094) + $signed(t_V_cast_fu_358_p1));

assign p_assign_6_2_fu_514_p2 = ($signed(12'd4093) + $signed(t_V_cast_fu_358_p1));

assign p_assign_7_fu_464_p2 = (12'd1 - t_V_cast_fu_358_p1);

assign p_dst_data_stream_V_din = p_Val2_s_reg_1527;

assign p_mux_i_i_cast_fu_1226_p3 = ((tmp_i_i_fu_1208_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_p2_i425_i_fu_470_p3 = ((tmp_58_fu_456_p3[0:0] === 1'b1) ? p_assign_7_fu_464_p2 : tmp_7_fu_424_p2);

assign p_p2_i_i_cast1_fu_740_p1 = p_p2_i_i_fu_732_p3;

assign p_p2_i_i_cast_fu_744_p1 = p_p2_i_i_fu_732_p3;

assign p_p2_i_i_fu_732_p3 = ((tmp_72_fu_718_p3[0:0] === 1'b1) ? p_assign_1_fu_726_p2 : ImagLoc_x_fu_682_p2);

assign r_V_8_1_2_fu_1073_p0 = OP2_V_1_2_cast_reg_1354;

assign r_V_8_1_2_fu_1073_p1 = r_V_8_1_2_fu_1073_p10;

assign r_V_8_1_2_fu_1073_p10 = src_kernel_win_0_va_24_reg_1481;

assign r_V_8_1_2_fu_1073_p2 = (r_V_8_1_2_fu_1073_p0 * r_V_8_1_2_fu_1073_p1);

assign r_V_8_1_fu_1048_p0 = OP2_V_1_cast_reg_1349;

assign r_V_8_1_fu_1048_p1 = r_V_8_1_fu_1048_p10;

assign r_V_8_1_fu_1048_p10 = src_kernel_win_0_va_20_fu_162;

assign r_V_8_1_fu_1048_p2 = ($signed(r_V_8_1_fu_1048_p0) * $signed({{1'b0}, {r_V_8_1_fu_1048_p1}}));

assign r_V_8_2_1_fu_1105_p0 = OP2_V_2_1_cast_reg_1364;

assign r_V_8_2_1_fu_1105_p1 = r_V_8_2_1_fu_1105_p10;

assign r_V_8_2_1_fu_1105_p10 = src_kernel_win_0_va_fu_150;

assign r_V_8_2_1_fu_1105_p2 = (r_V_8_2_1_fu_1105_p0 * r_V_8_2_1_fu_1105_p1);

assign r_V_8_2_fu_1092_p0 = OP2_V_2_cast_reg_1359;

assign r_V_8_2_fu_1092_p1 = r_V_8_2_fu_1092_p10;

assign r_V_8_2_fu_1092_p10 = src_kernel_win_0_va_18_fu_154;

assign r_V_8_2_fu_1092_p2 = ($signed(r_V_8_2_fu_1092_p0) * $signed({{1'b0}, {r_V_8_2_fu_1092_p1}}));

assign r_V_8_fu_1002_p2 = (9'd0 - OP1_V_0_cast_fu_998_p1);

assign rev2_fu_700_p2 = (tmp_71_fu_692_p3 ^ 1'd1);

assign rev_fu_438_p2 = (tmp_57_fu_430_p3 ^ 1'd1);

assign row_assign_10_0_t_fu_568_p2 = (tmp_31_fu_560_p3 ^ 2'd3);

assign row_assign_10_1_t_fu_606_p2 = (tmp_35_fu_598_p3 ^ 2'd3);

assign row_assign_10_2_t_fu_644_p2 = (tmp_39_fu_636_p3 ^ 2'd3);

assign sel_tmp7_fu_778_p2 = (tmp_71_fu_692_p3 | tmp_19_not_fu_772_p2);

assign sel_tmp8_fu_784_p2 = (tmp_21_fu_748_p2 & sel_tmp7_fu_778_p2);

assign sel_tmp_cast_fu_768_p1 = p_assign_3_fu_760_p3;

assign src_kernel_win_0_va_23_fu_949_p3 = ((tmp_3_reg_1400[0:0] === 1'b1) ? tmp_32_fu_938_p5 : col_buf_0_val_0_0_fu_857_p3);

assign src_kernel_win_0_va_24_fu_967_p3 = ((tmp_3_reg_1400[0:0] === 1'b1) ? tmp_36_fu_956_p5 : col_buf_0_val_1_0_fu_876_p3);

assign src_kernel_win_0_va_25_fu_985_p3 = ((tmp_3_reg_1400[0:0] === 1'b1) ? tmp_40_fu_974_p5 : col_buf_0_val_2_0_fu_895_p3);

assign t_V_2_cast_fu_650_p1 = t_V_2_reg_323;

assign t_V_cast_fu_358_p1 = t_V_reg_312;

assign tmp3_fu_1168_p2 = (r_V_8_1_2_reg_1502 + p_Val2_89_1_1_reg_1497);

assign tmp4_cast_fu_1172_p1 = $signed(tmp4_reg_1512);

assign tmp4_fu_1127_p2 = ($signed(r_V_8_2_1_fu_1105_p2) + $signed(tmp5_cast_fu_1123_p1));

assign tmp5_cast_fu_1123_p1 = $signed(tmp5_fu_1117_p2);

assign tmp5_fu_1117_p2 = (tmp_463_2_2_cast_cas_fu_1114_p1 + r_V_8_2_fu_1092_p2);

assign tmp6_fu_1133_p2 = (tmp_43_fu_1082_p2 + tmp_78_fu_1078_p1);

assign tmp7_fu_1189_p2 = (tmp_79_reg_1507 + tmp8_reg_1522);

assign tmp8_fu_1139_p2 = (src_kernel_win_0_va_23_reg_1474 + tmp_80_fu_1110_p1);

assign tmp_10_fu_444_p2 = (($signed(tmp_7_fu_424_p2) < $signed(12'd1080)) ? 1'b1 : 1'b0);

assign tmp_13_fu_478_p2 = (($signed(p_p2_i425_i_fu_470_p3) < $signed(12'd1080)) ? 1'b1 : 1'b0);

assign tmp_19_fu_706_p2 = (($signed(ImagLoc_x_fu_682_p2) < $signed(12'd1920)) ? 1'b1 : 1'b0);

assign tmp_19_not_fu_772_p2 = (tmp_19_fu_706_p2 ^ 1'd1);

assign tmp_21_fu_748_p2 = (($signed(p_p2_i_i_fu_732_p3) < $signed(12'd1920)) ? 1'b1 : 1'b0);

assign tmp_23_fu_815_p1 = $unsigned(col_assign_cast_fu_812_p1);

assign tmp_28_fu_540_p2 = ($signed(2'd2) - $signed(tmp_59_fu_484_p1));

assign tmp_29_fu_546_p3 = ((tmp_13_fu_478_p2[0:0] === 1'b1) ? tmp_59_fu_484_p1 : tmp_28_fu_540_p2);

assign tmp_2_fu_402_p2 = ((t_V_reg_312 == 11'd1) ? 1'b1 : 1'b0);

assign tmp_30_fu_554_p2 = ($signed(2'd3) + $signed(tmp_56_fu_420_p1));

assign tmp_31_fu_560_p3 = ((or_cond_i424_i_fu_450_p2[0:0] === 1'b1) ? tmp_30_fu_554_p2 : tmp_29_fu_546_p3);

assign tmp_33_fu_574_p2 = (tmp_56_fu_420_p1 ^ 2'd2);

assign tmp_35_fu_598_p3 = ((tmp_60_fu_494_p3[0:0] === 1'b1) ? tmp_41_fu_590_p3 : tmp_33_fu_574_p2);

assign tmp_375_0_not_fu_380_p2 = (tmp_s_fu_374_p2 ^ 1'd1);

assign tmp_37_fu_612_p2 = (2'd1 + tmp_56_fu_420_p1);

assign tmp_39_fu_636_p3 = ((tmp_63_fu_520_p3[0:0] === 1'b1) ? tmp_42_fu_628_p3 : tmp_37_fu_612_p2);

assign tmp_3_fu_414_p2 = ((t_V_reg_312 > 11'd1080) ? 1'b1 : 1'b0);

assign tmp_419_1_fu_408_p2 = ((t_V_reg_312 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_41_fu_590_p3 = ((tmp_61_fu_502_p3[0:0] === 1'b1) ? tmp_66_fu_580_p2 : tmp_67_fu_586_p1);

assign tmp_42_fu_628_p3 = ((tmp_64_fu_528_p3[0:0] === 1'b1) ? tmp_68_fu_618_p2 : tmp_69_fu_624_p1);

assign tmp_43_fu_1082_p2 = (tmp_77_fu_1061_p1 + tmp_76_fu_1057_p1);

assign tmp_44_fu_1198_p4 = {{p_Val2_4_fu_1175_p2[11:8]}};

assign tmp_463_1_cast_cast_fu_1053_p1 = r_V_8_1_fu_1048_p2;

assign tmp_463_2_2_cast_cas_fu_1114_p1 = src_kernel_win_0_va_23_reg_1474;

assign tmp_55_fu_386_p4 = {{t_V_reg_312[10:1]}};

assign tmp_56_fu_420_p1 = t_V_reg_312[1:0];

assign tmp_57_fu_430_p3 = tmp_7_fu_424_p2[32'd11];

assign tmp_58_fu_456_p3 = tmp_7_fu_424_p2[32'd11];

assign tmp_59_fu_484_p1 = p_p2_i425_i_fu_470_p3[1:0];

assign tmp_60_fu_494_p3 = p_assign_6_1_fu_488_p2[32'd11];

assign tmp_61_fu_502_p3 = p_assign_6_1_fu_488_p2[32'd11];

assign tmp_62_fu_510_p1 = t_V_reg_312[1:0];

assign tmp_63_fu_520_p3 = p_assign_6_2_fu_514_p2[32'd11];

assign tmp_64_fu_528_p3 = p_assign_6_2_fu_514_p2[32'd11];

assign tmp_65_fu_536_p1 = t_V_reg_312[1:0];

assign tmp_66_fu_580_p2 = ($signed(2'd2) - $signed(tmp_62_fu_510_p1));

assign tmp_67_fu_586_p1 = p_assign_6_1_fu_488_p2[1:0];

assign tmp_68_fu_618_p2 = (tmp_65_fu_536_p1 ^ 2'd3);

assign tmp_69_fu_624_p1 = p_assign_6_2_fu_514_p2[1:0];

assign tmp_70_fu_666_p4 = {{t_V_2_reg_323[10:1]}};

assign tmp_71_fu_692_p3 = ImagLoc_x_fu_682_p2[32'd11];

assign tmp_72_fu_718_p3 = ImagLoc_x_fu_682_p2[32'd11];

assign tmp_73_fu_798_p1 = x_fu_790_p3[1:0];

assign tmp_76_fu_1057_p1 = r_V_8_1_fu_1048_p2[7:0];

assign tmp_77_fu_1061_p1 = grp_fu_1255_p3[7:0];

assign tmp_78_fu_1078_p1 = r_V_8_1_2_fu_1073_p2[7:0];

assign tmp_79_fu_1097_p1 = r_V_8_2_fu_1092_p2[7:0];

assign tmp_7_fu_424_p2 = ($signed(12'd4095) + $signed(t_V_cast_fu_358_p1));

assign tmp_80_fu_1110_p1 = r_V_8_2_1_fu_1105_p2[7:0];

assign tmp_i_i_84_fu_1234_p2 = (overflow_fu_1220_p2 | isneg_fu_1181_p3);

assign tmp_i_i_fu_1208_p2 = (isneg_fu_1181_p3 ^ 1'd1);

assign tmp_s_fu_374_p2 = ((t_V_reg_312 < 11'd1080) ? 1'b1 : 1'b0);

assign x_fu_790_p3 = ((sel_tmp8_fu_784_p2[0:0] === 1'b1) ? p_p2_i_i_cast1_fu_740_p1 : sel_tmp_cast_fu_768_p1);

always @ (posedge ap_clk) begin
    OP2_V_1_2_cast_reg_1354[11:4] <= 8'b00000000;
    OP2_V_2_1_cast_reg_1364[10:3] <= 8'b00000000;
end

endmodule //Filter2D
