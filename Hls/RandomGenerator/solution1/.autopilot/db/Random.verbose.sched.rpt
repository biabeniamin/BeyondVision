

================================================================
== Vivado HLS Report for 'Random'
================================================================
* Date:           Fri Mar  1 12:46:29 2019

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        RandomGenerator
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     6.538|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+---------+-----+---------+---------+
    |    Latency    |    Interval   | Pipeline|
    | min |   max   | min |   max   |   Type  |
    +-----+---------+-----+---------+---------+
    |    4|  8371203|    4|  8371203|   none  |
    +-----+---------+-----+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+---------+----------+-----------+-----------+-------------+----------+
        |          |    Latency    | Iteration|  Initiation Interval  |     Trip    |          |
        | Loop Name| min |   max   |  Latency |  achieved |   target  |    Count    | Pipelined|
        +----------+-----+---------+----------+-----------+-----------+-------------+----------+
        |- read_A  |    2|  8371201|         2|          1|          1| 1 ~ 8371200 |    yes   |
        +----------+-----+---------+----------+-----------+-----------+-------------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / (!tmp) | (tmp & tmp_last_V)
	2  / (tmp & !tmp_last_V)
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %agg_result_a), !map !82"   --->   Operation 5 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %agg_result_b), !map !86"   --->   Operation 6 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %agg_result_c), !map !90"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %agg_result_d), !map !94"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %agg_result_e), !map !98"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %agg_result_f), !map !102"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %INPUT_STREAM_V_data_V), !map !106"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i4* %INPUT_STREAM_V_keep_V), !map !110"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i4* %INPUT_STREAM_V_strb_V), !map !114"   --->   Operation 13 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2* %INPUT_STREAM_V_user_V), !map !118"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %INPUT_STREAM_V_last_V), !map !122"   --->   Operation 15 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i5* %INPUT_STREAM_V_id_V), !map !126"   --->   Operation 16 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i6* %INPUT_STREAM_V_dest_V), !map !130"   --->   Operation 17 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i12 %temperature_V), !map !134"   --->   Operation 18 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %last_V), !map !140"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (1.00ns)   --->   "%last_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %last_V)"   --->   Operation 20 'read' 'last_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%temperature_V_read = call i12 @_ssdm_op_Read.ap_auto.i12(i12 %temperature_V)"   --->   Operation 21 'read' 'temperature_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([7 x i8]* @Random_str) nounwind"   --->   Operation 22 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [12 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [RandomGenerator/main.cpp:26]   --->   Operation 23 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %agg_result_a, i32* %agg_result_b, i32* %agg_result_c, i32* %agg_result_d, i32* %agg_result_e, i32* %agg_result_f, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [12 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [RandomGenerator/main.cpp:26]   --->   Operation 24 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %INPUT_STREAM_V_data_V, i4* %INPUT_STREAM_V_keep_V, i4* %INPUT_STREAM_V_strb_V, i2* %INPUT_STREAM_V_user_V, i1* %INPUT_STREAM_V_last_V, i5* %INPUT_STREAM_V_id_V, i6* %INPUT_STREAM_V_dest_V, [5 x i8]* @p_str3, i32 1, i32 1, [5 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [13 x i8]* @p_str5, [1 x i8]* @p_str1) nounwind" [RandomGenerator/main.cpp:28]   --->   Operation 25 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %last_V, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [12 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [RandomGenerator/main.cpp:30]   --->   Operation 26 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%sum_V_cast = zext i12 %temperature_V_read to i55" [RandomGenerator/main.cpp:40]   --->   Operation 27 'zext' 'sum_V_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (1.76ns)   --->   "br label %1" [RandomGenerator/main.cpp:42]   --->   Operation 28 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 3.44>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%p_0 = phi i55 [ %sum_V_cast, %0 ], [ %sum_V, %3 ]"   --->   Operation 29 'phi' 'p_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%i = phi i23 [ 0, %0 ], [ %in1Count, %3 ]"   --->   Operation 30 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (2.44ns)   --->   "%tmp = icmp ult i23 %i, -17408" [RandomGenerator/main.cpp:42]   --->   Operation 31 'icmp' 'tmp' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (2.28ns)   --->   "%in1Count = add i23 %i, 1" [RandomGenerator/main.cpp:42]   --->   Operation 32 'add' 'in1Count' <Predicate = true> <Delay = 2.28> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%empty_21 = call { i32, i4, i4, i2, i1, i5, i6 } @_ssdm_op_Read.axis.volatile.i32P.i4P.i4P.i2P.i1P.i5P.i6P(i32* %INPUT_STREAM_V_data_V, i4* %INPUT_STREAM_V_keep_V, i4* %INPUT_STREAM_V_strb_V, i2* %INPUT_STREAM_V_user_V, i1* %INPUT_STREAM_V_last_V, i5* %INPUT_STREAM_V_id_V, i6* %INPUT_STREAM_V_dest_V)" [RandomGenerator/main.cpp:44]   --->   Operation 33 'read' 'empty_21' <Predicate = (tmp)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%tmp_data_V = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty_21, 0" [RandomGenerator/main.cpp:44]   --->   Operation 34 'extractvalue' 'tmp_data_V' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%tmp_last_V = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty_21, 4" [RandomGenerator/main.cpp:44]   --->   Operation 35 'extractvalue' 'tmp_last_V' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%tmp_2_cast = zext i32 %tmp_data_V to i55" [RandomGenerator/main.cpp:46]   --->   Operation 36 'zext' 'tmp_2_cast' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (3.28ns)   --->   "%sum_V = add i55 %p_0, %tmp_2_cast" [RandomGenerator/main.cpp:46]   --->   Operation 37 'add' 'sum_V' <Predicate = (tmp)> <Delay = 3.28> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 6.53>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%i_op_assign = phi i32 [ undef, %0 ], [ %r_V_2, %3 ]"   --->   Operation 38 'phi' 'i_op_assign' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%first_s = phi i32 [ undef, %0 ], [ %tmp_data_V, %3 ]"   --->   Operation 39 'phi' 'first_s' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 8371200, i64 4185600)"   --->   Operation 40 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (1.76ns)   --->   "br i1 %tmp, label %2, label %.loopexit" [RandomGenerator/main.cpp:42]   --->   Operation 41 'br' <Predicate = true> <Delay = 1.76>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([7 x i8]* @p_str6) nounwind" [RandomGenerator/main.cpp:42]   --->   Operation 42 'specloopname' <Predicate = (tmp)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([7 x i8]* @p_str6)" [RandomGenerator/main.cpp:42]   --->   Operation 43 'specregionbegin' 'tmp_3' <Predicate = (tmp)> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [RandomGenerator/main.cpp:43]   --->   Operation 44 'specpipeline' <Predicate = (tmp)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%lhs_V_cast = zext i55 %sum_V to i56" [RandomGenerator/main.cpp:48]   --->   Operation 45 'zext' 'lhs_V_cast' <Predicate = (tmp)> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%rhs_V_cast = sext i32 %i_op_assign to i56" [RandomGenerator/main.cpp:48]   --->   Operation 46 'sext' 'rhs_V_cast' <Predicate = (tmp)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (3.28ns)   --->   "%r_V = add i56 %rhs_V_cast, %lhs_V_cast" [RandomGenerator/main.cpp:48]   --->   Operation 47 'add' 'r_V' <Predicate = (tmp)> <Delay = 3.28> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%tmp_2 = call i1 @_ssdm_op_BitSelect.i1.i56.i32(i56 %r_V, i32 55)" [RandomGenerator/main.cpp:48]   --->   Operation 48 'bitselect' 'tmp_2' <Predicate = (tmp)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_4 = trunc i56 %r_V to i1" [RandomGenerator/main.cpp:48]   --->   Operation 49 'trunc' 'tmp_4' <Predicate = (tmp)> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_5 = trunc i56 %r_V to i1" [RandomGenerator/main.cpp:48]   --->   Operation 50 'trunc' 'tmp_5' <Predicate = (tmp)> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_6 = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 0, i1 %tmp_5)" [RandomGenerator/main.cpp:48]   --->   Operation 51 'bitconcatenate' 'tmp_6' <Predicate = (tmp)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (2.55ns)   --->   "%tmp_8 = sub i32 0, %tmp_6" [RandomGenerator/main.cpp:48]   --->   Operation 52 'sub' 'tmp_8' <Predicate = (tmp)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%tmp_7 = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 0, i1 %tmp_4)" [RandomGenerator/main.cpp:48]   --->   Operation 53 'bitconcatenate' 'tmp_7' <Predicate = (tmp)> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.69ns)   --->   "%r_V_2 = select i1 %tmp_2, i32 %tmp_8, i32 %tmp_7" [RandomGenerator/main.cpp:48]   --->   Operation 54 'select' 'r_V_2' <Predicate = (tmp)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 55 [1/1] (1.76ns)   --->   "br i1 %tmp_last_V, label %.loopexit, label %3" [RandomGenerator/main.cpp:58]   --->   Operation 55 'br' <Predicate = (tmp)> <Delay = 1.76>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%empty_22 = call i32 (...)* @_ssdm_op_SpecRegionEnd([7 x i8]* @p_str6, i32 %tmp_3)" [RandomGenerator/main.cpp:64]   --->   Operation 56 'specregionend' 'empty_22' <Predicate = (tmp & !tmp_last_V)> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "br label %1" [RandomGenerator/main.cpp:42]   --->   Operation 57 'br' <Predicate = (tmp & !tmp_last_V)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 1.99>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%lhs_V = phi i55 [ %p_0, %1 ], [ %sum_V, %2 ]"   --->   Operation 58 'phi' 'lhs_V' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%value_1 = phi i32 [ %i_op_assign, %1 ], [ %r_V_2, %2 ]"   --->   Operation 59 'phi' 'value_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%first_2 = phi i32 [ %first_s, %1 ], [ %tmp_data_V, %2 ]"   --->   Operation 60 'phi' 'first_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%in1Count_1 = phi i23 [ %i, %1 ], [ %in1Count, %2 ]"   --->   Operation 61 'phi' 'in1Count_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "%in1Count_1_cast = zext i23 %in1Count_1 to i32" [RandomGenerator/main.cpp:65]   --->   Operation 62 'zext' 'in1Count_1_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%tmp_10 = trunc i55 %lhs_V to i32" [RandomGenerator/main.cpp:40]   --->   Operation 63 'trunc' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (1.00ns)   --->   "call void @_ssdm_op_Write.s_axilite.i32P(i32* %agg_result_a, i32 %value_1)" [RandomGenerator/main.cpp:70]   --->   Operation 64 'write' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_4 : Operation 65 [1/1] (1.00ns)   --->   "call void @_ssdm_op_Write.s_axilite.i32P(i32* %agg_result_b, i32 %in1Count_1_cast)" [RandomGenerator/main.cpp:71]   --->   Operation 65 'write' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_4 : Operation 66 [1/1] (1.00ns)   --->   "call void @_ssdm_op_Write.s_axilite.i32P(i32* %agg_result_c, i32 %first_2)" [RandomGenerator/main.cpp:72]   --->   Operation 66 'write' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%tmp_9 = call i23 @_ssdm_op_PartSelect.i23.i55.i32.i32(i55 %lhs_V, i32 32, i32 54)" [RandomGenerator/main.cpp:73]   --->   Operation 67 'partselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "%phitmp = zext i23 %tmp_9 to i32" [RandomGenerator/main.cpp:73]   --->   Operation 68 'zext' 'phitmp' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (1.00ns)   --->   "call void @_ssdm_op_Write.s_axilite.i32P(i32* %agg_result_d, i32 %phitmp)" [RandomGenerator/main.cpp:73]   --->   Operation 69 'write' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_4 : Operation 70 [1/1] (0.99ns)   --->   "%tmp_s = xor i32 %tmp_10, %last_V_read" [RandomGenerator/main.cpp:74]   --->   Operation 70 'xor' 'tmp_s' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 71 [1/1] (1.00ns)   --->   "call void @_ssdm_op_Write.s_axilite.i32P(i32* %agg_result_e, i32 %tmp_s)" [RandomGenerator/main.cpp:74]   --->   Operation 71 'write' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_4 : Operation 72 [1/1] (0.00ns)   --->   "%tmp_1 = zext i12 %temperature_V_read to i32" [RandomGenerator/main.cpp:75]   --->   Operation 72 'zext' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 73 [1/1] (1.00ns)   --->   "call void @_ssdm_op_Write.s_axilite.i32P(i32* %agg_result_f, i32 %tmp_1)" [RandomGenerator/main.cpp:75]   --->   Operation 73 'write' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_4 : Operation 74 [1/1] (0.00ns)   --->   "ret void" [RandomGenerator/main.cpp:77]   --->   Operation 74 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('sum.V') with incoming values : ('sum_V_cast', RandomGenerator/main.cpp:40) ('sum.V', RandomGenerator/main.cpp:46) [41]  (1.77 ns)

 <State 2>: 3.44ns
The critical path consists of the following:
	'icmp' operation ('tmp', RandomGenerator/main.cpp:42) [45]  (2.45 ns)
	blocking operation 0.993 ns on control path)

 <State 3>: 6.54ns
The critical path consists of the following:
	'phi' operation ('value') with incoming values : ('r.V', RandomGenerator/main.cpp:48) [43]  (0 ns)
	'add' operation ('r.V', RandomGenerator/main.cpp:48) [60]  (3.29 ns)
	'sub' operation ('tmp_8', RandomGenerator/main.cpp:48) [65]  (2.55 ns)
	'select' operation ('r.V', RandomGenerator/main.cpp:48) [67]  (0.698 ns)

 <State 4>: 1.99ns
The critical path consists of the following:
	'phi' operation ('sum.V') with incoming values : ('sum_V_cast', RandomGenerator/main.cpp:40) ('sum.V', RandomGenerator/main.cpp:46) [73]  (0 ns)
	'xor' operation ('tmp_s', RandomGenerator/main.cpp:74) [85]  (0.993 ns)
	s_axi write on port 'agg_result_e' (RandomGenerator/main.cpp:74) [86]  (1 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
