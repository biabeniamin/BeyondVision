// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module arithm_pro (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        src1_data_stream_0_V_dout,
        src1_data_stream_0_V_empty_n,
        src1_data_stream_0_V_read,
        src1_data_stream_1_V_dout,
        src1_data_stream_1_V_empty_n,
        src1_data_stream_1_V_read,
        src1_data_stream_2_V_dout,
        src1_data_stream_2_V_empty_n,
        src1_data_stream_2_V_read,
        src2_data_stream_0_V_dout,
        src2_data_stream_0_V_empty_n,
        src2_data_stream_0_V_read,
        src2_data_stream_1_V_dout,
        src2_data_stream_1_V_empty_n,
        src2_data_stream_1_V_read,
        src2_data_stream_2_V_dout,
        src2_data_stream_2_V_empty_n,
        src2_data_stream_2_V_read,
        dst_data_stream_0_V_din,
        dst_data_stream_0_V_full_n,
        dst_data_stream_0_V_write,
        dst_data_stream_1_V_din,
        dst_data_stream_1_V_full_n,
        dst_data_stream_1_V_write,
        dst_data_stream_2_V_din,
        dst_data_stream_2_V_full_n,
        dst_data_stream_2_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state34 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] src1_data_stream_0_V_dout;
input   src1_data_stream_0_V_empty_n;
output   src1_data_stream_0_V_read;
input  [7:0] src1_data_stream_1_V_dout;
input   src1_data_stream_1_V_empty_n;
output   src1_data_stream_1_V_read;
input  [7:0] src1_data_stream_2_V_dout;
input   src1_data_stream_2_V_empty_n;
output   src1_data_stream_2_V_read;
input  [7:0] src2_data_stream_0_V_dout;
input   src2_data_stream_0_V_empty_n;
output   src2_data_stream_0_V_read;
input  [7:0] src2_data_stream_1_V_dout;
input   src2_data_stream_1_V_empty_n;
output   src2_data_stream_1_V_read;
input  [7:0] src2_data_stream_2_V_dout;
input   src2_data_stream_2_V_empty_n;
output   src2_data_stream_2_V_read;
output  [7:0] dst_data_stream_0_V_din;
input   dst_data_stream_0_V_full_n;
output   dst_data_stream_0_V_write;
output  [7:0] dst_data_stream_1_V_din;
input   dst_data_stream_1_V_full_n;
output   dst_data_stream_1_V_write;
output  [7:0] dst_data_stream_2_V_din;
input   dst_data_stream_2_V_full_n;
output   dst_data_stream_2_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src1_data_stream_0_V_read;
reg src1_data_stream_1_V_read;
reg src1_data_stream_2_V_read;
reg src2_data_stream_0_V_read;
reg src2_data_stream_1_V_read;
reg src2_data_stream_2_V_read;
reg dst_data_stream_0_V_write;
reg dst_data_stream_1_V_write;
reg dst_data_stream_2_V_write;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    src1_data_stream_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_reg_410;
reg    src1_data_stream_1_V_blk_n;
reg    src1_data_stream_2_V_blk_n;
reg    src2_data_stream_0_V_blk_n;
reg    src2_data_stream_1_V_blk_n;
reg    src2_data_stream_2_V_blk_n;
reg    dst_data_stream_0_V_blk_n;
reg    ap_enable_reg_pp0_iter30;
reg   [0:0] exitcond_reg_410_pp0_iter29_reg;
reg    dst_data_stream_1_V_blk_n;
reg    dst_data_stream_2_V_blk_n;
reg   [10:0] t_V_1_reg_252;
wire   [0:0] exitcond4_fu_353_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] i_V_fu_359_p2;
reg   [10:0] i_V_reg_405;
wire   [0:0] exitcond_fu_365_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
wire    ap_block_state13_pp0_stage0_iter10;
wire    ap_block_state14_pp0_stage0_iter11;
wire    ap_block_state15_pp0_stage0_iter12;
wire    ap_block_state16_pp0_stage0_iter13;
wire    ap_block_state17_pp0_stage0_iter14;
wire    ap_block_state18_pp0_stage0_iter15;
wire    ap_block_state19_pp0_stage0_iter16;
wire    ap_block_state20_pp0_stage0_iter17;
wire    ap_block_state21_pp0_stage0_iter18;
wire    ap_block_state22_pp0_stage0_iter19;
wire    ap_block_state23_pp0_stage0_iter20;
wire    ap_block_state24_pp0_stage0_iter21;
wire    ap_block_state25_pp0_stage0_iter22;
wire    ap_block_state26_pp0_stage0_iter23;
wire    ap_block_state27_pp0_stage0_iter24;
wire    ap_block_state28_pp0_stage0_iter25;
wire    ap_block_state29_pp0_stage0_iter26;
wire    ap_block_state30_pp0_stage0_iter27;
wire    ap_block_state31_pp0_stage0_iter28;
wire    ap_block_state32_pp0_stage0_iter29;
reg    ap_block_state33_pp0_stage0_iter30;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_reg_410_pp0_iter1_reg;
reg   [0:0] exitcond_reg_410_pp0_iter2_reg;
reg   [0:0] exitcond_reg_410_pp0_iter3_reg;
reg   [0:0] exitcond_reg_410_pp0_iter4_reg;
reg   [0:0] exitcond_reg_410_pp0_iter5_reg;
reg   [0:0] exitcond_reg_410_pp0_iter6_reg;
reg   [0:0] exitcond_reg_410_pp0_iter7_reg;
reg   [0:0] exitcond_reg_410_pp0_iter8_reg;
reg   [0:0] exitcond_reg_410_pp0_iter9_reg;
reg   [0:0] exitcond_reg_410_pp0_iter10_reg;
reg   [0:0] exitcond_reg_410_pp0_iter11_reg;
reg   [0:0] exitcond_reg_410_pp0_iter12_reg;
reg   [0:0] exitcond_reg_410_pp0_iter13_reg;
reg   [0:0] exitcond_reg_410_pp0_iter14_reg;
reg   [0:0] exitcond_reg_410_pp0_iter15_reg;
reg   [0:0] exitcond_reg_410_pp0_iter16_reg;
reg   [0:0] exitcond_reg_410_pp0_iter17_reg;
reg   [0:0] exitcond_reg_410_pp0_iter18_reg;
reg   [0:0] exitcond_reg_410_pp0_iter19_reg;
reg   [0:0] exitcond_reg_410_pp0_iter20_reg;
reg   [0:0] exitcond_reg_410_pp0_iter21_reg;
reg   [0:0] exitcond_reg_410_pp0_iter22_reg;
reg   [0:0] exitcond_reg_410_pp0_iter23_reg;
reg   [0:0] exitcond_reg_410_pp0_iter24_reg;
reg   [0:0] exitcond_reg_410_pp0_iter25_reg;
reg   [0:0] exitcond_reg_410_pp0_iter26_reg;
reg   [0:0] exitcond_reg_410_pp0_iter27_reg;
reg   [0:0] exitcond_reg_410_pp0_iter28_reg;
wire   [10:0] j_V_fu_371_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [7:0] tmp_46_reg_419;
reg   [7:0] tmp_47_reg_424;
reg   [7:0] tmp_48_reg_429;
reg   [7:0] tmp_49_reg_434;
reg   [7:0] tmp_50_reg_439;
reg   [7:0] tmp_51_reg_444;
wire   [63:0] grp_fu_335_p1;
reg   [63:0] tmp_27_reg_479;
wire   [63:0] grp_fu_338_p1;
reg   [63:0] tmp_29_reg_484;
wire   [63:0] grp_fu_341_p1;
reg   [63:0] tmp_297_1_reg_489;
wire   [63:0] grp_fu_344_p1;
reg   [63:0] tmp_299_1_reg_494;
wire   [63:0] grp_fu_347_p1;
reg   [63:0] tmp_297_2_reg_499;
wire   [63:0] grp_fu_350_p1;
reg   [63:0] tmp_299_2_reg_504;
wire   [63:0] grp_fu_305_p2;
reg   [63:0] t1_reg_509;
wire   [63:0] grp_fu_310_p2;
reg   [63:0] t2_reg_514;
wire   [63:0] grp_fu_315_p2;
reg   [63:0] t1_1_reg_519;
wire   [63:0] grp_fu_320_p2;
reg   [63:0] t2_1_reg_524;
wire   [63:0] grp_fu_325_p2;
reg   [63:0] t1_2_reg_529;
wire   [63:0] grp_fu_330_p2;
reg   [63:0] t2_2_reg_534;
wire   [63:0] grp_fu_278_p2;
reg   [63:0] tmp_30_reg_539;
wire   [63:0] grp_fu_282_p2;
reg   [63:0] tmp_300_1_reg_544;
wire   [63:0] grp_fu_286_p2;
reg   [63:0] tmp_300_2_reg_549;
wire   [63:0] grp_fu_290_p2;
reg   [63:0] v_assign_reg_554;
wire   [63:0] grp_fu_295_p2;
reg   [63:0] v_assign_1_reg_559;
wire   [63:0] grp_fu_300_p2;
reg   [63:0] v_assign_2_reg_564;
wire   [7:0] grp_operator_1_fu_263_ap_return;
reg   [7:0] d_val_0_reg_569;
wire   [7:0] grp_operator_1_fu_268_ap_return;
reg   [7:0] d_val_1_reg_574;
wire   [7:0] grp_operator_1_fu_273_ap_return;
reg   [7:0] tmp_10_reg_579;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    grp_operator_1_fu_263_ap_ce;
reg    grp_operator_1_fu_268_ap_ce;
reg    grp_operator_1_fu_273_ap_ce;
reg   [10:0] t_V_reg_241;
wire    ap_CS_fsm_state34;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_335_p0;
wire   [31:0] grp_fu_338_p0;
wire   [31:0] grp_fu_341_p0;
wire   [31:0] grp_fu_344_p0;
wire   [31:0] grp_fu_347_p0;
wire   [31:0] grp_fu_350_p0;
reg    grp_fu_278_ce;
reg    grp_fu_282_ce;
reg    grp_fu_286_ce;
reg    grp_fu_290_ce;
reg    grp_fu_295_ce;
reg    grp_fu_300_ce;
reg    grp_fu_305_ce;
reg    grp_fu_310_ce;
reg    grp_fu_315_ce;
reg    grp_fu_320_ce;
reg    grp_fu_325_ce;
reg    grp_fu_330_ce;
reg    grp_fu_335_ce;
reg    grp_fu_338_ce;
reg    grp_fu_341_ce;
reg    grp_fu_344_ce;
reg    grp_fu_347_ce;
reg    grp_fu_350_ce;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
end

operator_1 grp_operator_1_fu_263(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .v(v_assign_reg_554),
    .ap_return(grp_operator_1_fu_263_ap_return),
    .ap_ce(grp_operator_1_fu_263_ap_ce)
);

operator_1 grp_operator_1_fu_268(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .v(v_assign_1_reg_559),
    .ap_return(grp_operator_1_fu_268_ap_return),
    .ap_ce(grp_operator_1_fu_268_ap_ce)
);

operator_1 grp_operator_1_fu_273(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .v(v_assign_2_reg_564),
    .ap_return(grp_operator_1_fu_273_ap_return),
    .ap_ce(grp_operator_1_fu_273_ap_ce)
);

sobel_dadd_64ns_6CeG #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sobel_dadd_64ns_6CeG_U139(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(t1_reg_509),
    .din1(t2_reg_514),
    .ce(grp_fu_278_ce),
    .dout(grp_fu_278_p2)
);

sobel_dadd_64ns_6CeG #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sobel_dadd_64ns_6CeG_U140(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(t1_1_reg_519),
    .din1(t2_1_reg_524),
    .ce(grp_fu_282_ce),
    .dout(grp_fu_282_p2)
);

sobel_dadd_64ns_6CeG #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sobel_dadd_64ns_6CeG_U141(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(t1_2_reg_529),
    .din1(t2_2_reg_534),
    .ce(grp_fu_286_ce),
    .dout(grp_fu_286_p2)
);

sobel_dadd_64ns_6CeG #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sobel_dadd_64ns_6CeG_U142(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_30_reg_539),
    .din1(64'd0),
    .ce(grp_fu_290_ce),
    .dout(grp_fu_290_p2)
);

sobel_dadd_64ns_6CeG #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sobel_dadd_64ns_6CeG_U143(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_300_1_reg_544),
    .din1(64'd0),
    .ce(grp_fu_295_ce),
    .dout(grp_fu_295_p2)
);

sobel_dadd_64ns_6CeG #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sobel_dadd_64ns_6CeG_U144(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_300_2_reg_549),
    .din1(64'd0),
    .ce(grp_fu_300_ce),
    .dout(grp_fu_300_p2)
);

sobel_dmul_64ns_6DeQ #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sobel_dmul_64ns_6DeQ_U145(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_27_reg_479),
    .din1(64'd4602678819172646912),
    .ce(grp_fu_305_ce),
    .dout(grp_fu_305_p2)
);

sobel_dmul_64ns_6DeQ #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sobel_dmul_64ns_6DeQ_U146(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_29_reg_484),
    .din1(64'd4602678819172646912),
    .ce(grp_fu_310_ce),
    .dout(grp_fu_310_p2)
);

sobel_dmul_64ns_6DeQ #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sobel_dmul_64ns_6DeQ_U147(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_297_1_reg_489),
    .din1(64'd4602678819172646912),
    .ce(grp_fu_315_ce),
    .dout(grp_fu_315_p2)
);

sobel_dmul_64ns_6DeQ #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sobel_dmul_64ns_6DeQ_U148(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_299_1_reg_494),
    .din1(64'd4602678819172646912),
    .ce(grp_fu_320_ce),
    .dout(grp_fu_320_p2)
);

sobel_dmul_64ns_6DeQ #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sobel_dmul_64ns_6DeQ_U149(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_297_2_reg_499),
    .din1(64'd4602678819172646912),
    .ce(grp_fu_325_ce),
    .dout(grp_fu_325_p2)
);

sobel_dmul_64ns_6DeQ #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sobel_dmul_64ns_6DeQ_U150(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_299_2_reg_504),
    .din1(64'd4602678819172646912),
    .ce(grp_fu_330_ce),
    .dout(grp_fu_330_p2)
);

sobel_sitodp_32nsEe0 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sobel_sitodp_32nsEe0_U151(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_335_p0),
    .ce(grp_fu_335_ce),
    .dout(grp_fu_335_p1)
);

sobel_sitodp_32nsEe0 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sobel_sitodp_32nsEe0_U152(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_338_p0),
    .ce(grp_fu_338_ce),
    .dout(grp_fu_338_p1)
);

sobel_sitodp_32nsEe0 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sobel_sitodp_32nsEe0_U153(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_341_p0),
    .ce(grp_fu_341_ce),
    .dout(grp_fu_341_p1)
);

sobel_sitodp_32nsEe0 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sobel_sitodp_32nsEe0_U154(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_344_p0),
    .ce(grp_fu_344_ce),
    .dout(grp_fu_344_p1)
);

sobel_sitodp_32nsEe0 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sobel_sitodp_32nsEe0_U155(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_347_p0),
    .ce(grp_fu_347_ce),
    .dout(grp_fu_347_p1)
);

sobel_sitodp_32nsEe0 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sobel_sitodp_32nsEe0_U156(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_350_p0),
    .ce(grp_fu_350_ce),
    .dout(grp_fu_350_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond4_fu_353_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end else if (((exitcond4_fu_353_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter30 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_365_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_1_reg_252 <= j_V_fu_371_p2;
    end else if (((exitcond4_fu_353_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_1_reg_252 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        t_V_reg_241 <= i_V_reg_405;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_241 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_410_pp0_iter28_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_val_0_reg_569 <= grp_operator_1_fu_263_ap_return;
        d_val_1_reg_574 <= grp_operator_1_fu_268_ap_return;
        tmp_10_reg_579 <= grp_operator_1_fu_273_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_reg_410 <= exitcond_fu_365_p2;
        exitcond_reg_410_pp0_iter1_reg <= exitcond_reg_410;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond_reg_410_pp0_iter10_reg <= exitcond_reg_410_pp0_iter9_reg;
        exitcond_reg_410_pp0_iter11_reg <= exitcond_reg_410_pp0_iter10_reg;
        exitcond_reg_410_pp0_iter12_reg <= exitcond_reg_410_pp0_iter11_reg;
        exitcond_reg_410_pp0_iter13_reg <= exitcond_reg_410_pp0_iter12_reg;
        exitcond_reg_410_pp0_iter14_reg <= exitcond_reg_410_pp0_iter13_reg;
        exitcond_reg_410_pp0_iter15_reg <= exitcond_reg_410_pp0_iter14_reg;
        exitcond_reg_410_pp0_iter16_reg <= exitcond_reg_410_pp0_iter15_reg;
        exitcond_reg_410_pp0_iter17_reg <= exitcond_reg_410_pp0_iter16_reg;
        exitcond_reg_410_pp0_iter18_reg <= exitcond_reg_410_pp0_iter17_reg;
        exitcond_reg_410_pp0_iter19_reg <= exitcond_reg_410_pp0_iter18_reg;
        exitcond_reg_410_pp0_iter20_reg <= exitcond_reg_410_pp0_iter19_reg;
        exitcond_reg_410_pp0_iter21_reg <= exitcond_reg_410_pp0_iter20_reg;
        exitcond_reg_410_pp0_iter22_reg <= exitcond_reg_410_pp0_iter21_reg;
        exitcond_reg_410_pp0_iter23_reg <= exitcond_reg_410_pp0_iter22_reg;
        exitcond_reg_410_pp0_iter24_reg <= exitcond_reg_410_pp0_iter23_reg;
        exitcond_reg_410_pp0_iter25_reg <= exitcond_reg_410_pp0_iter24_reg;
        exitcond_reg_410_pp0_iter26_reg <= exitcond_reg_410_pp0_iter25_reg;
        exitcond_reg_410_pp0_iter27_reg <= exitcond_reg_410_pp0_iter26_reg;
        exitcond_reg_410_pp0_iter28_reg <= exitcond_reg_410_pp0_iter27_reg;
        exitcond_reg_410_pp0_iter29_reg <= exitcond_reg_410_pp0_iter28_reg;
        exitcond_reg_410_pp0_iter2_reg <= exitcond_reg_410_pp0_iter1_reg;
        exitcond_reg_410_pp0_iter3_reg <= exitcond_reg_410_pp0_iter2_reg;
        exitcond_reg_410_pp0_iter4_reg <= exitcond_reg_410_pp0_iter3_reg;
        exitcond_reg_410_pp0_iter5_reg <= exitcond_reg_410_pp0_iter4_reg;
        exitcond_reg_410_pp0_iter6_reg <= exitcond_reg_410_pp0_iter5_reg;
        exitcond_reg_410_pp0_iter7_reg <= exitcond_reg_410_pp0_iter6_reg;
        exitcond_reg_410_pp0_iter8_reg <= exitcond_reg_410_pp0_iter7_reg;
        exitcond_reg_410_pp0_iter9_reg <= exitcond_reg_410_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_405 <= i_V_fu_359_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_410_pp0_iter12_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t1_1_reg_519 <= grp_fu_315_p2;
        t1_2_reg_529 <= grp_fu_325_p2;
        t1_reg_509 <= grp_fu_305_p2;
        t2_1_reg_524 <= grp_fu_320_p2;
        t2_2_reg_534 <= grp_fu_330_p2;
        t2_reg_514 <= grp_fu_310_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_410_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_27_reg_479 <= grp_fu_335_p1;
        tmp_297_1_reg_489 <= grp_fu_341_p1;
        tmp_297_2_reg_499 <= grp_fu_347_p1;
        tmp_299_1_reg_494 <= grp_fu_344_p1;
        tmp_299_2_reg_504 <= grp_fu_350_p1;
        tmp_29_reg_484 <= grp_fu_338_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_410_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_300_1_reg_544 <= grp_fu_282_p2;
        tmp_300_2_reg_549 <= grp_fu_286_p2;
        tmp_30_reg_539 <= grp_fu_278_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_410 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_46_reg_419 <= src1_data_stream_0_V_dout;
        tmp_47_reg_424 <= src1_data_stream_1_V_dout;
        tmp_48_reg_429 <= src1_data_stream_2_V_dout;
        tmp_49_reg_434 <= src2_data_stream_0_V_dout;
        tmp_50_reg_439 <= src2_data_stream_1_V_dout;
        tmp_51_reg_444 <= src2_data_stream_2_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_410_pp0_iter24_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v_assign_1_reg_559 <= grp_fu_295_p2;
        v_assign_2_reg_564 <= grp_fu_300_p2;
        v_assign_reg_554 <= grp_fu_290_p2;
    end
end

always @ (*) begin
    if ((exitcond_fu_365_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((exitcond4_fu_353_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond4_fu_353_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_reg_410_pp0_iter29_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter30 == 1'b1))) begin
        dst_data_stream_0_V_blk_n = dst_data_stream_0_V_full_n;
    end else begin
        dst_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_reg_410_pp0_iter29_reg == 1'd0) & (ap_enable_reg_pp0_iter30 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dst_data_stream_0_V_write = 1'b1;
    end else begin
        dst_data_stream_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_reg_410_pp0_iter29_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter30 == 1'b1))) begin
        dst_data_stream_1_V_blk_n = dst_data_stream_1_V_full_n;
    end else begin
        dst_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_reg_410_pp0_iter29_reg == 1'd0) & (ap_enable_reg_pp0_iter30 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dst_data_stream_1_V_write = 1'b1;
    end else begin
        dst_data_stream_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_reg_410_pp0_iter29_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter30 == 1'b1))) begin
        dst_data_stream_2_V_blk_n = dst_data_stream_2_V_full_n;
    end else begin
        dst_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_reg_410_pp0_iter29_reg == 1'd0) & (ap_enable_reg_pp0_iter30 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dst_data_stream_2_V_write = 1'b1;
    end else begin
        dst_data_stream_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_278_ce = 1'b1;
    end else begin
        grp_fu_278_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_282_ce = 1'b1;
    end else begin
        grp_fu_282_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_286_ce = 1'b1;
    end else begin
        grp_fu_286_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_290_ce = 1'b1;
    end else begin
        grp_fu_290_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_295_ce = 1'b1;
    end else begin
        grp_fu_295_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_300_ce = 1'b1;
    end else begin
        grp_fu_300_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_305_ce = 1'b1;
    end else begin
        grp_fu_305_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_310_ce = 1'b1;
    end else begin
        grp_fu_310_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_315_ce = 1'b1;
    end else begin
        grp_fu_315_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_320_ce = 1'b1;
    end else begin
        grp_fu_320_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_325_ce = 1'b1;
    end else begin
        grp_fu_325_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_330_ce = 1'b1;
    end else begin
        grp_fu_330_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_335_ce = 1'b1;
    end else begin
        grp_fu_335_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_338_ce = 1'b1;
    end else begin
        grp_fu_338_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_341_ce = 1'b1;
    end else begin
        grp_fu_341_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_344_ce = 1'b1;
    end else begin
        grp_fu_344_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_347_ce = 1'b1;
    end else begin
        grp_fu_347_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_350_ce = 1'b1;
    end else begin
        grp_fu_350_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_operator_1_fu_263_ap_ce = 1'b1;
    end else begin
        grp_operator_1_fu_263_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_operator_1_fu_268_ap_ce = 1'b1;
    end else begin
        grp_operator_1_fu_268_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_operator_1_fu_273_ap_ce = 1'b1;
    end else begin
        grp_operator_1_fu_273_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_reg_410 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        src1_data_stream_0_V_blk_n = src1_data_stream_0_V_empty_n;
    end else begin
        src1_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_reg_410 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src1_data_stream_0_V_read = 1'b1;
    end else begin
        src1_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_reg_410 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        src1_data_stream_1_V_blk_n = src1_data_stream_1_V_empty_n;
    end else begin
        src1_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_reg_410 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src1_data_stream_1_V_read = 1'b1;
    end else begin
        src1_data_stream_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_reg_410 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        src1_data_stream_2_V_blk_n = src1_data_stream_2_V_empty_n;
    end else begin
        src1_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_reg_410 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src1_data_stream_2_V_read = 1'b1;
    end else begin
        src1_data_stream_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_reg_410 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        src2_data_stream_0_V_blk_n = src2_data_stream_0_V_empty_n;
    end else begin
        src2_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_reg_410 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src2_data_stream_0_V_read = 1'b1;
    end else begin
        src2_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_reg_410 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        src2_data_stream_1_V_blk_n = src2_data_stream_1_V_empty_n;
    end else begin
        src2_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_reg_410 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src2_data_stream_1_V_read = 1'b1;
    end else begin
        src2_data_stream_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_reg_410 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        src2_data_stream_2_V_blk_n = src2_data_stream_2_V_empty_n;
    end else begin
        src2_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_reg_410 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src2_data_stream_2_V_read = 1'b1;
    end else begin
        src2_data_stream_2_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond4_fu_353_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_fu_365_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter29 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter30 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter29 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter30 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_fu_365_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter30 == 1'b1) & (((exitcond_reg_410_pp0_iter29_reg == 1'd0) & (dst_data_stream_2_V_full_n == 1'b0)) | ((exitcond_reg_410_pp0_iter29_reg == 1'd0) & (dst_data_stream_1_V_full_n == 1'b0)) | ((exitcond_reg_410_pp0_iter29_reg == 1'd0) & (dst_data_stream_0_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_reg_410 == 1'd0) & (src2_data_stream_2_V_empty_n == 1'b0)) | ((exitcond_reg_410 == 1'd0) & (src2_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_reg_410 == 1'd0) & (src2_data_stream_0_V_empty_n == 1'b0)) | ((exitcond_reg_410 == 1'd0) & (src1_data_stream_2_V_empty_n == 1'b0)) | ((exitcond_reg_410 == 1'd0) & (src1_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_reg_410 == 1'd0) & (src1_data_stream_0_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter30 == 1'b1) & (((exitcond_reg_410_pp0_iter29_reg == 1'd0) & (dst_data_stream_2_V_full_n == 1'b0)) | ((exitcond_reg_410_pp0_iter29_reg == 1'd0) & (dst_data_stream_1_V_full_n == 1'b0)) | ((exitcond_reg_410_pp0_iter29_reg == 1'd0) & (dst_data_stream_0_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_reg_410 == 1'd0) & (src2_data_stream_2_V_empty_n == 1'b0)) | ((exitcond_reg_410 == 1'd0) & (src2_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_reg_410 == 1'd0) & (src2_data_stream_0_V_empty_n == 1'b0)) | ((exitcond_reg_410 == 1'd0) & (src1_data_stream_2_V_empty_n == 1'b0)) | ((exitcond_reg_410 == 1'd0) & (src1_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_reg_410 == 1'd0) & (src1_data_stream_0_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter30 == 1'b1) & (((exitcond_reg_410_pp0_iter29_reg == 1'd0) & (dst_data_stream_2_V_full_n == 1'b0)) | ((exitcond_reg_410_pp0_iter29_reg == 1'd0) & (dst_data_stream_1_V_full_n == 1'b0)) | ((exitcond_reg_410_pp0_iter29_reg == 1'd0) & (dst_data_stream_0_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_reg_410 == 1'd0) & (src2_data_stream_2_V_empty_n == 1'b0)) | ((exitcond_reg_410 == 1'd0) & (src2_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_reg_410 == 1'd0) & (src2_data_stream_0_V_empty_n == 1'b0)) | ((exitcond_reg_410 == 1'd0) & (src1_data_stream_2_V_empty_n == 1'b0)) | ((exitcond_reg_410 == 1'd0) & (src1_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_reg_410 == 1'd0) & (src1_data_stream_0_V_empty_n == 1'b0)))));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state33_pp0_stage0_iter30 = (((exitcond_reg_410_pp0_iter29_reg == 1'd0) & (dst_data_stream_2_V_full_n == 1'b0)) | ((exitcond_reg_410_pp0_iter29_reg == 1'd0) & (dst_data_stream_1_V_full_n == 1'b0)) | ((exitcond_reg_410_pp0_iter29_reg == 1'd0) & (dst_data_stream_0_V_full_n == 1'b0)));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((exitcond_reg_410 == 1'd0) & (src2_data_stream_2_V_empty_n == 1'b0)) | ((exitcond_reg_410 == 1'd0) & (src2_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_reg_410 == 1'd0) & (src2_data_stream_0_V_empty_n == 1'b0)) | ((exitcond_reg_410 == 1'd0) & (src1_data_stream_2_V_empty_n == 1'b0)) | ((exitcond_reg_410 == 1'd0) & (src1_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_reg_410 == 1'd0) & (src1_data_stream_0_V_empty_n == 1'b0)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign dst_data_stream_0_V_din = d_val_0_reg_569;

assign dst_data_stream_1_V_din = d_val_1_reg_574;

assign dst_data_stream_2_V_din = tmp_10_reg_579;

assign exitcond4_fu_353_p2 = ((t_V_reg_241 == 11'd1080) ? 1'b1 : 1'b0);

assign exitcond_fu_365_p2 = ((t_V_1_reg_252 == 11'd1920) ? 1'b1 : 1'b0);

assign grp_fu_335_p0 = tmp_46_reg_419;

assign grp_fu_338_p0 = tmp_49_reg_434;

assign grp_fu_341_p0 = tmp_47_reg_424;

assign grp_fu_344_p0 = tmp_50_reg_439;

assign grp_fu_347_p0 = tmp_48_reg_429;

assign grp_fu_350_p0 = tmp_51_reg_444;

assign i_V_fu_359_p2 = (t_V_reg_241 + 11'd1);

assign j_V_fu_371_p2 = (t_V_1_reg_252 + 11'd1);

endmodule //arithm_pro
