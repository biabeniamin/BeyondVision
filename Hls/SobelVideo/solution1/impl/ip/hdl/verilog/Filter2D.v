// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_data_stream_0_V_dout,
        p_src_data_stream_0_V_empty_n,
        p_src_data_stream_0_V_read,
        p_src_data_stream_1_V_dout,
        p_src_data_stream_1_V_empty_n,
        p_src_data_stream_1_V_read,
        p_src_data_stream_2_V_dout,
        p_src_data_stream_2_V_empty_n,
        p_src_data_stream_2_V_read,
        p_dst_data_stream_0_V_din,
        p_dst_data_stream_0_V_full_n,
        p_dst_data_stream_0_V_write,
        p_dst_data_stream_1_V_din,
        p_dst_data_stream_1_V_full_n,
        p_dst_data_stream_1_V_write,
        p_dst_data_stream_2_V_din,
        p_dst_data_stream_2_V_full_n,
        p_dst_data_stream_2_V_write,
        p_kernel_val_0_V_1_read,
        p_kernel_val_0_V_2_read,
        p_kernel_val_1_V_0_read,
        p_kernel_val_1_V_2_read,
        p_kernel_val_2_V_0_read,
        p_kernel_val_2_V_1_read
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_pp0_stage0 = 5'd8;
parameter    ap_ST_fsm_state10 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_src_data_stream_0_V_dout;
input   p_src_data_stream_0_V_empty_n;
output   p_src_data_stream_0_V_read;
input  [7:0] p_src_data_stream_1_V_dout;
input   p_src_data_stream_1_V_empty_n;
output   p_src_data_stream_1_V_read;
input  [7:0] p_src_data_stream_2_V_dout;
input   p_src_data_stream_2_V_empty_n;
output   p_src_data_stream_2_V_read;
output  [7:0] p_dst_data_stream_0_V_din;
input   p_dst_data_stream_0_V_full_n;
output   p_dst_data_stream_0_V_write;
output  [7:0] p_dst_data_stream_1_V_din;
input   p_dst_data_stream_1_V_full_n;
output   p_dst_data_stream_1_V_write;
output  [7:0] p_dst_data_stream_2_V_din;
input   p_dst_data_stream_2_V_full_n;
output   p_dst_data_stream_2_V_write;
input  [1:0] p_kernel_val_0_V_1_read;
input  [1:0] p_kernel_val_0_V_2_read;
input  [2:0] p_kernel_val_1_V_0_read;
input  [3:0] p_kernel_val_1_V_2_read;
input  [1:0] p_kernel_val_2_V_0_read;
input  [2:0] p_kernel_val_2_V_1_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_0_V_read;
reg p_src_data_stream_1_V_read;
reg p_src_data_stream_2_V_read;
reg p_dst_data_stream_0_V_write;
reg p_dst_data_stream_1_V_write;
reg p_dst_data_stream_2_V_write;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_0_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond389_i_reg_2807;
reg   [0:0] exitcond389_i_reg_2807_pp0_iter1_reg;
reg   [0:0] or_cond_i_i_reg_2816;
reg   [0:0] or_cond_i_i_reg_2816_pp0_iter1_reg;
reg   [0:0] icmp_reg_2760;
reg   [0:0] tmp_34_reg_2751;
reg    p_src_data_stream_1_V_blk_n;
reg    p_src_data_stream_2_V_blk_n;
reg    p_dst_data_stream_0_V_blk_n;
reg    ap_enable_reg_pp0_iter5;
reg   [0:0] or_cond_i_reg_2843;
reg   [0:0] or_cond_i_reg_2843_pp0_iter4_reg;
reg    p_dst_data_stream_1_V_blk_n;
reg    p_dst_data_stream_2_V_blk_n;
reg   [10:0] t_V_3_reg_644;
wire   [1:0] tmp_32_fu_655_p2;
wire    ap_CS_fsm_state2;
wire  signed [9:0] OP2_V_0_0_1_cast_fu_667_p1;
reg  signed [9:0] OP2_V_0_0_1_cast_reg_2700;
wire   [0:0] tmp_33_fu_661_p2;
wire  signed [9:0] OP2_V_0_0_2_cast_fu_670_p1;
reg  signed [9:0] OP2_V_0_0_2_cast_reg_2707;
wire  signed [10:0] OP2_V_0_1_cast_fu_673_p1;
reg  signed [10:0] OP2_V_0_1_cast_reg_2714;
wire   [11:0] OP2_V_0_1_2_cast_fu_676_p1;
reg   [11:0] OP2_V_0_1_2_cast_reg_2721;
wire  signed [9:0] OP2_V_0_2_cast_fu_679_p1;
reg  signed [9:0] OP2_V_0_2_cast_reg_2728;
wire   [10:0] OP2_V_0_2_1_cast_fu_682_p1;
reg   [10:0] OP2_V_0_2_1_cast_reg_2735;
wire   [0:0] exitcond390_i_fu_689_p2;
wire    ap_CS_fsm_state3;
wire   [10:0] i_V_fu_695_p2;
reg   [10:0] i_V_reg_2746;
wire   [0:0] tmp_34_fu_701_p2;
wire   [0:0] tmp_384_0_0_not_fu_707_p2;
reg   [0:0] tmp_384_0_0_not_reg_2755;
wire   [0:0] icmp_fu_723_p2;
wire   [0:0] tmp_36_fu_729_p2;
reg   [0:0] tmp_36_reg_2765;
wire   [0:0] tmp_428_0_1_fu_735_p2;
reg   [0:0] tmp_428_0_1_reg_2769;
wire   [0:0] tmp_37_fu_741_p2;
reg   [0:0] tmp_37_reg_2773;
wire   [1:0] row_assign_10_0_0_t_fu_895_p2;
reg   [1:0] row_assign_10_0_0_t_reg_2786;
wire   [1:0] row_assign_10_0_1_t_fu_933_p2;
reg   [1:0] row_assign_10_0_1_t_reg_2793;
wire   [1:0] row_assign_10_0_2_t_fu_971_p2;
reg   [1:0] row_assign_10_0_2_t_reg_2800;
wire   [0:0] exitcond389_i_fu_981_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
reg    ap_predicate_op225_read_state6;
reg    ap_predicate_op237_read_state6;
reg    ap_predicate_op276_read_state6;
reg    ap_predicate_op288_read_state6;
reg    ap_predicate_op324_read_state6;
reg    ap_predicate_op333_read_state6;
reg    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state8_pp0_stage0_iter4;
reg    ap_block_state9_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond389_i_reg_2807_pp0_iter2_reg;
wire   [10:0] j_V_fu_987_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] or_cond_i_i_fu_1035_p2;
wire  signed [11:0] x_fu_1083_p3;
reg  signed [11:0] x_reg_2820;
wire   [1:0] tmp_137_fu_1091_p1;
reg   [1:0] tmp_137_reg_2825;
reg   [1:0] tmp_137_reg_2825_pp0_iter1_reg;
wire   [0:0] brmerge_fu_1095_p2;
reg   [0:0] brmerge_reg_2830;
reg   [0:0] brmerge_reg_2830_pp0_iter1_reg;
wire   [0:0] or_cond_i_fu_1100_p2;
reg   [0:0] or_cond_i_reg_2843_pp0_iter1_reg;
reg   [0:0] or_cond_i_reg_2843_pp0_iter2_reg;
reg   [0:0] or_cond_i_reg_2843_pp0_iter3_reg;
reg   [10:0] k_buf_0_val_3_addr_reg_2847;
reg   [10:0] k_buf_0_val_4_addr_reg_2853;
reg   [10:0] k_buf_0_val_5_addr_reg_2859;
reg   [10:0] k_buf_1_val_3_addr_reg_2865;
reg   [10:0] k_buf_1_val_4_addr_reg_2871;
reg   [10:0] k_buf_1_val_5_addr_reg_2877;
reg   [10:0] k_buf_2_val_3_addr_reg_2883;
reg   [10:0] k_buf_2_val_4_addr_reg_2889;
reg   [10:0] k_buf_2_val_5_addr_reg_2895;
wire   [7:0] src_kernel_win_0_va_23_fu_1260_p3;
reg   [7:0] src_kernel_win_0_va_23_reg_2901;
wire   [7:0] src_kernel_win_0_va_24_fu_1278_p3;
reg   [7:0] src_kernel_win_0_va_24_reg_2908;
wire   [7:0] src_kernel_win_0_va_25_fu_1296_p3;
reg   [7:0] src_kernel_win_0_va_25_reg_2914;
wire  signed [10:0] grp_fu_2389_p3;
reg  signed [10:0] p_Val2_89_0_0_1_reg_2919;
wire   [7:0] src_kernel_win_1_va_23_fu_1452_p3;
reg   [7:0] src_kernel_win_1_va_23_reg_2924;
wire   [7:0] src_kernel_win_1_va_24_fu_1470_p3;
reg   [7:0] src_kernel_win_1_va_24_reg_2931;
wire   [7:0] src_kernel_win_1_va_25_fu_1488_p3;
reg   [7:0] src_kernel_win_1_va_25_reg_2937;
wire  signed [10:0] grp_fu_2396_p3;
reg  signed [10:0] p_Val2_89_1_0_1_reg_2942;
wire   [7:0] src_kernel_win_2_va_26_fu_1626_p3;
reg   [7:0] src_kernel_win_2_va_26_reg_2947;
wire   [7:0] src_kernel_win_2_va_27_fu_1644_p3;
reg   [7:0] src_kernel_win_2_va_27_reg_2954;
wire   [7:0] src_kernel_win_2_va_28_fu_1662_p3;
reg   [7:0] src_kernel_win_2_va_28_reg_2960;
wire  signed [10:0] grp_fu_2403_p3;
reg  signed [10:0] p_Val2_89_2_0_1_reg_2965;
wire   [11:0] p_Val2_89_0_1_1_fu_1767_p2;
reg   [11:0] p_Val2_89_0_1_1_reg_2970;
wire   [11:0] r_V_8_0_1_2_fu_1776_p2;
reg   [11:0] r_V_8_0_1_2_reg_2975;
wire   [7:0] tmp_143_fu_1800_p1;
reg   [7:0] tmp_143_reg_2980;
wire   [10:0] tmp3_fu_1830_p2;
reg   [10:0] tmp3_reg_2985;
wire   [7:0] tmp5_fu_1836_p2;
reg   [7:0] tmp5_reg_2990;
wire   [7:0] tmp7_fu_1842_p2;
reg   [7:0] tmp7_reg_2995;
wire   [11:0] p_Val2_89_1_1_1_fu_1882_p2;
reg   [11:0] p_Val2_89_1_1_1_reg_3000;
wire   [11:0] r_V_8_1_1_2_fu_1891_p2;
reg   [11:0] r_V_8_1_1_2_reg_3005;
wire   [7:0] tmp_152_fu_1915_p1;
reg   [7:0] tmp_152_reg_3010;
wire   [10:0] tmp11_fu_1945_p2;
reg   [10:0] tmp11_reg_3015;
wire   [7:0] tmp13_fu_1951_p2;
reg   [7:0] tmp13_reg_3020;
wire   [7:0] tmp15_fu_1957_p2;
reg   [7:0] tmp15_reg_3025;
wire   [11:0] p_Val2_89_2_1_1_fu_1997_p2;
reg   [11:0] p_Val2_89_2_1_1_reg_3030;
wire   [11:0] r_V_8_2_1_2_fu_2006_p2;
reg   [11:0] r_V_8_2_1_2_reg_3035;
wire   [7:0] tmp_161_fu_2030_p1;
reg   [7:0] tmp_161_reg_3040;
wire   [10:0] tmp19_fu_2060_p2;
reg   [10:0] tmp19_reg_3045;
wire   [7:0] tmp21_fu_2066_p2;
reg   [7:0] tmp21_reg_3050;
wire   [7:0] tmp23_fu_2072_p2;
reg   [7:0] tmp23_reg_3055;
wire   [7:0] p_Val2_33_fu_2221_p3;
reg   [7:0] p_Val2_33_reg_3060;
wire   [7:0] p_Val2_34_fu_2301_p3;
reg   [7:0] p_Val2_34_reg_3065;
wire   [7:0] p_Val2_35_fu_2381_p3;
reg   [7:0] p_Val2_35_reg_3070;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
reg    ap_condition_pp0_exit_iter2_state6;
reg    ap_enable_reg_pp0_iter4;
wire   [10:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [7:0] k_buf_0_val_3_q0;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [10:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [7:0] k_buf_0_val_4_q0;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
wire   [10:0] k_buf_1_val_3_address0;
reg    k_buf_1_val_3_ce0;
wire   [7:0] k_buf_1_val_3_q0;
reg    k_buf_1_val_3_ce1;
reg    k_buf_1_val_3_we1;
wire   [10:0] k_buf_1_val_4_address0;
reg    k_buf_1_val_4_ce0;
wire   [7:0] k_buf_1_val_4_q0;
reg    k_buf_1_val_4_ce1;
reg    k_buf_1_val_4_we1;
reg   [7:0] k_buf_1_val_4_d1;
wire   [10:0] k_buf_1_val_5_address0;
reg    k_buf_1_val_5_ce0;
wire   [7:0] k_buf_1_val_5_q0;
reg    k_buf_1_val_5_ce1;
reg    k_buf_1_val_5_we1;
reg   [7:0] k_buf_1_val_5_d1;
wire   [10:0] k_buf_2_val_3_address0;
reg    k_buf_2_val_3_ce0;
wire   [7:0] k_buf_2_val_3_q0;
reg    k_buf_2_val_3_ce1;
reg    k_buf_2_val_3_we1;
wire   [10:0] k_buf_2_val_4_address0;
reg    k_buf_2_val_4_ce0;
wire   [7:0] k_buf_2_val_4_q0;
reg    k_buf_2_val_4_ce1;
reg    k_buf_2_val_4_we1;
reg   [7:0] k_buf_2_val_4_d1;
wire   [10:0] k_buf_2_val_5_address0;
reg    k_buf_2_val_5_ce0;
wire   [7:0] k_buf_2_val_5_q0;
reg    k_buf_2_val_5_ce1;
reg    k_buf_2_val_5_we1;
reg   [7:0] k_buf_2_val_5_d1;
reg   [1:0] tmp_s_reg_622;
reg   [10:0] t_V_reg_633;
wire    ap_CS_fsm_state10;
wire   [63:0] tmp_48_fu_1108_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_244;
reg   [7:0] src_kernel_win_0_va_18_fu_248;
reg   [7:0] src_kernel_win_0_va_19_fu_252;
reg   [7:0] src_kernel_win_0_va_20_fu_256;
reg   [7:0] src_kernel_win_0_va_21_fu_260;
reg   [7:0] src_kernel_win_0_va_22_fu_264;
reg   [7:0] src_kernel_win_1_va_fu_268;
reg   [7:0] src_kernel_win_1_va_18_fu_272;
reg   [7:0] src_kernel_win_1_va_19_fu_276;
reg   [7:0] src_kernel_win_1_va_20_fu_280;
reg   [7:0] src_kernel_win_1_va_21_fu_284;
reg   [7:0] src_kernel_win_1_va_22_fu_288;
reg   [7:0] src_kernel_win_2_va_fu_292;
reg   [7:0] src_kernel_win_2_va_18_fu_296;
reg   [7:0] src_kernel_win_2_va_19_fu_300;
reg   [7:0] src_kernel_win_2_va_20_fu_304;
reg   [7:0] src_kernel_win_2_va_21_fu_308;
reg   [7:0] src_kernel_win_2_va_22_fu_312;
reg   [7:0] right_border_buf_0_s_fu_316;
wire   [7:0] col_buf_0_val_0_0_fu_1165_p3;
reg   [7:0] right_border_buf_0_15_fu_320;
reg   [7:0] right_border_buf_2_s_fu_324;
reg   [7:0] right_border_buf_0_16_fu_328;
wire   [7:0] col_buf_0_val_1_0_fu_1184_p3;
reg   [7:0] right_border_buf_0_17_fu_332;
reg   [7:0] right_border_buf_2_12_fu_336;
wire   [7:0] col_buf_2_val_2_0_fu_1578_p3;
reg   [7:0] right_border_buf_0_18_fu_340;
wire   [7:0] col_buf_0_val_2_0_fu_1203_p3;
reg   [7:0] right_border_buf_0_19_fu_344;
reg   [7:0] right_border_buf_2_13_fu_348;
reg   [7:0] right_border_buf_1_s_fu_352;
wire   [7:0] col_buf_1_val_0_0_fu_1357_p3;
reg   [7:0] right_border_buf_1_15_fu_356;
reg   [7:0] right_border_buf_2_14_fu_360;
wire   [7:0] col_buf_2_val_1_0_fu_1559_p3;
reg   [7:0] right_border_buf_1_16_fu_364;
wire   [7:0] col_buf_1_val_1_0_fu_1376_p3;
reg   [7:0] right_border_buf_1_17_fu_368;
reg   [7:0] right_border_buf_2_15_fu_372;
reg   [7:0] right_border_buf_1_18_fu_376;
wire   [7:0] col_buf_1_val_2_0_fu_1395_p3;
reg   [7:0] right_border_buf_1_19_fu_380;
reg   [7:0] right_border_buf_2_16_fu_384;
wire   [7:0] col_buf_2_val_0_0_fu_1540_p3;
wire   [9:0] tmp_fu_713_p4;
wire   [11:0] t_V_cast_fu_685_p1;
wire   [11:0] tmp_38_fu_751_p2;
wire   [0:0] tmp_121_fu_757_p3;
wire   [0:0] tmp_40_fu_771_p2;
wire   [0:0] rev_fu_765_p2;
wire   [0:0] tmp_122_fu_783_p3;
wire   [11:0] p_assign_7_fu_791_p2;
wire   [11:0] p_p2_i426_i_fu_797_p3;
wire   [11:0] p_assign_6_0_1_fu_815_p2;
wire   [11:0] p_assign_6_0_2_fu_841_p2;
wire   [1:0] tmp_123_fu_811_p1;
wire   [0:0] tmp_42_fu_805_p2;
wire   [1:0] tmp_53_fu_867_p2;
wire   [1:0] tmp_120_fu_747_p1;
wire   [0:0] or_cond_i425_i_fu_777_p2;
wire   [1:0] tmp_55_fu_881_p2;
wire   [1:0] tmp_54_fu_873_p3;
wire   [1:0] tmp_56_fu_887_p3;
wire   [1:0] tmp_126_fu_837_p1;
wire   [0:0] tmp_125_fu_829_p3;
wire   [1:0] tmp_130_fu_907_p2;
wire   [1:0] tmp_131_fu_913_p1;
wire   [0:0] tmp_124_fu_821_p3;
wire   [1:0] tmp_82_fu_917_p3;
wire   [1:0] tmp_58_fu_901_p2;
wire   [1:0] tmp_60_fu_925_p3;
wire   [1:0] tmp_129_fu_863_p1;
wire   [0:0] tmp_128_fu_855_p3;
wire   [1:0] tmp_132_fu_945_p2;
wire   [1:0] tmp_133_fu_951_p1;
wire   [0:0] tmp_127_fu_847_p3;
wire   [1:0] tmp_84_fu_955_p3;
wire   [1:0] tmp_62_fu_939_p2;
wire   [1:0] tmp_64_fu_963_p3;
wire   [9:0] tmp_134_fu_993_p4;
wire   [11:0] t_V_3_cast_fu_977_p1;
wire   [11:0] ImagLoc_x_fu_1009_p2;
wire   [0:0] tmp_135_fu_1015_p3;
wire   [0:0] tmp_45_fu_1029_p2;
wire   [0:0] rev2_fu_1023_p2;
wire   [0:0] tmp_136_fu_1041_p3;
wire   [11:0] p_assign_1_fu_1049_p2;
wire   [11:0] p_p2_i_i_fu_1055_p3;
wire   [0:0] tmp_47_fu_1063_p2;
wire   [11:0] p_assign_2_fu_1069_p2;
wire   [11:0] p_p2_i_i_p_assign_2_fu_1075_p3;
wire   [0:0] icmp2_fu_1003_p2;
wire  signed [31:0] x_cast_fu_1105_p1;
wire   [1:0] col_assign_3_0_t_fu_1148_p2;
wire   [7:0] tmp_49_fu_1153_p5;
wire   [7:0] tmp_50_fu_1172_p5;
wire   [7:0] tmp_51_fu_1191_p5;
wire   [7:0] tmp_57_fu_1249_p5;
wire   [7:0] tmp_61_fu_1267_p5;
wire   [7:0] tmp_65_fu_1285_p5;
wire   [8:0] OP1_V_0_0_cast_fu_1309_p1;
wire  signed [8:0] r_V_8_fu_1313_p2;
wire   [7:0] tmp_74_fu_1345_p5;
wire   [7:0] tmp_75_fu_1364_p5;
wire   [7:0] tmp_76_fu_1383_p5;
wire   [7:0] tmp_77_fu_1441_p5;
wire   [7:0] tmp_78_fu_1459_p5;
wire   [7:0] tmp_79_fu_1477_p5;
wire   [8:0] OP1_V_1_0_cast_fu_1501_p1;
wire  signed [8:0] r_V_8_1_fu_1505_p2;
wire   [7:0] tmp_86_fu_1528_p5;
wire   [7:0] tmp_87_fu_1547_p5;
wire   [7:0] tmp_88_fu_1566_p5;
wire   [7:0] tmp_89_fu_1615_p5;
wire   [7:0] tmp_90_fu_1633_p5;
wire   [7:0] tmp_91_fu_1651_p5;
wire   [8:0] OP1_V_2_0_cast_fu_1675_p1;
wire  signed [8:0] r_V_8_2_fu_1679_p2;
wire  signed [10:0] grp_fu_2410_p3;
wire  signed [2:0] r_V_8_0_1_fu_1751_p0;
wire   [7:0] r_V_8_0_1_fu_1751_p1;
wire  signed [10:0] r_V_8_0_1_fu_1751_p2;
wire  signed [11:0] tmp_472_0_1_cast_cas_fu_1756_p1;
wire  signed [11:0] p_Val2_89_0_0_2_ca_fu_1744_p1;
wire   [3:0] r_V_8_0_1_2_fu_1776_p0;
wire   [7:0] r_V_8_0_1_2_fu_1776_p1;
wire   [7:0] tmp_141_fu_1764_p1;
wire   [7:0] tmp_140_fu_1760_p1;
wire  signed [1:0] r_V_8_0_2_fu_1795_p0;
wire   [7:0] r_V_8_0_2_fu_1795_p1;
wire   [9:0] r_V_8_0_2_fu_1795_p2;
wire   [2:0] r_V_8_0_2_1_fu_1808_p0;
wire   [7:0] r_V_8_0_2_1_fu_1808_p1;
wire   [10:0] r_V_8_0_2_1_fu_1808_p2;
wire   [9:0] tmp_472_0_2_2_cast_c_fu_1817_p1;
wire   [9:0] tmp4_fu_1820_p2;
wire  signed [10:0] tmp4_cast_fu_1826_p1;
wire   [7:0] tmp_69_fu_1785_p2;
wire   [7:0] tmp_142_fu_1781_p1;
wire   [7:0] tmp_144_fu_1813_p1;
wire  signed [10:0] grp_fu_2418_p3;
wire  signed [2:0] r_V_8_1_1_fu_1866_p0;
wire   [7:0] r_V_8_1_1_fu_1866_p1;
wire  signed [10:0] r_V_8_1_1_fu_1866_p2;
wire  signed [11:0] tmp_472_1_1_cast_cas_fu_1871_p1;
wire  signed [11:0] p_Val2_89_1_0_2_ca_fu_1859_p1;
wire   [3:0] r_V_8_1_1_2_fu_1891_p0;
wire   [7:0] r_V_8_1_1_2_fu_1891_p1;
wire   [7:0] tmp_150_fu_1879_p1;
wire   [7:0] tmp_149_fu_1875_p1;
wire  signed [1:0] r_V_8_1_2_fu_1910_p0;
wire   [7:0] r_V_8_1_2_fu_1910_p1;
wire   [9:0] r_V_8_1_2_fu_1910_p2;
wire   [2:0] r_V_8_1_2_1_fu_1923_p0;
wire   [7:0] r_V_8_1_2_1_fu_1923_p1;
wire   [10:0] r_V_8_1_2_1_fu_1923_p2;
wire   [9:0] tmp_472_1_2_2_cast_c_fu_1932_p1;
wire   [9:0] tmp12_fu_1935_p2;
wire  signed [10:0] tmp12_cast_fu_1941_p1;
wire   [7:0] tmp_83_fu_1900_p2;
wire   [7:0] tmp_151_fu_1896_p1;
wire   [7:0] tmp_153_fu_1928_p1;
wire  signed [10:0] grp_fu_2426_p3;
wire  signed [2:0] r_V_8_2_1_fu_1981_p0;
wire   [7:0] r_V_8_2_1_fu_1981_p1;
wire  signed [10:0] r_V_8_2_1_fu_1981_p2;
wire  signed [11:0] tmp_472_2_1_cast_cas_fu_1986_p1;
wire  signed [11:0] p_Val2_89_2_0_2_ca_fu_1974_p1;
wire   [3:0] r_V_8_2_1_2_fu_2006_p0;
wire   [7:0] r_V_8_2_1_2_fu_2006_p1;
wire   [7:0] tmp_159_fu_1994_p1;
wire   [7:0] tmp_158_fu_1990_p1;
wire  signed [1:0] r_V_8_2_2_fu_2025_p0;
wire   [7:0] r_V_8_2_2_fu_2025_p1;
wire   [9:0] r_V_8_2_2_fu_2025_p2;
wire   [2:0] r_V_8_2_2_1_fu_2038_p0;
wire   [7:0] r_V_8_2_2_1_fu_2038_p1;
wire   [10:0] r_V_8_2_2_1_fu_2038_p2;
wire   [9:0] tmp_472_2_2_2_cast_c_fu_2047_p1;
wire   [9:0] tmp20_fu_2050_p2;
wire  signed [10:0] tmp20_cast_fu_2056_p1;
wire   [7:0] tmp_92_fu_2015_p2;
wire   [7:0] tmp_160_fu_2011_p1;
wire   [7:0] tmp_162_fu_2043_p1;
wire   [11:0] tmp2_fu_2149_p2;
wire  signed [11:0] tmp3_cast_fu_2153_p1;
wire   [11:0] p_Val2_27_fu_2156_p2;
wire   [7:0] tmp6_fu_2170_p2;
wire   [0:0] isneg_fu_2162_p3;
wire   [3:0] tmp_72_fu_2179_p4;
wire   [0:0] not_i_i_i_fu_2195_p2;
wire   [0:0] tmp_i_i_fu_2189_p2;
wire   [0:0] overflow_fu_2201_p2;
wire   [0:0] tmp_i_i_104_fu_2215_p2;
wire   [7:0] p_mux_i_i_cast_fu_2207_p3;
wire   [7:0] p_Val2_7_fu_2174_p2;
wire   [11:0] tmp10_fu_2229_p2;
wire  signed [11:0] tmp11_cast_fu_2233_p1;
wire   [11:0] p_Val2_29_fu_2236_p2;
wire   [7:0] tmp14_fu_2250_p2;
wire   [0:0] isneg_1_fu_2242_p3;
wire   [3:0] tmp_85_fu_2259_p4;
wire   [0:0] not_i_i_i5_fu_2275_p2;
wire   [0:0] tmp_i_i4_fu_2269_p2;
wire   [0:0] overflow_1_fu_2281_p2;
wire   [0:0] tmp_i_i8_fu_2295_p2;
wire   [7:0] p_mux_i_i7_cast_fu_2287_p3;
wire   [7:0] p_Val2_8_fu_2254_p2;
wire   [11:0] tmp18_fu_2309_p2;
wire  signed [11:0] tmp19_cast_fu_2313_p1;
wire   [11:0] p_Val2_s_fu_2316_p2;
wire   [7:0] tmp22_fu_2330_p2;
wire   [0:0] isneg_2_fu_2322_p3;
wire   [3:0] tmp_93_fu_2339_p4;
wire   [0:0] not_i_i_i1_fu_2355_p2;
wire   [0:0] tmp_i_i1_fu_2349_p2;
wire   [0:0] overflow_2_fu_2361_p2;
wire   [0:0] tmp_i_i1_105_fu_2375_p2;
wire   [7:0] p_mux_i_i16_cast_fu_2367_p3;
wire   [7:0] p_Val2_31_fu_2334_p2;
wire  signed [1:0] grp_fu_2389_p0;
wire   [7:0] grp_fu_2389_p1;
wire  signed [1:0] grp_fu_2396_p0;
wire   [7:0] grp_fu_2396_p1;
wire  signed [1:0] grp_fu_2403_p0;
wire   [7:0] grp_fu_2403_p1;
wire  signed [1:0] grp_fu_2410_p0;
wire   [7:0] grp_fu_2410_p1;
wire  signed [1:0] grp_fu_2418_p0;
wire   [7:0] grp_fu_2418_p1;
wire  signed [1:0] grp_fu_2426_p0;
wire   [7:0] grp_fu_2426_p1;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_2389_p10;
wire   [9:0] grp_fu_2396_p10;
wire   [9:0] grp_fu_2403_p10;
wire   [9:0] grp_fu_2410_p10;
wire   [9:0] grp_fu_2418_p10;
wire   [9:0] grp_fu_2426_p10;
wire   [11:0] r_V_8_0_1_2_fu_1776_p10;
wire   [10:0] r_V_8_0_1_fu_1751_p10;
wire   [10:0] r_V_8_0_2_1_fu_1808_p10;
wire   [9:0] r_V_8_0_2_fu_1795_p10;
wire   [11:0] r_V_8_1_1_2_fu_1891_p10;
wire   [10:0] r_V_8_1_1_fu_1866_p10;
wire   [10:0] r_V_8_1_2_1_fu_1923_p10;
wire   [9:0] r_V_8_1_2_fu_1910_p10;
wire   [11:0] r_V_8_2_1_2_fu_2006_p10;
wire   [10:0] r_V_8_2_1_fu_1981_p10;
wire   [10:0] r_V_8_2_2_1_fu_2038_p10;
wire   [9:0] r_V_8_2_2_fu_2025_p10;
reg    ap_condition_655;
reg    ap_condition_649;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_addr_reg_2847),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_0_V_dout)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_addr_reg_2853),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_addr_reg_2859),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_1_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_1_val_3_address0),
    .ce0(k_buf_1_val_3_ce0),
    .q0(k_buf_1_val_3_q0),
    .address1(k_buf_1_val_3_addr_reg_2865),
    .ce1(k_buf_1_val_3_ce1),
    .we1(k_buf_1_val_3_we1),
    .d1(p_src_data_stream_1_V_dout)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_1_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_1_val_4_address0),
    .ce0(k_buf_1_val_4_ce0),
    .q0(k_buf_1_val_4_q0),
    .address1(k_buf_1_val_4_addr_reg_2871),
    .ce1(k_buf_1_val_4_ce1),
    .we1(k_buf_1_val_4_we1),
    .d1(k_buf_1_val_4_d1)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_1_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_1_val_5_address0),
    .ce0(k_buf_1_val_5_ce0),
    .q0(k_buf_1_val_5_q0),
    .address1(k_buf_1_val_5_addr_reg_2877),
    .ce1(k_buf_1_val_5_ce1),
    .we1(k_buf_1_val_5_we1),
    .d1(k_buf_1_val_5_d1)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_2_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_2_val_3_address0),
    .ce0(k_buf_2_val_3_ce0),
    .q0(k_buf_2_val_3_q0),
    .address1(k_buf_2_val_3_addr_reg_2883),
    .ce1(k_buf_2_val_3_ce1),
    .we1(k_buf_2_val_3_we1),
    .d1(p_src_data_stream_2_V_dout)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_2_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_2_val_4_address0),
    .ce0(k_buf_2_val_4_ce0),
    .q0(k_buf_2_val_4_q0),
    .address1(k_buf_2_val_4_addr_reg_2889),
    .ce1(k_buf_2_val_4_ce1),
    .we1(k_buf_2_val_4_we1),
    .d1(k_buf_2_val_4_d1)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_2_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_2_val_5_address0),
    .ce0(k_buf_2_val_5_ce0),
    .q0(k_buf_2_val_5_q0),
    .address1(k_buf_2_val_5_addr_reg_2895),
    .ce1(k_buf_2_val_5_ce1),
    .we1(k_buf_2_val_5_we1),
    .d1(k_buf_2_val_5_d1)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U88(
    .din0(right_border_buf_0_s_fu_316),
    .din1(right_border_buf_0_15_fu_320),
    .din2(8'd0),
    .din3(col_assign_3_0_t_fu_1148_p2),
    .dout(tmp_49_fu_1153_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U89(
    .din0(right_border_buf_0_16_fu_328),
    .din1(right_border_buf_0_17_fu_332),
    .din2(8'd0),
    .din3(col_assign_3_0_t_fu_1148_p2),
    .dout(tmp_50_fu_1172_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U90(
    .din0(right_border_buf_0_18_fu_340),
    .din1(right_border_buf_0_19_fu_344),
    .din2(8'd0),
    .din3(col_assign_3_0_t_fu_1148_p2),
    .dout(tmp_51_fu_1191_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U91(
    .din0(col_buf_0_val_0_0_fu_1165_p3),
    .din1(col_buf_0_val_1_0_fu_1184_p3),
    .din2(col_buf_0_val_2_0_fu_1203_p3),
    .din3(row_assign_10_0_0_t_reg_2786),
    .dout(tmp_57_fu_1249_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U92(
    .din0(col_buf_0_val_0_0_fu_1165_p3),
    .din1(col_buf_0_val_1_0_fu_1184_p3),
    .din2(col_buf_0_val_2_0_fu_1203_p3),
    .din3(row_assign_10_0_1_t_reg_2793),
    .dout(tmp_61_fu_1267_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U93(
    .din0(col_buf_0_val_0_0_fu_1165_p3),
    .din1(col_buf_0_val_1_0_fu_1184_p3),
    .din2(col_buf_0_val_2_0_fu_1203_p3),
    .din3(row_assign_10_0_2_t_reg_2800),
    .dout(tmp_65_fu_1285_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U94(
    .din0(right_border_buf_1_s_fu_352),
    .din1(right_border_buf_1_15_fu_356),
    .din2(8'd0),
    .din3(col_assign_3_0_t_fu_1148_p2),
    .dout(tmp_74_fu_1345_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U95(
    .din0(right_border_buf_1_16_fu_364),
    .din1(right_border_buf_1_17_fu_368),
    .din2(8'd0),
    .din3(col_assign_3_0_t_fu_1148_p2),
    .dout(tmp_75_fu_1364_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U96(
    .din0(right_border_buf_1_18_fu_376),
    .din1(right_border_buf_1_19_fu_380),
    .din2(8'd0),
    .din3(col_assign_3_0_t_fu_1148_p2),
    .dout(tmp_76_fu_1383_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U97(
    .din0(col_buf_1_val_0_0_fu_1357_p3),
    .din1(col_buf_1_val_1_0_fu_1376_p3),
    .din2(col_buf_1_val_2_0_fu_1395_p3),
    .din3(row_assign_10_0_0_t_reg_2786),
    .dout(tmp_77_fu_1441_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U98(
    .din0(col_buf_1_val_0_0_fu_1357_p3),
    .din1(col_buf_1_val_1_0_fu_1376_p3),
    .din2(col_buf_1_val_2_0_fu_1395_p3),
    .din3(row_assign_10_0_1_t_reg_2793),
    .dout(tmp_78_fu_1459_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U99(
    .din0(col_buf_1_val_0_0_fu_1357_p3),
    .din1(col_buf_1_val_1_0_fu_1376_p3),
    .din2(col_buf_1_val_2_0_fu_1395_p3),
    .din3(row_assign_10_0_2_t_reg_2800),
    .dout(tmp_79_fu_1477_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U100(
    .din0(right_border_buf_2_16_fu_384),
    .din1(right_border_buf_2_15_fu_372),
    .din2(8'd0),
    .din3(col_assign_3_0_t_fu_1148_p2),
    .dout(tmp_86_fu_1528_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U101(
    .din0(right_border_buf_2_14_fu_360),
    .din1(right_border_buf_2_13_fu_348),
    .din2(8'd0),
    .din3(col_assign_3_0_t_fu_1148_p2),
    .dout(tmp_87_fu_1547_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U102(
    .din0(right_border_buf_2_12_fu_336),
    .din1(right_border_buf_2_s_fu_324),
    .din2(8'd0),
    .din3(col_assign_3_0_t_fu_1148_p2),
    .dout(tmp_88_fu_1566_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U103(
    .din0(col_buf_2_val_0_0_fu_1540_p3),
    .din1(col_buf_2_val_1_0_fu_1559_p3),
    .din2(col_buf_2_val_2_0_fu_1578_p3),
    .din3(row_assign_10_0_0_t_reg_2786),
    .dout(tmp_89_fu_1615_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U104(
    .din0(col_buf_2_val_0_0_fu_1540_p3),
    .din1(col_buf_2_val_1_0_fu_1559_p3),
    .din2(col_buf_2_val_2_0_fu_1578_p3),
    .din3(row_assign_10_0_1_t_reg_2793),
    .dout(tmp_90_fu_1633_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U105(
    .din0(col_buf_2_val_0_0_fu_1540_p3),
    .din1(col_buf_2_val_1_0_fu_1559_p3),
    .din2(col_buf_2_val_2_0_fu_1578_p3),
    .din3(row_assign_10_0_2_t_reg_2800),
    .dout(tmp_91_fu_1651_p5)
);

sobel_mac_muladd_Aem #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 11 ))
sobel_mac_muladd_Aem_U106(
    .din0(grp_fu_2389_p0),
    .din1(grp_fu_2389_p1),
    .din2(r_V_8_fu_1313_p2),
    .dout(grp_fu_2389_p3)
);

sobel_mac_muladd_Aem #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 11 ))
sobel_mac_muladd_Aem_U107(
    .din0(grp_fu_2396_p0),
    .din1(grp_fu_2396_p1),
    .din2(r_V_8_1_fu_1505_p2),
    .dout(grp_fu_2396_p3)
);

sobel_mac_muladd_Aem #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 11 ))
sobel_mac_muladd_Aem_U108(
    .din0(grp_fu_2403_p0),
    .din1(grp_fu_2403_p1),
    .din2(r_V_8_2_fu_1679_p2),
    .dout(grp_fu_2403_p3)
);

sobel_mac_muladd_Bew #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
sobel_mac_muladd_Bew_U109(
    .din0(grp_fu_2410_p0),
    .din1(grp_fu_2410_p1),
    .din2(p_Val2_89_0_0_1_reg_2919),
    .dout(grp_fu_2410_p3)
);

sobel_mac_muladd_Bew #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
sobel_mac_muladd_Bew_U110(
    .din0(grp_fu_2418_p0),
    .din1(grp_fu_2418_p1),
    .din2(p_Val2_89_1_0_1_reg_2942),
    .dout(grp_fu_2418_p3)
);

sobel_mac_muladd_Bew #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
sobel_mac_muladd_Bew_U111(
    .din0(grp_fu_2426_p0),
    .din1(grp_fu_2426_p1),
    .din2(p_Val2_89_2_0_1_reg_2965),
    .dout(grp_fu_2426_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond389_i_fu_981_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond390_i_fu_689_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter2_state6)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if (((exitcond390_i_fu_689_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond389_i_fu_981_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        t_V_3_reg_644 <= j_V_fu_987_p2;
    end else if (((exitcond390_i_fu_689_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        t_V_3_reg_644 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        t_V_reg_633 <= i_V_reg_2746;
    end else if (((tmp_33_fu_661_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_reg_633 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_s_reg_622 <= 2'd0;
    end else if (((tmp_33_fu_661_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_s_reg_622 <= tmp_32_fu_655_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_33_fu_661_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        OP2_V_0_0_1_cast_reg_2700 <= OP2_V_0_0_1_cast_fu_667_p1;
        OP2_V_0_0_2_cast_reg_2707 <= OP2_V_0_0_2_cast_fu_670_p1;
        OP2_V_0_1_2_cast_reg_2721[3 : 0] <= OP2_V_0_1_2_cast_fu_676_p1[3 : 0];
        OP2_V_0_1_cast_reg_2714 <= OP2_V_0_1_cast_fu_673_p1;
        OP2_V_0_2_1_cast_reg_2735[2 : 0] <= OP2_V_0_2_1_cast_fu_682_p1[2 : 0];
        OP2_V_0_2_cast_reg_2728 <= OP2_V_0_2_cast_fu_679_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond389_i_fu_981_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        brmerge_reg_2830 <= brmerge_fu_1095_p2;
        or_cond_i_i_reg_2816 <= or_cond_i_i_fu_1035_p2;
        or_cond_i_reg_2843 <= or_cond_i_fu_1100_p2;
        tmp_137_reg_2825 <= tmp_137_fu_1091_p1;
        x_reg_2820 <= x_fu_1083_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        brmerge_reg_2830_pp0_iter1_reg <= brmerge_reg_2830;
        exitcond389_i_reg_2807 <= exitcond389_i_fu_981_p2;
        exitcond389_i_reg_2807_pp0_iter1_reg <= exitcond389_i_reg_2807;
        or_cond_i_i_reg_2816_pp0_iter1_reg <= or_cond_i_i_reg_2816;
        or_cond_i_reg_2843_pp0_iter1_reg <= or_cond_i_reg_2843;
        tmp_137_reg_2825_pp0_iter1_reg <= tmp_137_reg_2825;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond389_i_reg_2807_pp0_iter2_reg <= exitcond389_i_reg_2807_pp0_iter1_reg;
        or_cond_i_reg_2843_pp0_iter2_reg <= or_cond_i_reg_2843_pp0_iter1_reg;
        or_cond_i_reg_2843_pp0_iter3_reg <= or_cond_i_reg_2843_pp0_iter2_reg;
        or_cond_i_reg_2843_pp0_iter4_reg <= or_cond_i_reg_2843_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_V_reg_2746 <= i_V_fu_695_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond390_i_fu_689_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        icmp_reg_2760 <= icmp_fu_723_p2;
        row_assign_10_0_0_t_reg_2786 <= row_assign_10_0_0_t_fu_895_p2;
        row_assign_10_0_1_t_reg_2793 <= row_assign_10_0_1_t_fu_933_p2;
        row_assign_10_0_2_t_reg_2800 <= row_assign_10_0_2_t_fu_971_p2;
        tmp_34_reg_2751 <= tmp_34_fu_701_p2;
        tmp_36_reg_2765 <= tmp_36_fu_729_p2;
        tmp_37_reg_2773 <= tmp_37_fu_741_p2;
        tmp_384_0_0_not_reg_2755 <= tmp_384_0_0_not_fu_707_p2;
        tmp_428_0_1_reg_2769 <= tmp_428_0_1_fu_735_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond389_i_reg_2807 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_buf_0_val_3_addr_reg_2847 <= tmp_48_fu_1108_p1;
        k_buf_0_val_4_addr_reg_2853 <= tmp_48_fu_1108_p1;
        k_buf_0_val_5_addr_reg_2859 <= tmp_48_fu_1108_p1;
        k_buf_1_val_3_addr_reg_2865 <= tmp_48_fu_1108_p1;
        k_buf_1_val_4_addr_reg_2871 <= tmp_48_fu_1108_p1;
        k_buf_1_val_5_addr_reg_2877 <= tmp_48_fu_1108_p1;
        k_buf_2_val_3_addr_reg_2883 <= tmp_48_fu_1108_p1;
        k_buf_2_val_4_addr_reg_2889 <= tmp_48_fu_1108_p1;
        k_buf_2_val_5_addr_reg_2895 <= tmp_48_fu_1108_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_2843_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_33_reg_3060 <= p_Val2_33_fu_2221_p3;
        p_Val2_34_reg_3065 <= p_Val2_34_fu_2301_p3;
        p_Val2_35_reg_3070 <= p_Val2_35_fu_2381_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_2843_pp0_iter1_reg == 1'd1) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_Val2_89_0_0_1_reg_2919 <= grp_fu_2389_p3;
        p_Val2_89_1_0_1_reg_2942 <= grp_fu_2396_p3;
        p_Val2_89_2_0_1_reg_2965 <= grp_fu_2403_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_2843_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_89_0_1_1_reg_2970 <= p_Val2_89_0_1_1_fu_1767_p2;
        p_Val2_89_1_1_1_reg_3000 <= p_Val2_89_1_1_1_fu_1882_p2;
        p_Val2_89_2_1_1_reg_3030 <= p_Val2_89_2_1_1_fu_1997_p2;
        r_V_8_0_1_2_reg_2975 <= r_V_8_0_1_2_fu_1776_p2;
        r_V_8_1_1_2_reg_3005 <= r_V_8_1_1_2_fu_1891_p2;
        r_V_8_2_1_2_reg_3035 <= r_V_8_2_1_2_fu_2006_p2;
        tmp11_reg_3015 <= tmp11_fu_1945_p2;
        tmp13_reg_3020 <= tmp13_fu_1951_p2;
        tmp15_reg_3025 <= tmp15_fu_1957_p2;
        tmp19_reg_3045 <= tmp19_fu_2060_p2;
        tmp21_reg_3050 <= tmp21_fu_2066_p2;
        tmp23_reg_3055 <= tmp23_fu_2072_p2;
        tmp3_reg_2985 <= tmp3_fu_1830_p2;
        tmp5_reg_2990 <= tmp5_fu_1836_p2;
        tmp7_reg_2995 <= tmp7_fu_1842_p2;
        tmp_143_reg_2980 <= tmp_143_fu_1800_p1;
        tmp_152_reg_3010 <= tmp_152_fu_1915_p1;
        tmp_161_reg_3040 <= tmp_161_fu_2030_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op237_read_state6 == 1'b1))) begin
        right_border_buf_0_15_fu_320 <= right_border_buf_0_s_fu_316;
        right_border_buf_0_16_fu_328 <= col_buf_0_val_1_0_fu_1184_p3;
        right_border_buf_0_17_fu_332 <= right_border_buf_0_16_fu_328;
        right_border_buf_0_18_fu_340 <= col_buf_0_val_2_0_fu_1203_p3;
        right_border_buf_0_19_fu_344 <= right_border_buf_0_18_fu_340;
        right_border_buf_0_s_fu_316 <= col_buf_0_val_0_0_fu_1165_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op288_read_state6 == 1'b1))) begin
        right_border_buf_1_15_fu_356 <= right_border_buf_1_s_fu_352;
        right_border_buf_1_16_fu_364 <= col_buf_1_val_1_0_fu_1376_p3;
        right_border_buf_1_17_fu_368 <= right_border_buf_1_16_fu_364;
        right_border_buf_1_18_fu_376 <= col_buf_1_val_2_0_fu_1395_p3;
        right_border_buf_1_19_fu_380 <= right_border_buf_1_18_fu_376;
        right_border_buf_1_s_fu_352 <= col_buf_1_val_0_0_fu_1357_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op333_read_state6 == 1'b1))) begin
        right_border_buf_2_12_fu_336 <= col_buf_2_val_2_0_fu_1578_p3;
        right_border_buf_2_13_fu_348 <= right_border_buf_2_14_fu_360;
        right_border_buf_2_14_fu_360 <= col_buf_2_val_1_0_fu_1559_p3;
        right_border_buf_2_15_fu_372 <= right_border_buf_2_16_fu_384;
        right_border_buf_2_16_fu_384 <= col_buf_2_val_0_0_fu_1540_p3;
        right_border_buf_2_s_fu_324 <= right_border_buf_2_12_fu_336;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond389_i_reg_2807_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        src_kernel_win_0_va_18_fu_248 <= src_kernel_win_0_va_fu_244;
        src_kernel_win_0_va_19_fu_252 <= src_kernel_win_0_va_24_reg_2908;
        src_kernel_win_0_va_20_fu_256 <= src_kernel_win_0_va_19_fu_252;
        src_kernel_win_0_va_fu_244 <= src_kernel_win_0_va_23_reg_2901;
        src_kernel_win_1_va_18_fu_272 <= src_kernel_win_1_va_fu_268;
        src_kernel_win_1_va_19_fu_276 <= src_kernel_win_1_va_24_reg_2931;
        src_kernel_win_1_va_20_fu_280 <= src_kernel_win_1_va_19_fu_276;
        src_kernel_win_1_va_fu_268 <= src_kernel_win_1_va_23_reg_2924;
        src_kernel_win_2_va_18_fu_296 <= src_kernel_win_2_va_fu_292;
        src_kernel_win_2_va_19_fu_300 <= src_kernel_win_2_va_27_reg_2954;
        src_kernel_win_2_va_20_fu_304 <= src_kernel_win_2_va_19_fu_300;
        src_kernel_win_2_va_fu_292 <= src_kernel_win_2_va_26_reg_2947;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        src_kernel_win_0_va_21_fu_260 <= src_kernel_win_0_va_25_fu_1296_p3;
        src_kernel_win_0_va_22_fu_264 <= src_kernel_win_0_va_21_fu_260;
        src_kernel_win_1_va_21_fu_284 <= src_kernel_win_1_va_25_fu_1488_p3;
        src_kernel_win_1_va_22_fu_288 <= src_kernel_win_1_va_21_fu_284;
        src_kernel_win_2_va_21_fu_308 <= src_kernel_win_2_va_28_fu_1662_p3;
        src_kernel_win_2_va_22_fu_312 <= src_kernel_win_2_va_21_fu_308;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_23_reg_2901 <= src_kernel_win_0_va_23_fu_1260_p3;
        src_kernel_win_0_va_24_reg_2908 <= src_kernel_win_0_va_24_fu_1278_p3;
        src_kernel_win_0_va_25_reg_2914 <= src_kernel_win_0_va_25_fu_1296_p3;
        src_kernel_win_1_va_23_reg_2924 <= src_kernel_win_1_va_23_fu_1452_p3;
        src_kernel_win_1_va_24_reg_2931 <= src_kernel_win_1_va_24_fu_1470_p3;
        src_kernel_win_1_va_25_reg_2937 <= src_kernel_win_1_va_25_fu_1488_p3;
        src_kernel_win_2_va_26_reg_2947 <= src_kernel_win_2_va_26_fu_1626_p3;
        src_kernel_win_2_va_27_reg_2954 <= src_kernel_win_2_va_27_fu_1644_p3;
        src_kernel_win_2_va_28_reg_2960 <= src_kernel_win_2_va_28_fu_1662_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_condition_pp0_exit_iter2_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond390_i_fu_689_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond390_i_fu_689_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_36_reg_2765 == 1'd1) & (or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (icmp_reg_2760 == 1'd0) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op237_read_state6 == 1'b1)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_36_reg_2765 == 1'd1) & (or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (icmp_reg_2760 == 1'd0) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op237_read_state6 == 1'b1)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_428_0_1_reg_2769 == 1'd1) & (or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (icmp_reg_2760 == 1'd0) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op237_read_state6 == 1'b1)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op237_read_state6 == 1'b1)) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_q0;
        end else if ((1'b1 == ap_condition_655)) begin
            k_buf_0_val_4_d1 = p_src_data_stream_0_V_dout;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_428_0_1_reg_2769 == 1'd1) & (or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (icmp_reg_2760 == 1'd0) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op237_read_state6 == 1'b1)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_36_reg_2765 == 1'd1) & (or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (icmp_reg_2760 == 1'd0) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op237_read_state6 == 1'b1)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op237_read_state6 == 1'b1)) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_q0;
        end else if ((1'b1 == ap_condition_649)) begin
            k_buf_0_val_5_d1 = p_src_data_stream_0_V_dout;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_36_reg_2765 == 1'd1) & (or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (icmp_reg_2760 == 1'd0) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op237_read_state6 == 1'b1)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_buf_1_val_3_ce0 = 1'b1;
    end else begin
        k_buf_1_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_36_reg_2765 == 1'd1) & (or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (icmp_reg_2760 == 1'd0) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op288_read_state6 == 1'b1)))) begin
        k_buf_1_val_3_ce1 = 1'b1;
    end else begin
        k_buf_1_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_36_reg_2765 == 1'd1) & (or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (icmp_reg_2760 == 1'd0) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op288_read_state6 == 1'b1)))) begin
        k_buf_1_val_3_we1 = 1'b1;
    end else begin
        k_buf_1_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_buf_1_val_4_ce0 = 1'b1;
    end else begin
        k_buf_1_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_428_0_1_reg_2769 == 1'd1) & (or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (icmp_reg_2760 == 1'd0) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op288_read_state6 == 1'b1)))) begin
        k_buf_1_val_4_ce1 = 1'b1;
    end else begin
        k_buf_1_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op288_read_state6 == 1'b1)) begin
            k_buf_1_val_4_d1 = k_buf_1_val_3_q0;
        end else if ((1'b1 == ap_condition_655)) begin
            k_buf_1_val_4_d1 = p_src_data_stream_1_V_dout;
        end else begin
            k_buf_1_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_1_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_428_0_1_reg_2769 == 1'd1) & (or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (icmp_reg_2760 == 1'd0) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op288_read_state6 == 1'b1)))) begin
        k_buf_1_val_4_we1 = 1'b1;
    end else begin
        k_buf_1_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_buf_1_val_5_ce0 = 1'b1;
    end else begin
        k_buf_1_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_36_reg_2765 == 1'd1) & (or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (icmp_reg_2760 == 1'd0) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op288_read_state6 == 1'b1)))) begin
        k_buf_1_val_5_ce1 = 1'b1;
    end else begin
        k_buf_1_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op288_read_state6 == 1'b1)) begin
            k_buf_1_val_5_d1 = k_buf_1_val_4_q0;
        end else if ((1'b1 == ap_condition_649)) begin
            k_buf_1_val_5_d1 = p_src_data_stream_1_V_dout;
        end else begin
            k_buf_1_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_1_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_36_reg_2765 == 1'd1) & (or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (icmp_reg_2760 == 1'd0) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op288_read_state6 == 1'b1)))) begin
        k_buf_1_val_5_we1 = 1'b1;
    end else begin
        k_buf_1_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_buf_2_val_3_ce0 = 1'b1;
    end else begin
        k_buf_2_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_36_reg_2765 == 1'd1) & (or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (icmp_reg_2760 == 1'd0) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op333_read_state6 == 1'b1)))) begin
        k_buf_2_val_3_ce1 = 1'b1;
    end else begin
        k_buf_2_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_36_reg_2765 == 1'd1) & (or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (icmp_reg_2760 == 1'd0) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op333_read_state6 == 1'b1)))) begin
        k_buf_2_val_3_we1 = 1'b1;
    end else begin
        k_buf_2_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_buf_2_val_4_ce0 = 1'b1;
    end else begin
        k_buf_2_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_428_0_1_reg_2769 == 1'd1) & (or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (icmp_reg_2760 == 1'd0) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op333_read_state6 == 1'b1)))) begin
        k_buf_2_val_4_ce1 = 1'b1;
    end else begin
        k_buf_2_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op333_read_state6 == 1'b1)) begin
            k_buf_2_val_4_d1 = k_buf_2_val_3_q0;
        end else if ((1'b1 == ap_condition_655)) begin
            k_buf_2_val_4_d1 = p_src_data_stream_2_V_dout;
        end else begin
            k_buf_2_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_2_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_428_0_1_reg_2769 == 1'd1) & (or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (icmp_reg_2760 == 1'd0) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op333_read_state6 == 1'b1)))) begin
        k_buf_2_val_4_we1 = 1'b1;
    end else begin
        k_buf_2_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_buf_2_val_5_ce0 = 1'b1;
    end else begin
        k_buf_2_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_36_reg_2765 == 1'd1) & (or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (icmp_reg_2760 == 1'd0) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op333_read_state6 == 1'b1)))) begin
        k_buf_2_val_5_ce1 = 1'b1;
    end else begin
        k_buf_2_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op333_read_state6 == 1'b1)) begin
            k_buf_2_val_5_d1 = k_buf_2_val_4_q0;
        end else if ((1'b1 == ap_condition_649)) begin
            k_buf_2_val_5_d1 = p_src_data_stream_2_V_dout;
        end else begin
            k_buf_2_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_2_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_36_reg_2765 == 1'd1) & (or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (icmp_reg_2760 == 1'd0) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op333_read_state6 == 1'b1)))) begin
        k_buf_2_val_5_we1 = 1'b1;
    end else begin
        k_buf_2_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_2843_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        p_dst_data_stream_0_V_blk_n = p_dst_data_stream_0_V_full_n;
    end else begin
        p_dst_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_2843_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        p_dst_data_stream_0_V_write = 1'b1;
    end else begin
        p_dst_data_stream_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_2843_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        p_dst_data_stream_1_V_blk_n = p_dst_data_stream_1_V_full_n;
    end else begin
        p_dst_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_2843_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        p_dst_data_stream_1_V_write = 1'b1;
    end else begin
        p_dst_data_stream_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_2843_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        p_dst_data_stream_2_V_blk_n = p_dst_data_stream_2_V_full_n;
    end else begin
        p_dst_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_2843_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        p_dst_data_stream_2_V_write = 1'b1;
    end else begin
        p_dst_data_stream_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (icmp_reg_2760 == 1'd0) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_34_reg_2751 == 1'd1) & (icmp_reg_2760 == 1'd1) & (or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        p_src_data_stream_0_V_blk_n = p_src_data_stream_0_V_empty_n;
    end else begin
        p_src_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op237_read_state6 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op225_read_state6 == 1'b1)))) begin
        p_src_data_stream_0_V_read = 1'b1;
    end else begin
        p_src_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (icmp_reg_2760 == 1'd0) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_34_reg_2751 == 1'd1) & (icmp_reg_2760 == 1'd1) & (or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        p_src_data_stream_1_V_blk_n = p_src_data_stream_1_V_empty_n;
    end else begin
        p_src_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op288_read_state6 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op276_read_state6 == 1'b1)))) begin
        p_src_data_stream_1_V_read = 1'b1;
    end else begin
        p_src_data_stream_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (icmp_reg_2760 == 1'd0) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_34_reg_2751 == 1'd1) & (icmp_reg_2760 == 1'd1) & (or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        p_src_data_stream_2_V_blk_n = p_src_data_stream_2_V_empty_n;
    end else begin
        p_src_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op333_read_state6 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op324_read_state6 == 1'b1)))) begin
        p_src_data_stream_2_V_read = 1'b1;
    end else begin
        p_src_data_stream_2_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_33_fu_661_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond390_i_fu_689_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)) & ~((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_fu_1009_p2 = ($signed(12'd4095) + $signed(t_V_3_cast_fu_977_p1));

assign OP1_V_0_0_cast_fu_1309_p1 = src_kernel_win_0_va_22_fu_264;

assign OP1_V_1_0_cast_fu_1501_p1 = src_kernel_win_1_va_22_fu_288;

assign OP1_V_2_0_cast_fu_1675_p1 = src_kernel_win_2_va_22_fu_312;

assign OP2_V_0_0_1_cast_fu_667_p1 = $signed(p_kernel_val_0_V_1_read);

assign OP2_V_0_0_2_cast_fu_670_p1 = $signed(p_kernel_val_0_V_2_read);

assign OP2_V_0_1_2_cast_fu_676_p1 = p_kernel_val_1_V_2_read;

assign OP2_V_0_1_cast_fu_673_p1 = $signed(p_kernel_val_1_V_0_read);

assign OP2_V_0_2_1_cast_fu_682_p1 = p_kernel_val_2_V_1_read;

assign OP2_V_0_2_cast_fu_679_p1 = $signed(p_kernel_val_2_V_0_read);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter5 == 1'b1) & (((or_cond_i_reg_2843_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_2_V_full_n == 1'b0)) | ((or_cond_i_reg_2843_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_1_V_full_n == 1'b0)) | ((or_cond_i_reg_2843_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_0_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op333_read_state6 == 1'b1)) | ((p_src_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op324_read_state6 == 1'b1)) | ((p_src_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op288_read_state6 == 1'b1)) | ((p_src_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op276_read_state6 == 1'b1)) | ((p_src_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op237_read_state6 == 1'b1)) | ((p_src_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op225_read_state6 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter5 == 1'b1) & (((or_cond_i_reg_2843_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_2_V_full_n == 1'b0)) | ((or_cond_i_reg_2843_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_1_V_full_n == 1'b0)) | ((or_cond_i_reg_2843_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_0_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op333_read_state6 == 1'b1)) | ((p_src_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op324_read_state6 == 1'b1)) | ((p_src_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op288_read_state6 == 1'b1)) | ((p_src_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op276_read_state6 == 1'b1)) | ((p_src_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op237_read_state6 == 1'b1)) | ((p_src_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op225_read_state6 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter5 == 1'b1) & (((or_cond_i_reg_2843_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_2_V_full_n == 1'b0)) | ((or_cond_i_reg_2843_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_1_V_full_n == 1'b0)) | ((or_cond_i_reg_2843_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_0_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op333_read_state6 == 1'b1)) | ((p_src_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op324_read_state6 == 1'b1)) | ((p_src_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op288_read_state6 == 1'b1)) | ((p_src_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op276_read_state6 == 1'b1)) | ((p_src_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op237_read_state6 == 1'b1)) | ((p_src_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op225_read_state6 == 1'b1)))));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter2 = (((p_src_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op333_read_state6 == 1'b1)) | ((p_src_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op324_read_state6 == 1'b1)) | ((p_src_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op288_read_state6 == 1'b1)) | ((p_src_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op276_read_state6 == 1'b1)) | ((p_src_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op237_read_state6 == 1'b1)) | ((p_src_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op225_read_state6 == 1'b1)));
end

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp0_stage0_iter5 = (((or_cond_i_reg_2843_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_2_V_full_n == 1'b0)) | ((or_cond_i_reg_2843_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_1_V_full_n == 1'b0)) | ((or_cond_i_reg_2843_pp0_iter4_reg == 1'd1) & (p_dst_data_stream_0_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_649 = ((tmp_36_reg_2765 == 1'd1) & (or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (icmp_reg_2760 == 1'd0) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_655 = ((tmp_428_0_1_reg_2769 == 1'd1) & (or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (icmp_reg_2760 == 1'd0) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op225_read_state6 = ((or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (icmp_reg_2760 == 1'd0) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op237_read_state6 = ((tmp_34_reg_2751 == 1'd1) & (icmp_reg_2760 == 1'd1) & (or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op276_read_state6 = ((or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (icmp_reg_2760 == 1'd0) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op288_read_state6 = ((tmp_34_reg_2751 == 1'd1) & (icmp_reg_2760 == 1'd1) & (or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op324_read_state6 = ((or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (icmp_reg_2760 == 1'd0) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op333_read_state6 = ((tmp_34_reg_2751 == 1'd1) & (icmp_reg_2760 == 1'd1) & (or_cond_i_i_reg_2816_pp0_iter1_reg == 1'd1) & (exitcond389_i_reg_2807_pp0_iter1_reg == 1'd0));
end

assign brmerge_fu_1095_p2 = (tmp_45_fu_1029_p2 | tmp_384_0_0_not_reg_2755);

assign col_assign_3_0_t_fu_1148_p2 = (tmp_137_reg_2825_pp0_iter1_reg ^ 2'd3);

assign col_buf_0_val_0_0_fu_1165_p3 = ((brmerge_reg_2830_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_49_fu_1153_p5);

assign col_buf_0_val_1_0_fu_1184_p3 = ((brmerge_reg_2830_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_50_fu_1172_p5);

assign col_buf_0_val_2_0_fu_1203_p3 = ((brmerge_reg_2830_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_51_fu_1191_p5);

assign col_buf_1_val_0_0_fu_1357_p3 = ((brmerge_reg_2830_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_1_val_3_q0 : tmp_74_fu_1345_p5);

assign col_buf_1_val_1_0_fu_1376_p3 = ((brmerge_reg_2830_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_1_val_4_q0 : tmp_75_fu_1364_p5);

assign col_buf_1_val_2_0_fu_1395_p3 = ((brmerge_reg_2830_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_1_val_5_q0 : tmp_76_fu_1383_p5);

assign col_buf_2_val_0_0_fu_1540_p3 = ((brmerge_reg_2830_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_2_val_3_q0 : tmp_86_fu_1528_p5);

assign col_buf_2_val_1_0_fu_1559_p3 = ((brmerge_reg_2830_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_2_val_4_q0 : tmp_87_fu_1547_p5);

assign col_buf_2_val_2_0_fu_1578_p3 = ((brmerge_reg_2830_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_2_val_5_q0 : tmp_88_fu_1566_p5);

assign exitcond389_i_fu_981_p2 = ((t_V_3_reg_644 == 11'd1922) ? 1'b1 : 1'b0);

assign exitcond390_i_fu_689_p2 = ((t_V_reg_633 == 11'd1082) ? 1'b1 : 1'b0);

assign grp_fu_2389_p0 = OP2_V_0_0_1_cast_reg_2700;

assign grp_fu_2389_p1 = grp_fu_2389_p10;

assign grp_fu_2389_p10 = src_kernel_win_0_va_21_fu_260;

assign grp_fu_2396_p0 = OP2_V_0_0_1_cast_reg_2700;

assign grp_fu_2396_p1 = grp_fu_2396_p10;

assign grp_fu_2396_p10 = src_kernel_win_1_va_21_fu_284;

assign grp_fu_2403_p0 = OP2_V_0_0_1_cast_reg_2700;

assign grp_fu_2403_p1 = grp_fu_2403_p10;

assign grp_fu_2403_p10 = src_kernel_win_2_va_21_fu_308;

assign grp_fu_2410_p0 = OP2_V_0_0_2_cast_reg_2707;

assign grp_fu_2410_p1 = grp_fu_2410_p10;

assign grp_fu_2410_p10 = src_kernel_win_0_va_25_reg_2914;

assign grp_fu_2418_p0 = OP2_V_0_0_2_cast_reg_2707;

assign grp_fu_2418_p1 = grp_fu_2418_p10;

assign grp_fu_2418_p10 = src_kernel_win_1_va_25_reg_2937;

assign grp_fu_2426_p0 = OP2_V_0_0_2_cast_reg_2707;

assign grp_fu_2426_p1 = grp_fu_2426_p10;

assign grp_fu_2426_p10 = src_kernel_win_2_va_28_reg_2960;

assign i_V_fu_695_p2 = (t_V_reg_633 + 11'd1);

assign icmp2_fu_1003_p2 = ((tmp_134_fu_993_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_fu_723_p2 = ((tmp_fu_713_p4 != 10'd0) ? 1'b1 : 1'b0);

assign isneg_1_fu_2242_p3 = p_Val2_29_fu_2236_p2[32'd11];

assign isneg_2_fu_2322_p3 = p_Val2_s_fu_2316_p2[32'd11];

assign isneg_fu_2162_p3 = p_Val2_27_fu_2156_p2[32'd11];

assign j_V_fu_987_p2 = (t_V_3_reg_644 + 11'd1);

assign k_buf_0_val_3_address0 = tmp_48_fu_1108_p1;

assign k_buf_0_val_4_address0 = tmp_48_fu_1108_p1;

assign k_buf_0_val_5_address0 = tmp_48_fu_1108_p1;

assign k_buf_1_val_3_address0 = tmp_48_fu_1108_p1;

assign k_buf_1_val_4_address0 = tmp_48_fu_1108_p1;

assign k_buf_1_val_5_address0 = tmp_48_fu_1108_p1;

assign k_buf_2_val_3_address0 = tmp_48_fu_1108_p1;

assign k_buf_2_val_4_address0 = tmp_48_fu_1108_p1;

assign k_buf_2_val_5_address0 = tmp_48_fu_1108_p1;

assign not_i_i_i1_fu_2355_p2 = ((tmp_93_fu_2339_p4 != 4'd0) ? 1'b1 : 1'b0);

assign not_i_i_i5_fu_2275_p2 = ((tmp_85_fu_2259_p4 != 4'd0) ? 1'b1 : 1'b0);

assign not_i_i_i_fu_2195_p2 = ((tmp_72_fu_2179_p4 != 4'd0) ? 1'b1 : 1'b0);

assign or_cond_i425_i_fu_777_p2 = (tmp_40_fu_771_p2 & rev_fu_765_p2);

assign or_cond_i_fu_1100_p2 = (icmp_reg_2760 & icmp2_fu_1003_p2);

assign or_cond_i_i_fu_1035_p2 = (tmp_45_fu_1029_p2 & rev2_fu_1023_p2);

assign overflow_1_fu_2281_p2 = (tmp_i_i4_fu_2269_p2 & not_i_i_i5_fu_2275_p2);

assign overflow_2_fu_2361_p2 = (tmp_i_i1_fu_2349_p2 & not_i_i_i1_fu_2355_p2);

assign overflow_fu_2201_p2 = (tmp_i_i_fu_2189_p2 & not_i_i_i_fu_2195_p2);

assign p_Val2_27_fu_2156_p2 = ($signed(tmp2_fu_2149_p2) + $signed(tmp3_cast_fu_2153_p1));

assign p_Val2_29_fu_2236_p2 = ($signed(tmp10_fu_2229_p2) + $signed(tmp11_cast_fu_2233_p1));

assign p_Val2_31_fu_2334_p2 = (tmp21_reg_3050 + tmp22_fu_2330_p2);

assign p_Val2_33_fu_2221_p3 = ((tmp_i_i_104_fu_2215_p2[0:0] === 1'b1) ? p_mux_i_i_cast_fu_2207_p3 : p_Val2_7_fu_2174_p2);

assign p_Val2_34_fu_2301_p3 = ((tmp_i_i8_fu_2295_p2[0:0] === 1'b1) ? p_mux_i_i7_cast_fu_2287_p3 : p_Val2_8_fu_2254_p2);

assign p_Val2_35_fu_2381_p3 = ((tmp_i_i1_105_fu_2375_p2[0:0] === 1'b1) ? p_mux_i_i16_cast_fu_2367_p3 : p_Val2_31_fu_2334_p2);

assign p_Val2_7_fu_2174_p2 = (tmp5_reg_2990 + tmp6_fu_2170_p2);

assign p_Val2_89_0_0_2_ca_fu_1744_p1 = grp_fu_2410_p3;

assign p_Val2_89_0_1_1_fu_1767_p2 = ($signed(tmp_472_0_1_cast_cas_fu_1756_p1) + $signed(p_Val2_89_0_0_2_ca_fu_1744_p1));

assign p_Val2_89_1_0_2_ca_fu_1859_p1 = grp_fu_2418_p3;

assign p_Val2_89_1_1_1_fu_1882_p2 = ($signed(tmp_472_1_1_cast_cas_fu_1871_p1) + $signed(p_Val2_89_1_0_2_ca_fu_1859_p1));

assign p_Val2_89_2_0_2_ca_fu_1974_p1 = grp_fu_2426_p3;

assign p_Val2_89_2_1_1_fu_1997_p2 = ($signed(tmp_472_2_1_cast_cas_fu_1986_p1) + $signed(p_Val2_89_2_0_2_ca_fu_1974_p1));

assign p_Val2_8_fu_2254_p2 = (tmp13_reg_3020 + tmp14_fu_2250_p2);

assign p_Val2_s_fu_2316_p2 = ($signed(tmp18_fu_2309_p2) + $signed(tmp19_cast_fu_2313_p1));

assign p_assign_1_fu_1049_p2 = (12'd1 - t_V_3_cast_fu_977_p1);

assign p_assign_2_fu_1069_p2 = ($signed(12'd3838) - $signed(p_p2_i_i_fu_1055_p3));

assign p_assign_6_0_1_fu_815_p2 = ($signed(12'd4094) + $signed(t_V_cast_fu_685_p1));

assign p_assign_6_0_2_fu_841_p2 = ($signed(12'd4093) + $signed(t_V_cast_fu_685_p1));

assign p_assign_7_fu_791_p2 = (12'd1 - t_V_cast_fu_685_p1);

assign p_dst_data_stream_0_V_din = p_Val2_33_reg_3060;

assign p_dst_data_stream_1_V_din = p_Val2_34_reg_3065;

assign p_dst_data_stream_2_V_din = p_Val2_35_reg_3070;

assign p_mux_i_i16_cast_fu_2367_p3 = ((tmp_i_i1_fu_2349_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_mux_i_i7_cast_fu_2287_p3 = ((tmp_i_i4_fu_2269_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_mux_i_i_cast_fu_2207_p3 = ((tmp_i_i_fu_2189_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_p2_i426_i_fu_797_p3 = ((tmp_122_fu_783_p3[0:0] === 1'b1) ? p_assign_7_fu_791_p2 : tmp_38_fu_751_p2);

assign p_p2_i_i_fu_1055_p3 = ((tmp_136_fu_1041_p3[0:0] === 1'b1) ? p_assign_1_fu_1049_p2 : ImagLoc_x_fu_1009_p2);

assign p_p2_i_i_p_assign_2_fu_1075_p3 = ((tmp_47_fu_1063_p2[0:0] === 1'b1) ? p_p2_i_i_fu_1055_p3 : p_assign_2_fu_1069_p2);

assign r_V_8_0_1_2_fu_1776_p0 = OP2_V_0_1_2_cast_reg_2721;

assign r_V_8_0_1_2_fu_1776_p1 = r_V_8_0_1_2_fu_1776_p10;

assign r_V_8_0_1_2_fu_1776_p10 = src_kernel_win_0_va_24_reg_2908;

assign r_V_8_0_1_2_fu_1776_p2 = (r_V_8_0_1_2_fu_1776_p0 * r_V_8_0_1_2_fu_1776_p1);

assign r_V_8_0_1_fu_1751_p0 = OP2_V_0_1_cast_reg_2714;

assign r_V_8_0_1_fu_1751_p1 = r_V_8_0_1_fu_1751_p10;

assign r_V_8_0_1_fu_1751_p10 = src_kernel_win_0_va_20_fu_256;

assign r_V_8_0_1_fu_1751_p2 = ($signed(r_V_8_0_1_fu_1751_p0) * $signed({{1'b0}, {r_V_8_0_1_fu_1751_p1}}));

assign r_V_8_0_2_1_fu_1808_p0 = OP2_V_0_2_1_cast_reg_2735;

assign r_V_8_0_2_1_fu_1808_p1 = r_V_8_0_2_1_fu_1808_p10;

assign r_V_8_0_2_1_fu_1808_p10 = src_kernel_win_0_va_fu_244;

assign r_V_8_0_2_1_fu_1808_p2 = (r_V_8_0_2_1_fu_1808_p0 * r_V_8_0_2_1_fu_1808_p1);

assign r_V_8_0_2_fu_1795_p0 = OP2_V_0_2_cast_reg_2728;

assign r_V_8_0_2_fu_1795_p1 = r_V_8_0_2_fu_1795_p10;

assign r_V_8_0_2_fu_1795_p10 = src_kernel_win_0_va_18_fu_248;

assign r_V_8_0_2_fu_1795_p2 = ($signed(r_V_8_0_2_fu_1795_p0) * $signed({{1'b0}, {r_V_8_0_2_fu_1795_p1}}));

assign r_V_8_1_1_2_fu_1891_p0 = OP2_V_0_1_2_cast_reg_2721;

assign r_V_8_1_1_2_fu_1891_p1 = r_V_8_1_1_2_fu_1891_p10;

assign r_V_8_1_1_2_fu_1891_p10 = src_kernel_win_1_va_24_reg_2931;

assign r_V_8_1_1_2_fu_1891_p2 = (r_V_8_1_1_2_fu_1891_p0 * r_V_8_1_1_2_fu_1891_p1);

assign r_V_8_1_1_fu_1866_p0 = OP2_V_0_1_cast_reg_2714;

assign r_V_8_1_1_fu_1866_p1 = r_V_8_1_1_fu_1866_p10;

assign r_V_8_1_1_fu_1866_p10 = src_kernel_win_1_va_20_fu_280;

assign r_V_8_1_1_fu_1866_p2 = ($signed(r_V_8_1_1_fu_1866_p0) * $signed({{1'b0}, {r_V_8_1_1_fu_1866_p1}}));

assign r_V_8_1_2_1_fu_1923_p0 = OP2_V_0_2_1_cast_reg_2735;

assign r_V_8_1_2_1_fu_1923_p1 = r_V_8_1_2_1_fu_1923_p10;

assign r_V_8_1_2_1_fu_1923_p10 = src_kernel_win_1_va_fu_268;

assign r_V_8_1_2_1_fu_1923_p2 = (r_V_8_1_2_1_fu_1923_p0 * r_V_8_1_2_1_fu_1923_p1);

assign r_V_8_1_2_fu_1910_p0 = OP2_V_0_2_cast_reg_2728;

assign r_V_8_1_2_fu_1910_p1 = r_V_8_1_2_fu_1910_p10;

assign r_V_8_1_2_fu_1910_p10 = src_kernel_win_1_va_18_fu_272;

assign r_V_8_1_2_fu_1910_p2 = ($signed(r_V_8_1_2_fu_1910_p0) * $signed({{1'b0}, {r_V_8_1_2_fu_1910_p1}}));

assign r_V_8_1_fu_1505_p2 = (9'd0 - OP1_V_1_0_cast_fu_1501_p1);

assign r_V_8_2_1_2_fu_2006_p0 = OP2_V_0_1_2_cast_reg_2721;

assign r_V_8_2_1_2_fu_2006_p1 = r_V_8_2_1_2_fu_2006_p10;

assign r_V_8_2_1_2_fu_2006_p10 = src_kernel_win_2_va_27_reg_2954;

assign r_V_8_2_1_2_fu_2006_p2 = (r_V_8_2_1_2_fu_2006_p0 * r_V_8_2_1_2_fu_2006_p1);

assign r_V_8_2_1_fu_1981_p0 = OP2_V_0_1_cast_reg_2714;

assign r_V_8_2_1_fu_1981_p1 = r_V_8_2_1_fu_1981_p10;

assign r_V_8_2_1_fu_1981_p10 = src_kernel_win_2_va_20_fu_304;

assign r_V_8_2_1_fu_1981_p2 = ($signed(r_V_8_2_1_fu_1981_p0) * $signed({{1'b0}, {r_V_8_2_1_fu_1981_p1}}));

assign r_V_8_2_2_1_fu_2038_p0 = OP2_V_0_2_1_cast_reg_2735;

assign r_V_8_2_2_1_fu_2038_p1 = r_V_8_2_2_1_fu_2038_p10;

assign r_V_8_2_2_1_fu_2038_p10 = src_kernel_win_2_va_fu_292;

assign r_V_8_2_2_1_fu_2038_p2 = (r_V_8_2_2_1_fu_2038_p0 * r_V_8_2_2_1_fu_2038_p1);

assign r_V_8_2_2_fu_2025_p0 = OP2_V_0_2_cast_reg_2728;

assign r_V_8_2_2_fu_2025_p1 = r_V_8_2_2_fu_2025_p10;

assign r_V_8_2_2_fu_2025_p10 = src_kernel_win_2_va_18_fu_296;

assign r_V_8_2_2_fu_2025_p2 = ($signed(r_V_8_2_2_fu_2025_p0) * $signed({{1'b0}, {r_V_8_2_2_fu_2025_p1}}));

assign r_V_8_2_fu_1679_p2 = (9'd0 - OP1_V_2_0_cast_fu_1675_p1);

assign r_V_8_fu_1313_p2 = (9'd0 - OP1_V_0_0_cast_fu_1309_p1);

assign rev2_fu_1023_p2 = (tmp_135_fu_1015_p3 ^ 1'd1);

assign rev_fu_765_p2 = (tmp_121_fu_757_p3 ^ 1'd1);

assign row_assign_10_0_0_t_fu_895_p2 = (tmp_56_fu_887_p3 ^ 2'd3);

assign row_assign_10_0_1_t_fu_933_p2 = (tmp_60_fu_925_p3 ^ 2'd3);

assign row_assign_10_0_2_t_fu_971_p2 = (tmp_64_fu_963_p3 ^ 2'd3);

assign src_kernel_win_0_va_23_fu_1260_p3 = ((tmp_37_reg_2773[0:0] === 1'b1) ? tmp_57_fu_1249_p5 : col_buf_0_val_0_0_fu_1165_p3);

assign src_kernel_win_0_va_24_fu_1278_p3 = ((tmp_37_reg_2773[0:0] === 1'b1) ? tmp_61_fu_1267_p5 : col_buf_0_val_1_0_fu_1184_p3);

assign src_kernel_win_0_va_25_fu_1296_p3 = ((tmp_37_reg_2773[0:0] === 1'b1) ? tmp_65_fu_1285_p5 : col_buf_0_val_2_0_fu_1203_p3);

assign src_kernel_win_1_va_23_fu_1452_p3 = ((tmp_37_reg_2773[0:0] === 1'b1) ? tmp_77_fu_1441_p5 : col_buf_1_val_0_0_fu_1357_p3);

assign src_kernel_win_1_va_24_fu_1470_p3 = ((tmp_37_reg_2773[0:0] === 1'b1) ? tmp_78_fu_1459_p5 : col_buf_1_val_1_0_fu_1376_p3);

assign src_kernel_win_1_va_25_fu_1488_p3 = ((tmp_37_reg_2773[0:0] === 1'b1) ? tmp_79_fu_1477_p5 : col_buf_1_val_2_0_fu_1395_p3);

assign src_kernel_win_2_va_26_fu_1626_p3 = ((tmp_37_reg_2773[0:0] === 1'b1) ? tmp_89_fu_1615_p5 : col_buf_2_val_0_0_fu_1540_p3);

assign src_kernel_win_2_va_27_fu_1644_p3 = ((tmp_37_reg_2773[0:0] === 1'b1) ? tmp_90_fu_1633_p5 : col_buf_2_val_1_0_fu_1559_p3);

assign src_kernel_win_2_va_28_fu_1662_p3 = ((tmp_37_reg_2773[0:0] === 1'b1) ? tmp_91_fu_1651_p5 : col_buf_2_val_2_0_fu_1578_p3);

assign t_V_3_cast_fu_977_p1 = t_V_3_reg_644;

assign t_V_cast_fu_685_p1 = t_V_reg_633;

assign tmp10_fu_2229_p2 = (r_V_8_1_1_2_reg_3005 + p_Val2_89_1_1_1_reg_3000);

assign tmp11_cast_fu_2233_p1 = $signed(tmp11_reg_3015);

assign tmp11_fu_1945_p2 = ($signed(r_V_8_1_2_1_fu_1923_p2) + $signed(tmp12_cast_fu_1941_p1));

assign tmp12_cast_fu_1941_p1 = $signed(tmp12_fu_1935_p2);

assign tmp12_fu_1935_p2 = (tmp_472_1_2_2_cast_c_fu_1932_p1 + r_V_8_1_2_fu_1910_p2);

assign tmp13_fu_1951_p2 = (tmp_83_fu_1900_p2 + tmp_151_fu_1896_p1);

assign tmp14_fu_2250_p2 = (tmp_152_reg_3010 + tmp15_reg_3025);

assign tmp15_fu_1957_p2 = (src_kernel_win_1_va_23_reg_2924 + tmp_153_fu_1928_p1);

assign tmp18_fu_2309_p2 = (r_V_8_2_1_2_reg_3035 + p_Val2_89_2_1_1_reg_3030);

assign tmp19_cast_fu_2313_p1 = $signed(tmp19_reg_3045);

assign tmp19_fu_2060_p2 = ($signed(r_V_8_2_2_1_fu_2038_p2) + $signed(tmp20_cast_fu_2056_p1));

assign tmp20_cast_fu_2056_p1 = $signed(tmp20_fu_2050_p2);

assign tmp20_fu_2050_p2 = (tmp_472_2_2_2_cast_c_fu_2047_p1 + r_V_8_2_2_fu_2025_p2);

assign tmp21_fu_2066_p2 = (tmp_92_fu_2015_p2 + tmp_160_fu_2011_p1);

assign tmp22_fu_2330_p2 = (tmp_161_reg_3040 + tmp23_reg_3055);

assign tmp23_fu_2072_p2 = (src_kernel_win_2_va_26_reg_2947 + tmp_162_fu_2043_p1);

assign tmp2_fu_2149_p2 = (r_V_8_0_1_2_reg_2975 + p_Val2_89_0_1_1_reg_2970);

assign tmp3_cast_fu_2153_p1 = $signed(tmp3_reg_2985);

assign tmp3_fu_1830_p2 = ($signed(r_V_8_0_2_1_fu_1808_p2) + $signed(tmp4_cast_fu_1826_p1));

assign tmp4_cast_fu_1826_p1 = $signed(tmp4_fu_1820_p2);

assign tmp4_fu_1820_p2 = (tmp_472_0_2_2_cast_c_fu_1817_p1 + r_V_8_0_2_fu_1795_p2);

assign tmp5_fu_1836_p2 = (tmp_69_fu_1785_p2 + tmp_142_fu_1781_p1);

assign tmp6_fu_2170_p2 = (tmp_143_reg_2980 + tmp7_reg_2995);

assign tmp7_fu_1842_p2 = (src_kernel_win_0_va_23_reg_2901 + tmp_144_fu_1813_p1);

assign tmp_120_fu_747_p1 = t_V_reg_633[1:0];

assign tmp_121_fu_757_p3 = tmp_38_fu_751_p2[32'd11];

assign tmp_122_fu_783_p3 = tmp_38_fu_751_p2[32'd11];

assign tmp_123_fu_811_p1 = p_p2_i426_i_fu_797_p3[1:0];

assign tmp_124_fu_821_p3 = p_assign_6_0_1_fu_815_p2[32'd11];

assign tmp_125_fu_829_p3 = p_assign_6_0_1_fu_815_p2[32'd11];

assign tmp_126_fu_837_p1 = t_V_reg_633[1:0];

assign tmp_127_fu_847_p3 = p_assign_6_0_2_fu_841_p2[32'd11];

assign tmp_128_fu_855_p3 = p_assign_6_0_2_fu_841_p2[32'd11];

assign tmp_129_fu_863_p1 = t_V_reg_633[1:0];

assign tmp_130_fu_907_p2 = ($signed(2'd2) - $signed(tmp_126_fu_837_p1));

assign tmp_131_fu_913_p1 = p_assign_6_0_1_fu_815_p2[1:0];

assign tmp_132_fu_945_p2 = (tmp_129_fu_863_p1 ^ 2'd3);

assign tmp_133_fu_951_p1 = p_assign_6_0_2_fu_841_p2[1:0];

assign tmp_134_fu_993_p4 = {{t_V_3_reg_644[10:1]}};

assign tmp_135_fu_1015_p3 = ImagLoc_x_fu_1009_p2[32'd11];

assign tmp_136_fu_1041_p3 = ImagLoc_x_fu_1009_p2[32'd11];

assign tmp_137_fu_1091_p1 = x_fu_1083_p3[1:0];

assign tmp_140_fu_1760_p1 = r_V_8_0_1_fu_1751_p2[7:0];

assign tmp_141_fu_1764_p1 = grp_fu_2410_p3[7:0];

assign tmp_142_fu_1781_p1 = r_V_8_0_1_2_fu_1776_p2[7:0];

assign tmp_143_fu_1800_p1 = r_V_8_0_2_fu_1795_p2[7:0];

assign tmp_144_fu_1813_p1 = r_V_8_0_2_1_fu_1808_p2[7:0];

assign tmp_149_fu_1875_p1 = r_V_8_1_1_fu_1866_p2[7:0];

assign tmp_150_fu_1879_p1 = grp_fu_2418_p3[7:0];

assign tmp_151_fu_1896_p1 = r_V_8_1_1_2_fu_1891_p2[7:0];

assign tmp_152_fu_1915_p1 = r_V_8_1_2_fu_1910_p2[7:0];

assign tmp_153_fu_1928_p1 = r_V_8_1_2_1_fu_1923_p2[7:0];

assign tmp_158_fu_1990_p1 = r_V_8_2_1_fu_1981_p2[7:0];

assign tmp_159_fu_1994_p1 = grp_fu_2426_p3[7:0];

assign tmp_160_fu_2011_p1 = r_V_8_2_1_2_fu_2006_p2[7:0];

assign tmp_161_fu_2030_p1 = r_V_8_2_2_fu_2025_p2[7:0];

assign tmp_162_fu_2043_p1 = r_V_8_2_2_1_fu_2038_p2[7:0];

assign tmp_32_fu_655_p2 = (tmp_s_reg_622 + 2'd1);

assign tmp_33_fu_661_p2 = ((tmp_s_reg_622 == 2'd2) ? 1'b1 : 1'b0);

assign tmp_34_fu_701_p2 = ((t_V_reg_633 < 11'd1080) ? 1'b1 : 1'b0);

assign tmp_36_fu_729_p2 = ((t_V_reg_633 == 11'd1) ? 1'b1 : 1'b0);

assign tmp_37_fu_741_p2 = ((t_V_reg_633 > 11'd1080) ? 1'b1 : 1'b0);

assign tmp_384_0_0_not_fu_707_p2 = (tmp_34_fu_701_p2 ^ 1'd1);

assign tmp_38_fu_751_p2 = ($signed(12'd4095) + $signed(t_V_cast_fu_685_p1));

assign tmp_40_fu_771_p2 = (($signed(tmp_38_fu_751_p2) < $signed(12'd1080)) ? 1'b1 : 1'b0);

assign tmp_428_0_1_fu_735_p2 = ((t_V_reg_633 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_42_fu_805_p2 = (($signed(p_p2_i426_i_fu_797_p3) < $signed(12'd1080)) ? 1'b1 : 1'b0);

assign tmp_45_fu_1029_p2 = (($signed(ImagLoc_x_fu_1009_p2) < $signed(12'd1920)) ? 1'b1 : 1'b0);

assign tmp_472_0_1_cast_cas_fu_1756_p1 = r_V_8_0_1_fu_1751_p2;

assign tmp_472_0_2_2_cast_c_fu_1817_p1 = src_kernel_win_0_va_23_reg_2901;

assign tmp_472_1_1_cast_cas_fu_1871_p1 = r_V_8_1_1_fu_1866_p2;

assign tmp_472_1_2_2_cast_c_fu_1932_p1 = src_kernel_win_1_va_23_reg_2924;

assign tmp_472_2_1_cast_cas_fu_1986_p1 = r_V_8_2_1_fu_1981_p2;

assign tmp_472_2_2_2_cast_c_fu_2047_p1 = src_kernel_win_2_va_26_reg_2947;

assign tmp_47_fu_1063_p2 = (($signed(p_p2_i_i_fu_1055_p3) < $signed(12'd1920)) ? 1'b1 : 1'b0);

assign tmp_48_fu_1108_p1 = $unsigned(x_cast_fu_1105_p1);

assign tmp_53_fu_867_p2 = ($signed(2'd2) - $signed(tmp_123_fu_811_p1));

assign tmp_54_fu_873_p3 = ((tmp_42_fu_805_p2[0:0] === 1'b1) ? tmp_123_fu_811_p1 : tmp_53_fu_867_p2);

assign tmp_55_fu_881_p2 = ($signed(2'd3) + $signed(tmp_120_fu_747_p1));

assign tmp_56_fu_887_p3 = ((or_cond_i425_i_fu_777_p2[0:0] === 1'b1) ? tmp_55_fu_881_p2 : tmp_54_fu_873_p3);

assign tmp_58_fu_901_p2 = (tmp_120_fu_747_p1 ^ 2'd2);

assign tmp_60_fu_925_p3 = ((tmp_124_fu_821_p3[0:0] === 1'b1) ? tmp_82_fu_917_p3 : tmp_58_fu_901_p2);

assign tmp_62_fu_939_p2 = (2'd1 + tmp_120_fu_747_p1);

assign tmp_64_fu_963_p3 = ((tmp_127_fu_847_p3[0:0] === 1'b1) ? tmp_84_fu_955_p3 : tmp_62_fu_939_p2);

assign tmp_69_fu_1785_p2 = (tmp_141_fu_1764_p1 + tmp_140_fu_1760_p1);

assign tmp_72_fu_2179_p4 = {{p_Val2_27_fu_2156_p2[11:8]}};

assign tmp_82_fu_917_p3 = ((tmp_125_fu_829_p3[0:0] === 1'b1) ? tmp_130_fu_907_p2 : tmp_131_fu_913_p1);

assign tmp_83_fu_1900_p2 = (tmp_150_fu_1879_p1 + tmp_149_fu_1875_p1);

assign tmp_84_fu_955_p3 = ((tmp_128_fu_855_p3[0:0] === 1'b1) ? tmp_132_fu_945_p2 : tmp_133_fu_951_p1);

assign tmp_85_fu_2259_p4 = {{p_Val2_29_fu_2236_p2[11:8]}};

assign tmp_92_fu_2015_p2 = (tmp_159_fu_1994_p1 + tmp_158_fu_1990_p1);

assign tmp_93_fu_2339_p4 = {{p_Val2_s_fu_2316_p2[11:8]}};

assign tmp_fu_713_p4 = {{t_V_reg_633[10:1]}};

assign tmp_i_i1_105_fu_2375_p2 = (overflow_2_fu_2361_p2 | isneg_2_fu_2322_p3);

assign tmp_i_i1_fu_2349_p2 = (isneg_2_fu_2322_p3 ^ 1'd1);

assign tmp_i_i4_fu_2269_p2 = (isneg_1_fu_2242_p3 ^ 1'd1);

assign tmp_i_i8_fu_2295_p2 = (overflow_1_fu_2281_p2 | isneg_1_fu_2242_p3);

assign tmp_i_i_104_fu_2215_p2 = (overflow_fu_2201_p2 | isneg_fu_2162_p3);

assign tmp_i_i_fu_2189_p2 = (isneg_fu_2162_p3 ^ 1'd1);

assign x_cast_fu_1105_p1 = x_reg_2820;

assign x_fu_1083_p3 = ((or_cond_i_i_fu_1035_p2[0:0] === 1'b1) ? ImagLoc_x_fu_1009_p2 : p_p2_i_i_p_assign_2_fu_1075_p3);

always @ (posedge ap_clk) begin
    OP2_V_0_1_2_cast_reg_2721[11:4] <= 8'b00000000;
    OP2_V_0_2_1_cast_reg_2735[10:3] <= 8'b00000000;
end

endmodule //Filter2D
