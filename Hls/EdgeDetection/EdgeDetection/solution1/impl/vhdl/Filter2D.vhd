-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC;
    p_kernel_val_0_V_1_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_0_V_2_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_1_V_0_read : IN STD_LOGIC_VECTOR (2 downto 0);
    p_kernel_val_1_V_2_read : IN STD_LOGIC_VECTOR (3 downto 0);
    p_kernel_val_2_V_0_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_2_V_1_read : IN STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of Filter2D is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv10_386 : STD_LOGIC_VECTOR (9 downto 0) := "1110000110";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_384 : STD_LOGIC_VECTOR (9 downto 0) := "1110000100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv11_384 : STD_LOGIC_VECTOR (10 downto 0) := "01110000100";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv11_7FE : STD_LOGIC_VECTOR (10 downto 0) := "11111111110";
    constant ap_const_lv11_7FD : STD_LOGIC_VECTOR (10 downto 0) := "11111111101";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv11_642 : STD_LOGIC_VECTOR (10 downto 0) := "11001000010";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_640 : STD_LOGIC_VECTOR (11 downto 0) := "011001000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv13_C7E : STD_LOGIC_VECTOR (12 downto 0) := "0110001111110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond388_i_reg_1432 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond388_i_reg_1432_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1441 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1441_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1397 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1388 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal or_cond_i_reg_1462 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1462_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_2_reg_333 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_0_1_cast_fu_344_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_0_1_cast_reg_1349 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_0_2_cast_fu_348_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_0_2_cast_reg_1354 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_1_cast_fu_352_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_1_cast_reg_1359 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_1_2_cast_fu_356_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_1_2_cast_reg_1364 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_2_cast_fu_360_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_2_cast_reg_1369 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_2_1_cast_fu_364_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_2_1_cast_reg_1374 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond389_i_fu_372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_378_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_V_reg_1383 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_fu_384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_375_0_not_fu_390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_375_0_not_reg_1392 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1402 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_419_1_fu_418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_419_1_reg_1406 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1410 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_assign_10_0_t_fu_578_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_0_t_reg_1417 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_1_t_fu_616_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_1_t_reg_1422 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_2_t_fu_654_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_2_t_reg_1427 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond388_i_fu_664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op161_read_state5 : BOOLEAN;
    signal ap_predicate_op172_read_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond388_i_reg_1432_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_670_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal or_cond_i_i_fu_722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_800_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal x_reg_1445 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_69_fu_808_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_69_reg_1450 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_69_reg_1450_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge_fu_812_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1455 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1455_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_fu_817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1462_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1462_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1462_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_3_addr_reg_1466 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_addr_reg_1472 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_addr_reg_1478 : STD_LOGIC_VECTOR (10 downto 0);
    signal src_kernel_win_0_va_23_fu_959_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_23_reg_1484 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_24_fu_977_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_24_reg_1491 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_25_fu_995_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_25_reg_1497 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1258_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_89_0_1_reg_1502 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_89_1_1_fu_1074_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_89_1_1_reg_1507 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_8_1_2_fu_1083_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_8_1_2_reg_1512 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_75_fu_1107_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_75_reg_1517 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp4_fu_1137_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp4_reg_1522 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp6_fu_1143_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp6_reg_1527 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp8_fu_1149_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp8_reg_1532 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_fu_1250_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_reg_1537 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter2_state5 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_322 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_22_fu_825_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal src_kernel_win_0_va_fu_160 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_18_fu_164 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_19_fu_168 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_20_fu_172 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_21_fu_176 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_22_fu_180 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_184 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_867_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_14_fu_188 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_15_fu_192 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_16_fu_196 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_886_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_17_fu_200 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_18_fu_204 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_905_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_51_fu_396_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal t_V_cast_fu_368_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_52_fu_430_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_fu_434_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_53_fu_446_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_fu_472_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_fu_480_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_p2_i425_i_fu_486_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_55_fu_494_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_assign_6_1_fu_510_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_assign_6_2_fu_536_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_13_fu_498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_8_fu_504_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i424_i_fu_466_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_cast_fu_440_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_p2_i425_i_p_assign_8_fu_562_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_1_fu_570_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_58_fu_532_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_57_fu_524_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_590_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_63_fu_596_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_56_fu_516_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_600_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_27_fu_584_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_29_fu_608_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_61_fu_558_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_60_fu_550_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_fu_628_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_65_fu_634_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_59_fu_542_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_638_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_31_fu_622_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_33_fu_646_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_66_fu_676_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal t_V_2_cast_fu_660_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ImagLoc_x_fu_692_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_67_fu_702_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev2_fu_710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_fu_728_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_1_fu_736_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i_i_fu_742_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i_i_cast_fu_754_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ImagLoc_x_cast_fu_698_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_assign_2_fu_764_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_assign_3_fu_770_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_18_not_fu_782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_758_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_794_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_cast1_fu_750_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sel_tmp_cast_fu_778_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp2_fu_686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_assign_cast_fu_822_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_assign_3_t_fu_850_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_fu_855_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_fu_874_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_fu_893_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_26_fu_948_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_30_fu_966_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_fu_984_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal OP1_V_0_cast_fu_1008_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_8_fu_1012_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1265_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_8_1_fu_1058_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_V_8_1_fu_1058_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_8_1_fu_1058_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_463_1_cast_cast_fu_1063_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_89_0_2_cast_fu_1051_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_8_1_2_fu_1083_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_8_1_2_fu_1083_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_73_fu_1071_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_72_fu_1067_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_8_2_fu_1102_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_V_8_2_fu_1102_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_8_2_fu_1102_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_8_2_1_fu_1115_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_V_8_2_1_fu_1115_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_8_2_1_fu_1115_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_463_2_2_cast_cas_fu_1124_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp5_fu_1127_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp5_cast_fu_1133_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_38_fu_1092_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_74_fu_1088_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_76_fu_1120_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp3_fu_1178_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp4_cast_fu_1182_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_4_fu_1185_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp7_fu_1199_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isneg_fu_1191_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_1208_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal not_i_i_i_fu_1224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_fu_1218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_1230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_91_fu_1244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_i_i_cast_fu_1236_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_2_fu_1203_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1258_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1258_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1265_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1265_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1258_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1265_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_8_1_2_fu_1083_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_8_1_fu_1058_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_8_2_1_fu_1115_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_8_2_fu_1102_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_condition_365 : BOOLEAN;
    signal ap_condition_359 : BOOLEAN;

    component image_filter_mux_hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component image_filter_mac_pcA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component image_filter_mac_qcK IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component Filter2D_1_k_buf_eOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Filter2D_1_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1600,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_addr_reg_1466,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => p_src_data_stream_V_dout);

    k_buf_0_val_4_U : component Filter2D_1_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1600,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_addr_reg_1472,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component Filter2D_1_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1600,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_addr_reg_1478,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    image_filter_mux_hbi_U52 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_184,
        din1 => right_border_buf_0_14_fu_188,
        din2 => ap_const_lv8_0,
        din3 => col_assign_3_t_fu_850_p2,
        dout => tmp_23_fu_855_p5);

    image_filter_mux_hbi_U53 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_16_fu_196,
        din1 => right_border_buf_0_17_fu_200,
        din2 => ap_const_lv8_0,
        din3 => col_assign_3_t_fu_850_p2,
        dout => tmp_24_fu_874_p5);

    image_filter_mux_hbi_U54 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_18_fu_204,
        din1 => right_border_buf_0_15_fu_192,
        din2 => ap_const_lv8_0,
        din3 => col_assign_3_t_fu_850_p2,
        dout => tmp_25_fu_893_p5);

    image_filter_mux_hbi_U55 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_867_p3,
        din1 => col_buf_0_val_1_0_fu_886_p3,
        din2 => col_buf_0_val_2_0_fu_905_p3,
        din3 => row_assign_10_0_t_reg_1417,
        dout => tmp_26_fu_948_p5);

    image_filter_mux_hbi_U56 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_867_p3,
        din1 => col_buf_0_val_1_0_fu_886_p3,
        din2 => col_buf_0_val_2_0_fu_905_p3,
        din3 => row_assign_10_1_t_reg_1422,
        dout => tmp_30_fu_966_p5);

    image_filter_mux_hbi_U57 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_867_p3,
        din1 => col_buf_0_val_1_0_fu_886_p3,
        din2 => col_buf_0_val_2_0_fu_905_p3,
        din3 => row_assign_10_2_t_reg_1427,
        dout => tmp_34_fu_984_p5);

    image_filter_mac_pcA_U58 : component image_filter_mac_pcA
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 8,
        din2_WIDTH => 9,
        dout_WIDTH => 11)
    port map (
        din0 => grp_fu_1258_p0,
        din1 => grp_fu_1258_p1,
        din2 => r_V_8_fu_1012_p2,
        dout => grp_fu_1258_p3);

    image_filter_mac_qcK_U59 : component image_filter_mac_qcK
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 8,
        din2_WIDTH => 11,
        dout_WIDTH => 11)
    port map (
        din0 => grp_fu_1265_p0,
        din1 => grp_fu_1265_p1,
        din2 => p_Val2_89_0_1_reg_1502,
        dout => grp_fu_1265_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((exitcond388_i_fu_664_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond389_i_fu_372_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter2_state5)) then 
                        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif (((exitcond389_i_fu_372_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_2_reg_333_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_fu_664_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_2_reg_333 <= j_V_fu_670_p2;
            elsif (((exitcond389_i_fu_372_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_2_reg_333 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    t_V_reg_322_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                t_V_reg_322 <= i_V_reg_1383;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_322 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                OP2_V_0_1_cast_reg_1349 <= OP2_V_0_1_cast_fu_344_p1;
                OP2_V_0_2_cast_reg_1354 <= OP2_V_0_2_cast_fu_348_p1;
                    OP2_V_1_2_cast_reg_1364(3 downto 0) <= OP2_V_1_2_cast_fu_356_p1(3 downto 0);
                OP2_V_1_cast_reg_1359 <= OP2_V_1_cast_fu_352_p1;
                    OP2_V_2_1_cast_reg_1374(2 downto 0) <= OP2_V_2_1_cast_fu_364_p1(2 downto 0);
                OP2_V_2_cast_reg_1369 <= OP2_V_2_cast_fu_360_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_fu_664_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_1455 <= brmerge_fu_812_p2;
                or_cond_i_i_reg_1441 <= or_cond_i_i_fu_722_p2;
                or_cond_i_reg_1462 <= or_cond_i_fu_817_p2;
                tmp_69_reg_1450 <= tmp_69_fu_808_p1;
                x_reg_1445 <= x_fu_800_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_1455_pp0_iter1_reg <= brmerge_reg_1455;
                exitcond388_i_reg_1432 <= exitcond388_i_fu_664_p2;
                exitcond388_i_reg_1432_pp0_iter1_reg <= exitcond388_i_reg_1432;
                or_cond_i_i_reg_1441_pp0_iter1_reg <= or_cond_i_i_reg_1441;
                or_cond_i_reg_1462_pp0_iter1_reg <= or_cond_i_reg_1462;
                tmp_69_reg_1450_pp0_iter1_reg <= tmp_69_reg_1450;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exitcond388_i_reg_1432_pp0_iter2_reg <= exitcond388_i_reg_1432_pp0_iter1_reg;
                or_cond_i_reg_1462_pp0_iter2_reg <= or_cond_i_reg_1462_pp0_iter1_reg;
                or_cond_i_reg_1462_pp0_iter3_reg <= or_cond_i_reg_1462_pp0_iter2_reg;
                or_cond_i_reg_1462_pp0_iter4_reg <= or_cond_i_reg_1462_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1383 <= i_V_fu_378_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond389_i_fu_372_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_reg_1397 <= icmp_fu_406_p2;
                row_assign_10_0_t_reg_1417 <= row_assign_10_0_t_fu_578_p2;
                row_assign_10_1_t_reg_1422 <= row_assign_10_1_t_fu_616_p2;
                row_assign_10_2_t_reg_1427 <= row_assign_10_2_t_fu_654_p2;
                tmp_2_reg_1402 <= tmp_2_fu_412_p2;
                tmp_375_0_not_reg_1392 <= tmp_375_0_not_fu_390_p2;
                tmp_3_reg_1410 <= tmp_3_fu_424_p2;
                tmp_419_1_reg_1406 <= tmp_419_1_fu_418_p2;
                tmp_s_reg_1388 <= tmp_s_fu_384_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_reg_1432 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                k_buf_0_val_3_addr_reg_1466 <= tmp_22_fu_825_p1(11 - 1 downto 0);
                k_buf_0_val_4_addr_reg_1472 <= tmp_22_fu_825_p1(11 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1478 <= tmp_22_fu_825_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1462_pp0_iter1_reg = ap_const_lv1_1) and (exitcond388_i_reg_1432_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_89_0_1_reg_1502 <= grp_fu_1258_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1462_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_89_1_1_reg_1507 <= p_Val2_89_1_1_fu_1074_p2;
                r_V_8_1_2_reg_1512 <= r_V_8_1_2_fu_1083_p2;
                tmp4_reg_1522 <= tmp4_fu_1137_p2;
                tmp6_reg_1527 <= tmp6_fu_1143_p2;
                tmp8_reg_1532 <= tmp8_fu_1149_p2;
                tmp_75_reg_1517 <= tmp_75_fu_1107_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1462_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_s_reg_1537 <= p_Val2_s_fu_1250_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op172_read_state5 = ap_const_boolean_1))) then
                right_border_buf_0_14_fu_188 <= right_border_buf_0_s_fu_184;
                right_border_buf_0_15_fu_192 <= right_border_buf_0_18_fu_204;
                right_border_buf_0_16_fu_196 <= col_buf_0_val_1_0_fu_886_p3;
                right_border_buf_0_17_fu_200 <= right_border_buf_0_16_fu_196;
                right_border_buf_0_18_fu_204 <= col_buf_0_val_2_0_fu_905_p3;
                right_border_buf_0_s_fu_184 <= col_buf_0_val_0_0_fu_867_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_reg_1432_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_18_fu_164 <= src_kernel_win_0_va_fu_160;
                src_kernel_win_0_va_19_fu_168 <= src_kernel_win_0_va_24_reg_1491;
                src_kernel_win_0_va_20_fu_172 <= src_kernel_win_0_va_19_fu_168;
                src_kernel_win_0_va_fu_160 <= src_kernel_win_0_va_23_reg_1484;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_reg_1432_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_21_fu_176 <= src_kernel_win_0_va_25_fu_995_p3;
                src_kernel_win_0_va_22_fu_180 <= src_kernel_win_0_va_21_fu_176;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_reg_1432_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_23_reg_1484 <= src_kernel_win_0_va_23_fu_959_p3;
                src_kernel_win_0_va_24_reg_1491 <= src_kernel_win_0_va_24_fu_977_p3;
                src_kernel_win_0_va_25_reg_1497 <= src_kernel_win_0_va_25_fu_995_p3;
            end if;
        end if;
    end process;
    OP2_V_1_2_cast_reg_1364(11 downto 4) <= "00000000";
    OP2_V_2_1_cast_reg_1374(10 downto 3) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, exitcond389_i_fu_372_p2, ap_CS_fsm_state2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond389_i_fu_372_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
        ImagLoc_x_cast_fu_698_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ImagLoc_x_fu_692_p2),13));

    ImagLoc_x_fu_692_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(t_V_2_cast_fu_660_p1));
    OP1_V_0_cast_fu_1008_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_22_fu_180),9));
        OP2_V_0_1_cast_fu_344_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_1_read),10));

        OP2_V_0_2_cast_fu_348_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_2_read),10));

    OP2_V_1_2_cast_fu_356_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_1_V_2_read),12));
        OP2_V_1_cast_fu_352_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_1_V_0_read),11));

    OP2_V_2_1_cast_fu_364_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_2_V_1_read),11));
        OP2_V_2_cast_fu_360_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_2_V_0_read),10));

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state9 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, or_cond_i_reg_1462_pp0_iter4_reg, ap_predicate_op161_read_state5, ap_predicate_op172_read_state5)
    begin
                ap_block_pp0_stage0_01001 <= (((or_cond_i_reg_1462_pp0_iter4_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op161_read_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, or_cond_i_reg_1462_pp0_iter4_reg, ap_predicate_op161_read_state5, ap_predicate_op172_read_state5)
    begin
                ap_block_pp0_stage0_11001 <= (((or_cond_i_reg_1462_pp0_iter4_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op161_read_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, or_cond_i_reg_1462_pp0_iter4_reg, ap_predicate_op161_read_state5, ap_predicate_op172_read_state5)
    begin
                ap_block_pp0_stage0_subdone <= (((or_cond_i_reg_1462_pp0_iter4_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op161_read_state5 = ap_const_boolean_1)))));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter2_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op161_read_state5, ap_predicate_op172_read_state5)
    begin
                ap_block_state5_pp0_stage0_iter2 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op161_read_state5 = ap_const_boolean_1)));
    end process;

        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp0_stage0_iter5_assign_proc : process(p_dst_data_stream_V_full_n, or_cond_i_reg_1462_pp0_iter4_reg)
    begin
                ap_block_state8_pp0_stage0_iter5 <= ((or_cond_i_reg_1462_pp0_iter4_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_359_assign_proc : process(exitcond388_i_reg_1432_pp0_iter1_reg, or_cond_i_i_reg_1441_pp0_iter1_reg, icmp_reg_1397, tmp_2_reg_1402)
    begin
                ap_condition_359 <= ((tmp_2_reg_1402 = ap_const_lv1_1) and (or_cond_i_i_reg_1441_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1397 = ap_const_lv1_0) and (exitcond388_i_reg_1432_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_condition_365_assign_proc : process(exitcond388_i_reg_1432_pp0_iter1_reg, or_cond_i_i_reg_1441_pp0_iter1_reg, icmp_reg_1397, tmp_419_1_reg_1406)
    begin
                ap_condition_365 <= ((tmp_419_1_reg_1406 = ap_const_lv1_1) and (or_cond_i_i_reg_1441_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1397 = ap_const_lv1_0) and (exitcond388_i_reg_1432_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter2_state5_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter2_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter2_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, exitcond389_i_fu_372_p2, ap_CS_fsm_state2)
    begin
        if ((((exitcond389_i_fu_372_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op161_read_state5_assign_proc : process(exitcond388_i_reg_1432_pp0_iter1_reg, or_cond_i_i_reg_1441_pp0_iter1_reg, icmp_reg_1397)
    begin
                ap_predicate_op161_read_state5 <= ((or_cond_i_i_reg_1441_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1397 = ap_const_lv1_0) and (exitcond388_i_reg_1432_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op172_read_state5_assign_proc : process(exitcond388_i_reg_1432_pp0_iter1_reg, or_cond_i_i_reg_1441_pp0_iter1_reg, icmp_reg_1397, tmp_s_reg_1388)
    begin
                ap_predicate_op172_read_state5 <= ((tmp_s_reg_1388 = ap_const_lv1_1) and (icmp_reg_1397 = ap_const_lv1_1) and (or_cond_i_i_reg_1441_pp0_iter1_reg = ap_const_lv1_1) and (exitcond388_i_reg_1432_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(exitcond389_i_fu_372_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond389_i_fu_372_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_fu_812_p2 <= (tmp_375_0_not_reg_1392 or tmp_18_fu_716_p2);
    col_assign_3_t_fu_850_p2 <= (tmp_69_reg_1450_pp0_iter1_reg xor ap_const_lv2_3);
        col_assign_cast_fu_822_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_reg_1445),32));

    col_buf_0_val_0_0_fu_867_p3 <= 
        k_buf_0_val_3_q0 when (brmerge_reg_1455_pp0_iter1_reg(0) = '1') else 
        tmp_23_fu_855_p5;
    col_buf_0_val_1_0_fu_886_p3 <= 
        k_buf_0_val_4_q0 when (brmerge_reg_1455_pp0_iter1_reg(0) = '1') else 
        tmp_24_fu_874_p5;
    col_buf_0_val_2_0_fu_905_p3 <= 
        k_buf_0_val_5_q0 when (brmerge_reg_1455_pp0_iter1_reg(0) = '1') else 
        tmp_25_fu_893_p5;
    exitcond388_i_fu_664_p2 <= "1" when (t_V_2_reg_333 = ap_const_lv11_642) else "0";
    exitcond389_i_fu_372_p2 <= "1" when (t_V_reg_322 = ap_const_lv10_386) else "0";
    grp_fu_1258_p0 <= OP2_V_0_1_cast_reg_1349(2 - 1 downto 0);
    grp_fu_1258_p1 <= grp_fu_1258_p10(8 - 1 downto 0);
    grp_fu_1258_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_21_fu_176),10));
    grp_fu_1265_p0 <= OP2_V_0_2_cast_reg_1354(2 - 1 downto 0);
    grp_fu_1265_p1 <= grp_fu_1265_p10(8 - 1 downto 0);
    grp_fu_1265_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_25_reg_1497),10));
    i_V_fu_378_p2 <= std_logic_vector(unsigned(t_V_reg_322) + unsigned(ap_const_lv10_1));
    icmp2_fu_686_p2 <= "0" when (tmp_66_fu_676_p4 = ap_const_lv10_0) else "1";
    icmp_fu_406_p2 <= "0" when (tmp_51_fu_396_p4 = ap_const_lv9_0) else "1";
    isneg_fu_1191_p3 <= p_Val2_4_fu_1185_p2(11 downto 11);
    j_V_fu_670_p2 <= std_logic_vector(unsigned(t_V_2_reg_333) + unsigned(ap_const_lv11_1));
    k_buf_0_val_3_address0 <= tmp_22_fu_825_p1(11 - 1 downto 0);

    k_buf_0_val_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond388_i_reg_1432_pp0_iter1_reg, or_cond_i_i_reg_1441_pp0_iter1_reg, icmp_reg_1397, tmp_2_reg_1402, ap_predicate_op172_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_2_reg_1402 = ap_const_lv1_1) and (or_cond_i_i_reg_1441_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1397 = ap_const_lv1_0) and (exitcond388_i_reg_1432_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond388_i_reg_1432_pp0_iter1_reg, or_cond_i_i_reg_1441_pp0_iter1_reg, icmp_reg_1397, tmp_2_reg_1402, ap_predicate_op172_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_2_reg_1402 = ap_const_lv1_1) and (or_cond_i_i_reg_1441_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1397 = ap_const_lv1_0) and (exitcond388_i_reg_1432_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= tmp_22_fu_825_p1(11 - 1 downto 0);

    k_buf_0_val_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond388_i_reg_1432_pp0_iter1_reg, or_cond_i_i_reg_1441_pp0_iter1_reg, icmp_reg_1397, tmp_419_1_reg_1406, ap_predicate_op172_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_419_1_reg_1406 = ap_const_lv1_1) and (or_cond_i_i_reg_1441_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1397 = ap_const_lv1_0) and (exitcond388_i_reg_1432_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_d1_assign_proc : process(p_src_data_stream_V_dout, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_predicate_op172_read_state5, k_buf_0_val_3_q0, ap_condition_365)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_predicate_op172_read_state5 = ap_const_boolean_1)) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_q0;
            elsif ((ap_const_boolean_1 = ap_condition_365)) then 
                k_buf_0_val_4_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond388_i_reg_1432_pp0_iter1_reg, or_cond_i_i_reg_1441_pp0_iter1_reg, icmp_reg_1397, tmp_419_1_reg_1406, ap_predicate_op172_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_419_1_reg_1406 = ap_const_lv1_1) and (or_cond_i_i_reg_1441_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1397 = ap_const_lv1_0) and (exitcond388_i_reg_1432_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= tmp_22_fu_825_p1(11 - 1 downto 0);

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond388_i_reg_1432_pp0_iter1_reg, or_cond_i_i_reg_1441_pp0_iter1_reg, icmp_reg_1397, tmp_2_reg_1402, ap_predicate_op172_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_2_reg_1402 = ap_const_lv1_1) and (or_cond_i_i_reg_1441_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1397 = ap_const_lv1_0) and (exitcond388_i_reg_1432_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_d1_assign_proc : process(p_src_data_stream_V_dout, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_predicate_op172_read_state5, k_buf_0_val_4_q0, ap_condition_359)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_predicate_op172_read_state5 = ap_const_boolean_1)) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_q0;
            elsif ((ap_const_boolean_1 = ap_condition_359)) then 
                k_buf_0_val_5_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond388_i_reg_1432_pp0_iter1_reg, or_cond_i_i_reg_1441_pp0_iter1_reg, icmp_reg_1397, tmp_2_reg_1402, ap_predicate_op172_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_2_reg_1402 = ap_const_lv1_1) and (or_cond_i_i_reg_1441_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1397 = ap_const_lv1_0) and (exitcond388_i_reg_1432_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    not_i_i_i_fu_1224_p2 <= "0" when (tmp_39_fu_1208_p4 = ap_const_lv4_0) else "1";
    or_cond_i424_i_fu_466_p2 <= (tmp_10_fu_460_p2 and rev_fu_454_p2);
    or_cond_i_fu_817_p2 <= (icmp_reg_1397 and icmp2_fu_686_p2);
    or_cond_i_i_fu_722_p2 <= (tmp_18_fu_716_p2 and rev2_fu_710_p2);
    overflow_fu_1230_p2 <= (tmp_i_i_fu_1218_p2 and not_i_i_i_fu_1224_p2);
    p_Val2_2_fu_1203_p2 <= std_logic_vector(unsigned(tmp6_reg_1527) + unsigned(tmp7_fu_1199_p2));
    p_Val2_4_fu_1185_p2 <= std_logic_vector(unsigned(tmp3_fu_1178_p2) + unsigned(tmp4_cast_fu_1182_p1));
        p_Val2_89_0_2_cast_fu_1051_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1265_p3),12));

    p_Val2_89_1_1_fu_1074_p2 <= std_logic_vector(signed(tmp_463_1_cast_cast_fu_1063_p1) + signed(p_Val2_89_0_2_cast_fu_1051_p1));
    p_Val2_s_fu_1250_p3 <= 
        p_mux_i_i_cast_fu_1236_p3 when (tmp_i_i_91_fu_1244_p2(0) = '1') else 
        p_Val2_2_fu_1203_p2;
    p_assign_1_fu_736_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) - unsigned(t_V_2_cast_fu_660_p1));
    p_assign_2_fu_764_p2 <= std_logic_vector(unsigned(ap_const_lv13_C7E) - unsigned(p_p2_i_i_cast_fu_754_p1));
    p_assign_3_fu_770_p3 <= 
        ImagLoc_x_cast_fu_698_p1 when (or_cond_i_i_fu_722_p2(0) = '1') else 
        p_assign_2_fu_764_p2;
    p_assign_6_1_fu_510_p2 <= std_logic_vector(signed(ap_const_lv11_7FE) + signed(t_V_cast_fu_368_p1));
    p_assign_6_2_fu_536_p2 <= std_logic_vector(signed(ap_const_lv11_7FD) + signed(t_V_cast_fu_368_p1));
    p_assign_7_fu_480_p2 <= std_logic_vector(unsigned(ap_const_lv11_1) - unsigned(t_V_cast_fu_368_p1));
    p_assign_8_fu_504_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(tmp_55_fu_494_p1));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, or_cond_i_reg_1462_pp0_iter4_reg)
    begin
        if (((or_cond_i_reg_1462_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= p_Val2_s_reg_1537;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, or_cond_i_reg_1462_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((or_cond_i_reg_1462_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_mux_i_i_cast_fu_1236_p3 <= 
        ap_const_lv8_FF when (tmp_i_i_fu_1218_p2(0) = '1') else 
        ap_const_lv8_0;
    p_p2_i425_i_fu_486_p3 <= 
        p_assign_7_fu_480_p2 when (tmp_54_fu_472_p3(0) = '1') else 
        tmp_7_fu_434_p2;
    p_p2_i425_i_p_assign_8_fu_562_p3 <= 
        tmp_55_fu_494_p1 when (tmp_13_fu_498_p2(0) = '1') else 
        p_assign_8_fu_504_p2;
        p_p2_i_i_cast1_fu_750_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_p2_i_i_fu_742_p3),14));

        p_p2_i_i_cast_fu_754_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_p2_i_i_fu_742_p3),13));

    p_p2_i_i_fu_742_p3 <= 
        p_assign_1_fu_736_p2 when (tmp_68_fu_728_p3(0) = '1') else 
        ImagLoc_x_fu_692_p2;

    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, exitcond388_i_reg_1432_pp0_iter1_reg, or_cond_i_i_reg_1441_pp0_iter1_reg, icmp_reg_1397, tmp_s_reg_1388)
    begin
        if ((((tmp_s_reg_1388 = ap_const_lv1_1) and (icmp_reg_1397 = ap_const_lv1_1) and (or_cond_i_i_reg_1441_pp0_iter1_reg = ap_const_lv1_1) and (exitcond388_i_reg_1432_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((or_cond_i_i_reg_1441_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1397 = ap_const_lv1_0) and (exitcond388_i_reg_1432_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op161_read_state5, ap_predicate_op172_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op161_read_state5 = ap_const_boolean_1)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    r_V_8_1_2_fu_1083_p0 <= OP2_V_1_2_cast_reg_1364(4 - 1 downto 0);
    r_V_8_1_2_fu_1083_p1 <= r_V_8_1_2_fu_1083_p10(8 - 1 downto 0);
    r_V_8_1_2_fu_1083_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_24_reg_1491),12));
    r_V_8_1_2_fu_1083_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_8_1_2_fu_1083_p0) * unsigned(r_V_8_1_2_fu_1083_p1), 12));
    r_V_8_1_fu_1058_p0 <= OP2_V_1_cast_reg_1359(3 - 1 downto 0);
    r_V_8_1_fu_1058_p1 <= r_V_8_1_fu_1058_p10(8 - 1 downto 0);
    r_V_8_1_fu_1058_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_20_fu_172),11));
    r_V_8_1_fu_1058_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_8_1_fu_1058_p0) * signed('0' &r_V_8_1_fu_1058_p1))), 11));
    r_V_8_2_1_fu_1115_p0 <= OP2_V_2_1_cast_reg_1374(3 - 1 downto 0);
    r_V_8_2_1_fu_1115_p1 <= r_V_8_2_1_fu_1115_p10(8 - 1 downto 0);
    r_V_8_2_1_fu_1115_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_fu_160),11));
    r_V_8_2_1_fu_1115_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_8_2_1_fu_1115_p0) * unsigned(r_V_8_2_1_fu_1115_p1), 11));
    r_V_8_2_fu_1102_p0 <= OP2_V_2_cast_reg_1369(2 - 1 downto 0);
    r_V_8_2_fu_1102_p1 <= r_V_8_2_fu_1102_p10(8 - 1 downto 0);
    r_V_8_2_fu_1102_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_18_fu_164),10));
    r_V_8_2_fu_1102_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_8_2_fu_1102_p0) * signed('0' &r_V_8_2_fu_1102_p1))), 10));
    r_V_8_fu_1012_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(OP1_V_0_cast_fu_1008_p1));
    rev2_fu_710_p2 <= (tmp_67_fu_702_p3 xor ap_const_lv1_1);
    rev_fu_454_p2 <= (tmp_53_fu_446_p3 xor ap_const_lv1_1);
    row_assign_10_0_t_fu_578_p2 <= (y_1_fu_570_p3 xor ap_const_lv2_3);
    row_assign_10_1_t_fu_616_p2 <= (tmp_29_fu_608_p3 xor ap_const_lv2_3);
    row_assign_10_2_t_fu_654_p2 <= (tmp_33_fu_646_p3 xor ap_const_lv2_3);
    sel_tmp7_fu_788_p2 <= (tmp_67_fu_702_p3 or tmp_18_not_fu_782_p2);
    sel_tmp8_fu_794_p2 <= (tmp_20_fu_758_p2 and sel_tmp7_fu_788_p2);
    sel_tmp_cast_fu_778_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_assign_3_fu_770_p3),14));
    src_kernel_win_0_va_23_fu_959_p3 <= 
        tmp_26_fu_948_p5 when (tmp_3_reg_1410(0) = '1') else 
        col_buf_0_val_0_0_fu_867_p3;
    src_kernel_win_0_va_24_fu_977_p3 <= 
        tmp_30_fu_966_p5 when (tmp_3_reg_1410(0) = '1') else 
        col_buf_0_val_1_0_fu_886_p3;
    src_kernel_win_0_va_25_fu_995_p3 <= 
        tmp_34_fu_984_p5 when (tmp_3_reg_1410(0) = '1') else 
        col_buf_0_val_2_0_fu_905_p3;
    t_V_2_cast_fu_660_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_2_reg_333),12));
    t_V_cast_fu_368_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_322),11));
    tmp3_fu_1178_p2 <= std_logic_vector(unsigned(r_V_8_1_2_reg_1512) + unsigned(p_Val2_89_1_1_reg_1507));
        tmp4_cast_fu_1182_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp4_reg_1522),12));

    tmp4_fu_1137_p2 <= std_logic_vector(unsigned(r_V_8_2_1_fu_1115_p2) + unsigned(tmp5_cast_fu_1133_p1));
        tmp5_cast_fu_1133_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp5_fu_1127_p2),11));

    tmp5_fu_1127_p2 <= std_logic_vector(unsigned(tmp_463_2_2_cast_cas_fu_1124_p1) + unsigned(r_V_8_2_fu_1102_p2));
    tmp6_fu_1143_p2 <= std_logic_vector(unsigned(tmp_38_fu_1092_p2) + unsigned(tmp_74_fu_1088_p1));
    tmp7_fu_1199_p2 <= std_logic_vector(unsigned(tmp_75_reg_1517) + unsigned(tmp8_reg_1532));
    tmp8_fu_1149_p2 <= std_logic_vector(unsigned(src_kernel_win_0_va_23_reg_1484) + unsigned(tmp_76_fu_1120_p1));
    tmp_10_fu_460_p2 <= "1" when (signed(tmp_7_fu_434_p2) < signed(ap_const_lv11_384)) else "0";
    tmp_13_fu_498_p2 <= "1" when (signed(p_p2_i425_i_fu_486_p3) < signed(ap_const_lv11_384)) else "0";
    tmp_18_fu_716_p2 <= "1" when (signed(ImagLoc_x_fu_692_p2) < signed(ap_const_lv12_640)) else "0";
    tmp_18_not_fu_782_p2 <= (tmp_18_fu_716_p2 xor ap_const_lv1_1);
    tmp_20_fu_758_p2 <= "1" when (signed(p_p2_i_i_fu_742_p3) < signed(ap_const_lv12_640)) else "0";
    tmp_22_fu_825_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_assign_cast_fu_822_p1),64));
    tmp_27_fu_584_p2 <= (tmp_52_fu_430_p1 xor ap_const_lv2_2);
    tmp_29_fu_608_p3 <= 
        tmp_36_fu_600_p3 when (tmp_56_fu_516_p3(0) = '1') else 
        tmp_27_fu_584_p2;
    tmp_2_fu_412_p2 <= "1" when (t_V_reg_322 = ap_const_lv10_1) else "0";
    tmp_31_fu_622_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(tmp_52_fu_430_p1));
    tmp_33_fu_646_p3 <= 
        tmp_37_fu_638_p3 when (tmp_59_fu_542_p3(0) = '1') else 
        tmp_31_fu_622_p2;
    tmp_36_fu_600_p3 <= 
        tmp_62_fu_590_p2 when (tmp_57_fu_524_p3(0) = '1') else 
        tmp_63_fu_596_p1;
    tmp_375_0_not_fu_390_p2 <= (tmp_s_fu_384_p2 xor ap_const_lv1_1);
    tmp_37_fu_638_p3 <= 
        tmp_64_fu_628_p2 when (tmp_60_fu_550_p3(0) = '1') else 
        tmp_65_fu_634_p1;
    tmp_38_fu_1092_p2 <= std_logic_vector(unsigned(tmp_73_fu_1071_p1) + unsigned(tmp_72_fu_1067_p1));
    tmp_39_cast_fu_440_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(tmp_52_fu_430_p1));
    tmp_39_fu_1208_p4 <= p_Val2_4_fu_1185_p2(11 downto 8);
    tmp_3_fu_424_p2 <= "1" when (unsigned(t_V_reg_322) > unsigned(ap_const_lv10_384)) else "0";
    tmp_419_1_fu_418_p2 <= "1" when (t_V_reg_322 = ap_const_lv10_0) else "0";
        tmp_463_1_cast_cast_fu_1063_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_8_1_fu_1058_p2),12));

    tmp_463_2_2_cast_cas_fu_1124_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_23_reg_1484),10));
    tmp_51_fu_396_p4 <= t_V_reg_322(9 downto 1);
    tmp_52_fu_430_p1 <= t_V_reg_322(2 - 1 downto 0);
    tmp_53_fu_446_p3 <= tmp_7_fu_434_p2(10 downto 10);
    tmp_54_fu_472_p3 <= tmp_7_fu_434_p2(10 downto 10);
    tmp_55_fu_494_p1 <= p_p2_i425_i_fu_486_p3(2 - 1 downto 0);
    tmp_56_fu_516_p3 <= p_assign_6_1_fu_510_p2(10 downto 10);
    tmp_57_fu_524_p3 <= p_assign_6_1_fu_510_p2(10 downto 10);
    tmp_58_fu_532_p1 <= t_V_reg_322(2 - 1 downto 0);
    tmp_59_fu_542_p3 <= p_assign_6_2_fu_536_p2(10 downto 10);
    tmp_60_fu_550_p3 <= p_assign_6_2_fu_536_p2(10 downto 10);
    tmp_61_fu_558_p1 <= t_V_reg_322(2 - 1 downto 0);
    tmp_62_fu_590_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(tmp_58_fu_532_p1));
    tmp_63_fu_596_p1 <= p_assign_6_1_fu_510_p2(2 - 1 downto 0);
    tmp_64_fu_628_p2 <= (tmp_61_fu_558_p1 xor ap_const_lv2_3);
    tmp_65_fu_634_p1 <= p_assign_6_2_fu_536_p2(2 - 1 downto 0);
    tmp_66_fu_676_p4 <= t_V_2_reg_333(10 downto 1);
    tmp_67_fu_702_p3 <= ImagLoc_x_fu_692_p2(11 downto 11);
    tmp_68_fu_728_p3 <= ImagLoc_x_fu_692_p2(11 downto 11);
    tmp_69_fu_808_p1 <= x_fu_800_p3(2 - 1 downto 0);
    tmp_72_fu_1067_p1 <= r_V_8_1_fu_1058_p2(8 - 1 downto 0);
    tmp_73_fu_1071_p1 <= grp_fu_1265_p3(8 - 1 downto 0);
    tmp_74_fu_1088_p1 <= r_V_8_1_2_fu_1083_p2(8 - 1 downto 0);
    tmp_75_fu_1107_p1 <= r_V_8_2_fu_1102_p2(8 - 1 downto 0);
    tmp_76_fu_1120_p1 <= r_V_8_2_1_fu_1115_p2(8 - 1 downto 0);
    tmp_7_fu_434_p2 <= std_logic_vector(signed(ap_const_lv11_7FF) + signed(t_V_cast_fu_368_p1));
    tmp_i_i_91_fu_1244_p2 <= (overflow_fu_1230_p2 or isneg_fu_1191_p3);
    tmp_i_i_fu_1218_p2 <= (isneg_fu_1191_p3 xor ap_const_lv1_1);
    tmp_s_fu_384_p2 <= "1" when (unsigned(t_V_reg_322) < unsigned(ap_const_lv10_384)) else "0";
    x_fu_800_p3 <= 
        p_p2_i_i_cast1_fu_750_p1 when (sel_tmp8_fu_794_p2(0) = '1') else 
        sel_tmp_cast_fu_778_p1;
    y_1_fu_570_p3 <= 
        tmp_39_cast_fu_440_p2 when (or_cond_i424_i_fu_466_p2(0) = '1') else 
        p_p2_i425_i_p_assign_8_fu_562_p3;
end behav;
